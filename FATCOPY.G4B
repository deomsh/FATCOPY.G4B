!BAT
#-#+ FATCOPY.G4B v0.4.1 (20241023), by deomsh. Based on copyFF.bat (:cpa & :copyfiles & :sub-dir => originator of call's seems to be Chenall)
if "%~1"=="" && call :help "smallhelp" &; goto :eof
setlocal && set *
## Parse command-line
debug status | set debugsts= &; set debugsts=%debugsts:~-1,1% && debug 1
debug msg=1
pager status | set pagersts= &; set pagersts=%pagersts:~22%
debug msg=0
pager off
if /i %~1==/? && goto :help
set * && set debugsts=%debugsts% && set pagersts=%pagersts%
set date0=%@date% && set time0=%@time%
set "status=set date0=%date0% ## set time0=%time0% ## debug %debugsts% ## pager %pagersts%"
set date0= && set time0= && set debugsts= && set pagersts=
set "batchsrc=%~dp0"
if /i "%~1"=="--mdbase" && if not "%~2"=="" && set /A mdmem=%~2 > nul && shift && shift
set root=%@root%
set /l sdev=%~d1 &; root %sdev% > nul || echo && echo Source Device does not exist && echo && goto :eov
root %root% > nul
## With /lfn & spaces: double-quote " (= \x22): first and last one is always lost!
## Change to %~pnx1/%~pnx2 for parsing and split later in p, n en x by call
set source=%~dpnx1
if "%~2"=="" && echo && echo Target device not specified. => FATCOPY.G4B /? && echo && goto :eov
set /l tdev=%~d2 &; root %tdev% > nul || echo && echo Target device does not exist && echo && goto :eov
root %root% > nul && set root=
set target=%~dpnx2
if exist mdmem && if %mdmem%<=0x2FFF && echo && echo Base memory is too low => FATCOPY.G4B /? && echo && goto :eov
if exist mdmem && if %mdmem%>=0x3F00 && if %mdmem%<=0xD460 && echo && echo Base memory out of range => FATCOPY.G4B /? && echo && goto :eov
if exist mdmem && if %mdmem%>=0x12000 && if %mdmem%<=12FFF && echo && echo Base memory out of range => FATCOPY.G4B /? && echo && goto :eov
if not exist mdmem && set mdmem=0x3000
## Check for (double) qoutes, forbidden '?' ,"=" and (ls-)spaces
set arg= &; set arg=%source% && call :cleanarg \x22 &; set source=%arg% && set arg=
set arg= &; set arg=%source% && call :forbiden \x3F "goto :eov" &; set source=%arg% && set arg=
if exist gotomsg && echo && echo Character '?' is FORBIDDEN in source && echo && %gotomsg%
set file=%source% && call :lsspaces &; set source=%file% && set file=
## '='=3D replace with question mark ?=3F
set arg=%source% && call :cleanarg \x3D \x3F &; set source=%arg% && set arg=
call :splitarg %source%
set sdev=%dev% && set sdir=%path% && set name1=%name% && set ext1=%ext% && set file1=%file%  && set file=
set dev= && set path= && set name= && set ext= && set file= && set source=
set "arg=%file1% && call :cleanarg \x3F \x3D &; set "FILE1=%arg%" && set arg=
set arg=%target% && call :cleanarg \x22 &; set target=%arg% && set arg=
set arg= &; set arg=%target% && call :forbiden \x3F "goto :eov" &; set target=%arg% && set arg=
if exist gotomsg && echo && echo Character '?' is FORBIDDEN in target && echo && %gotomsg%
set file=%target% && call :lsspaces &; set target=%file% && set file=
set arg=%target% && call :cleanarg \x3D \x3F &; set target=%arg% && set arg=
call :splitarg %target%
set tdev=%dev% && set tdir=%path% && set name2=%name% && set ext2=%ext% && set file2=%file%
set "arg=%file2% && call :cleanarg \x3F \x3D &; set "FILE2=%arg%" && set arg=
set dev= && set path= && set name= && set ext= && set file= && set target=
set arg=
## Placement before :optargs needed
set prompt=1 && set lfprmptd=1 && set lfprmptf=1
shift && shift
call :optargs %* &; if %result%==0 && echo && call :help "smallhelp" && echo && goto :eov
if exist mdmem && if not exist ls && if %mdmem%>=0x3001 && if %mdmem%<=0x4000 && echo && echo Base memory out of range => FATCOPY.G4B /? && echo && goto :eov
if exist LFN &; if not exist %batchsrc%ATTRIBFT.LLL && echo ATTRIBFT.LLL not found, mandatory with switch '/LFN' && set result=0 && goto :eov ! delmod -l ATTRIBFT.LLL > nul || insmod %batchsrc%ATTRIBFT.LLL > nul || echo insmod can not load %batchsrc%ATTRIBFT.LLL && set result=0 && goto :eof
if %copyattr%==Y && if exist ls && if not exist LFN && echo && echo ls-directory parsing with FAT source and target: switch /a only with /lfn && set result=0 && echo && goto :eov
echo -n > (md)%mdmem%+1
if exist noext && set "arg=%noext%"
## :cleanarg \x3B \x20 not good with two or more extensions listed in switch
if exist noext && call :cleanarg \x2E \x3D
if exist noext && set "noext=%arg%"
if exist noext && set "file=%noext%" && call :lsspaces
if exist noext && set "noext=%file%" && set file=
## Replace "/" =2F in source directory with " " =20 for :parsesd
if exist sdir &; call Fn.11 "%sdir%" "\x3D" && pause --wait=0 %sdir% > (md)%mdmem%+1 && cat --locate=\x3D --replace=\x3F (md)%mdmem%+1 > nul && cat (md)%mdmem%+1 | set sdir=
if exist sdir && set arg= &; set "arg=%sdir%" && call :cleanarg \x2F \x20
if exist sdir && set "fslash=%arg%" && set arg= && set lfndir=
if exist sdir && setlocal && call :parsesd %fslash% &; endlocal && set "sd=%sd%" && set lfndir=%lfncatch% && set "sfnsd=%sfnsd%" && set "gotomsg=%gotomsg%" && set "output1=%output1%" && set fslash= &; if exist sfnsd && if /i "%sfnsd%"=="%sd%" && set lfndir=
if exist gotomsg &; %gotomsg%
if exist LFN && if exist sd &; call Fn.11 "%sd%" "\x20" && setlocal && set "file=%sd%" && call :lsspaces &; endlocal && set "sd=%file%"
if not exist SFN && if %lfndir%>=1 && echo && echo Source directory (or a part of PATH1) is a Long File Name => FATCOPY.G4B /? && echo && goto :eov
#IMPOSSIBLE#if exist SFN && if not exist LFN && if %lfndir%>=1 && if not exist sfnsd && echo && echo Source directory (or a part of PATH1) is a Long File Name which Short File Name does not exist && echo && goto :eov
set lfndir=
## Check for * in name1/ext1
if exist name1 && call Fn.11 "%name1%" "?" && echo Wildcard '?' not supperted && set result=0 && goto :eov
if exist name1 && call Fn.11 "%name1%" "*" && call :prsname1 "echo && echo Position of wildcard '*' not allowed => FATCOPY.G4B /? && echo && goto :eov" &; if exist gotomsg && %gotomsg%
if exist ext1 && call Fn.11 "%ext1%" "?" && echo Wildcard '?' not supperted && set result=0 && goto :eov
if exist ext1 && call :prsext1 "echo && echo Position of wildcard '*' not allowed => FATCOPY.G4B /? && echo && goto :eov" &; if exist gotomsg && %gotomsg%
if not exist wcn if not exist wcx || set file1=
if not exist wcn && if not exist wcx && set "file1=%name1%%%ext1%" &; if exist file1 && set s= && set y=
## Check file1/2 for LFN's first is not exist SFN
## Validate /s
#MAYBE#if exist s &; if exist file1 && set s= ! if %noext:~0,5%==/ext: && set s= ! if %x:~0,3%==/x: && set s= ! if exist name1 && if exist ext1 && if not %name1%==* && if not %ext1%==* && set s= ! if exist name1 && if exist ext1 && if %name1%==* && if not %ext1%==* && set s= ! if exist name1 && if exist ext1 && if not %name1%==* && if %ext1%==* && set s= &; if not exist s && echo && echo Switch /s is not valid with copying named files or named extensions && echo && set result=0 && goto :eov
echo -n > (md)%mdmem%+1
set "case=/i"
call :filesystem "%sdev%" &; set /u sourceok=%filesys% && set filesys=
if not exist sourceok && echo && echo Source is not a valid FAT/EXFAT/NTFS/ISO-9660/UDF/EXT/REISER(2)FS etc. device && echo && goto :eov
call :filesystem "%tdev%" &; if /i %filesys:~0,3%==fat && set /u targetok=%filesys% && set filesys= ! set targetok=
if not exist targetok && echo && echo Target is not a valid FAT device && echo && goto :eov
setlocal && call :freeKB "%tdev%" &; if %freeKB%<=1 && echo No free space left on target %tdev% && endlocal && set result=0 && goto :eov ! endlocal && set /a freebyte=%freeKB% * 1k
## Check file1/2 for LFN's first if not exist SFN
if exist file1 &; if exist ext1 && call Fn.11 "%ext1%" ";" &; if not %sourceok%==ISO9660 if not %sourceok%==UDF |; echo -n > (md)%mdmem%+1 && pause --wait=0 "%ext1%" > (md)%mdmem%+1 && cat --locate=\x22 --replace=\x0A --length=1 (md)%mdmem%+1 > nul && cat --locate=\x22\x0A\x00 --replace=\x0A\x00\x00 (md)%mdmem%+1 > nul && cat --locate=; (md)%mdmem%+1 > nul &; set /a extlen=%?% &; cat --length=%extlen% (md)%mdmem%+1 | set ext1= && cat --skip=%extlen% (md)%mdmem%+1 | set suffix= &; set "file1=%name1%%%ext1%"
if exist file1 &; set name1= && set ext1= && if not exist SFN && set lfncatch= && call :lfncatch "%file1%" &; if %utfcatch%==1 && echo UTF-8 character in source FILE1 ! if %lfncatch%==1 && echo Source FILE1 is a Long File Name => FATCOPY.G4B /? ! if %argnum%>=1 && echo File-number in source FILE1 => FATCOPY.G4B /? &; set result=0 && goto :eov
if exist file2 &; if not exist SFN && set lfncatch= && call :lfncatch "%file2%" &; if %utfcatch%==1 && echo UTF-8 character in target FILE2 ! if %lfncatch%==1 && echo Target FILE2 is a Long File Name => FATCOPY.G4B /? ! if %argnum%>=1 && echo File-number in target FILE2 => FATCOPY.G4B /? &; set result=0 && goto :eov
goto :nojumpcheck
cat --locate=\x4E\x54\x46\x53\x20\x20\x20\x20 --length=8 --skip=3 %sdev%+1 > nul && set sourceok=NTFS && set LF=/LF && if not exist ls && set ls=/ls && echo NTFS source found, auto-switch to ls-mode
if not exist sourceok && cat --locate=ntfs\x20\x20\x20\x20 %sdev%+1 > nul && set sourceok=NTFS && set LF=/LF && if not exist ls && set ls=/ls && echo NTFS source found, auto-switch to ls-mode
cat --locate=\x45\x58\x46\x41\x54\x20\x20\x20 --length=8 --skip=3 %sdev%+1 > nul && set sourceok=EXFAT && set LF=/LF && if not exist ls && set ls=/ls && echo EXFAT source found, auto-switch to ls-mode
cat --locate=\x53\xEF %sdev%+3 > nul && set sourceok=EXT && set case= && if not exist ls && set ls=/ls && echo EXT2/3/4 source found, auto-switch to ls-mode
cat --locate=ReIsErFs %sdev%+129 > nul && set sourceok=REISERFS && set case= && if not exist ls && set ls=/ls && echo ReiserFS source found, auto-switch to ls-mode
cat --locate=ReIsEr2Fs %sdev%+129 > nul && set sourceok=REISER2FS && set case= && if not exist ls && set ls=/ls && echo Reiser2FS source found, auto-switch to ls-mode
cat --locate=CD001 --number=1 %sdev%+63 > nul && set sourceok=ISO && set LF=/LF && if not exist ls && set ls=/ls && echo ISO-9660 source found, auto-switch to ls-mode
if not exist sourceok && cat --locate=cd001 --number=1 %sdev%+63 > nul && set sourceok=ISO && set LF=/LF && if not exist ls && set ls=/ls && echo ISO-9660 source found, auto-switch to ls-mode
cat --locate=BEA01 %sdev%+63 > nul && set sourceok=UDF && set case= && set LF=/LF && if not exist ls && set ls=/ls && echo UDF source found, auto-switch to ls-mode
if not exist sourceok && cat --locate=bea01 %sdev%+63 > nul && set sourceok=UDF && set case= && set LF=/LF && if not exist ls && set ls=/ls && echo UDF source found, auto-switch to ls-mode
## Better FAT identifiers SOURCE; only FAT12/16 together
if not exist sourceok && cat --hex --locate=\xEB\x3C\x90 --length=3 %sdev%+1 > nul && set sourceok=FAT && set LF=/LF
if not exist sourceok && cat --hex --locate=\xEB\x58\x90 %sdev%+1 > nul && set sourceok=FAT32 && set LF=/LF
if not exist sourceok && echo && echo Source is not a valid FAT/EXFAT/NTFS/ISO-9660/UDF/EXT/REISER(2)FS device && echo && goto :eov
cat --hex --locate=\xEB\x3C\x90 --length=3 %tdev%+1 > nul && set targetok=FAT
cat --hex --locate=\xEB\x58\x90 --length=3 %tdev%+1 > nul && set targetok=FAT32
if not exist targetok && fat info %tdev% > nul && set targetok=FAT
if not exist targetok && echo && echo Target is not a valid FAT device && echo && goto :eov
:nojumpcheck
if %sourceok:~0,3%==ISO && set sourceok=ISO
if %sourceok%==INITRDFS && set case= && if not exist ls && set ls=/ls && echo INITRDFS source found, auto-switch to ls-mode
if %sourceok%==MINIX && set case= && if not exist ls && set ls=/ls && echo MINIX source found, auto-switch to ls-mode
if %sourceok%==VSTAFS && set case= && if not exist ls && set ls=/ls && echo VSTAFS source found, auto-switch to ls-mode
if %sourceok%==JFS && set case= && if not exist ls && set ls=/ls && echo JFS source found, auto-switch to ls-mode
if %sourceok%==XFS && set case= && if not exist ls && set ls=/ls && echo XFS source found, auto-switch to ls-mode
if %sourceok%==UFS2 && set case= && if not exist ls && set ls=/ls && echo UFS2 source found, auto-switch to ls-mode
if %sourceok%==FFS && set case= && if not exist ls && set ls=/ls && echo FFS source found, auto-switch to ls-mode
if %sourceok%==FB && set case= && if not exist ls && set ls=/ls && echo FB source found, auto-switch to ls-mode
if %sourceok%==TFTP && set case= && if not exist ls && set ls=/ls && echo TFTP source found, auto-switch to ls-mode
if %sourceok%==PXE && set case= && if not exist ls && set ls=/ls && echo PXE source found, auto-switch to ls-mode
if %sourceok%==IPXE && set case= && if not exist ls && set ls=/ls && echo IPXE source found, auto-switch to ls-mode
if %sourceok%==NTFS && set LF=/LF && if not exist ls && set ls=/ls && echo NTFS source found, auto-switch to ls-mode
if %sourceok%==EXFAT && set LF=/LF && if not exist ls && set ls=/ls && echo EXFAT source found, auto-switch to ls-mode
if %sourceok:~0,3%==EXT && set case= && if not exist ls && set ls=/ls && echo EXT2/3/4 source found, auto-switch to ls-mode
if %sourceok%==REISERFS && set case= && if not exist ls && set ls=/ls && echo ReIsErFs source found, auto-switch to ls-mode
if %sourceok%==REISER2FS && set case= && if not exist ls && set ls=/ls && echo ReIsEr2Fs source found, auto-switch to ls-mode
if %sourceok%==ISO && set LF=/LF && if not exist ls && set ls=/ls && echo ISO-9660 source found, auto-switch to ls-mode
if %sourceok%==UDF && set case= && set LF=/LF && if not exist ls && set ls=/ls && echo UDF source found, auto-switch to ls-mode
if %sourceok:~0,3%==FAT && set LF=/LF && if exist ls && if not exist q && echo FAT source found, switched to ls-mode
## Check compatibity
if %sourceok%==NTFS &; if exist z && echo Switch '/z' not compatible with NTFS-source => FATCOPY.G4B /? && set result=0 && goto :eov
delmod -l fat > nul || insmod %batchsrc%fat > nul || insmod (bd)/fat > nul || insmod (bd)/boot/grub/fat > nul || insmod (bd)/grub/fat > nul || insmod (bd)/g4dll/fat > nul || insmod /fat > nul || insmod /boot/grub/fat > nul || insmod /grub/fat > nul || insmod /g4dll/fat > nul || echo && FAT not found => fatcopy.g4b /? && echo && goto :eov
if not exist targetok && fat info %tdev% > nul && set targetok=FAT
if %LFN%==/LFN:@ &; if not %sourceok:~0,3%==FAT && if not %targetok%==FAT && echo && echo Source and target must be FAT with '/LFN[:]@' => FATCOPY.G4B /? && echo && goto :eov
#OLD# Whole story for FAT32 >=4GB
#OLD#if %targetok%==FAT32 && call :FAT32max
#OLD#if %targetok%==FAT32 && if %maxbyte%>=0x100000000 && set tdevice=%tdev%
set targetok= && if not %sourceok%==NTFS && if not %sourceok%==UDF && if not %sourceok%==ISO &; if exist LFN && if not %sourceok:~0,3%==FAT && set sourceok= ! if exist ls && if %copyattr%==Y && if not %sourceok:~0,3%==FAT && set sourceok= ! if not exist LFN && if not %copyattr%==Y && set sourceok=
if exist FILE2 && echo && echo -e \x20Does %FILE2% specify a file name or directory on the target
if exist FILE2 && set xcopy=a && set /p:90 /u "xcopy= (F=file D=directory Q=quit)?"
if exist xcopy && set xcopy=%xcopy:~0,1% &; if /i not %xcopy%==D && if /i not %xcopy%==F && echo && echo File or Directory not specified && echo && goto :eov
if /i %xcopy%==D && set "tdir=%tdir%/%FILE2%" && set file2= && set xcopy= && set FILE2= && echo
if /i %xcopy%==F && echo && set FILE2=
## Align switches
if not exist file1 && if /i %xcopy%==F && echo && echo Source file is not specified && echo && goto :eov
if not exist ls && set e= && set SFN= && set NTFS=
if not exist SFN && set lfprmptd= && set lfprmptf=
if exist ls && if not exist s && set e=
set "act=>" && set "echomsg=&& echo"
if %q%==/q && set echomsg= && set "NULL=> nul" && set q=
if %t%==/t && set v= && set act=
## Needed for skip tdir-part to get sdir in case of saving existing SFN#.ext one directory higher
if %d%==/d && set tdir=%tdir:~,-1% &; if not exist tdir && set ltdir=0
if %d%==/d && if exist tdir && set "tdir=%tdir%" &; set /a ltdir=%@retval% > nul
if %d%==/d &; if exist LFN && if exist sd && set "tdir=%tdir%%%sd%" ! set /u "tdir=%tdir%%%sdir%"
if /i "%sdev%%%sdir%"=="%tdev%%%tdir%" &; if not %LFN%==/LFN:@ && if not exist file2 && echo && echo Can not copy from '%sdev%%%sdir%' to same directory (on same device) && echo && goto :eov ! if %LFN%==/LFN:@ && if not exist file2 && set z=/z
if exist file2 && if /i "%sdev%%%sdir%"=="%tdev%%%tdir%" && if /i "%file2%"=="%file1%" && echo && echo Can not copy file to itself && echo && set result=0 && goto :eov
if exist s && if not exist file1 && if not %LFN%==/LFN:@ && setlocal && set /u "SOURCE=%sdev%%%sdir%" && set /u "TARGET=%tdev%%%tdir%" &; call Fn.11 "%TARGET%" "%SOURCE%" && endlocal && echo && echo Can not copy '%sdev%%%sdir%' with al subdirectories to %tdev%%%tdir% (on same device) && echo && goto :eov ! endlocal
if exist s && if not exist file1 && if %LFN%==/LFN:@ && if not /i "%sdev%%%sdir%"=="%tdev%%%tdir%" && setlocal && set /u "SOURCE=%sdev%%%sdir%" && set /u "TARGET=%tdev%%%tdir%" &; call Fn.11 "%TARGET%" "%SOURCE%" && endlocal && echo && echo Can not copy '%sdev%%%sdir%' with al subdirectories to %tdev%%%tdir% (on same device) && echo && goto :eov ! endlocal
if %LFN%==/LFN:@ && if /i "%sdev%%%sdir%"=="%tdev%%%tdir%" && set copyattr=
if exist nocase && set "case=/i"
## Only directory-errors, no file-error count, not enough variables!
set msds=0 && set msdf=0 && set sdsm=0 && set sdsk=0 && set fcs=0 && set zerobyt=0 && set fco=0 && set catskip=0 && set lfcs=0 && set lzerobyt=0 && set lfco=0 && set lcatskip=0 && set copybyt=0 && set lcopybyt=0 && if %SFN%==/SFN:@ && set makefil=0
if not exist SFN && set lfnskip=0 && set sdlfnsk=0
if exist LFN && set lfnskip=0 && set sdlfnsk=0 && set sdlfnf=0 && set sdlfnd=0
#OLD# Workaround needed until FAT sees right free space on FAT32 partitions > 4GB
#OLD#if exist tdevice && insmod (bd)/fatmini > nul || insmod (bd)/grubutil/fatmini > nul || insmod (bd)/grub/fatmini > nul || insmod /fatmini > nul || insmod /grubutil/fatmini > nul || insmod /grub/fatmini > nul || echo && FATMINI not found => FATCOPY.G4B /? && echo && goto :eov
:mktdir
## Replace "/" in full target directory with space (2F => 20) for separate call arguments
echo
set tdev=%tdev%/
if exist tdir && echo -n > (md)%mdmem%+1
if exist tdir && echo %tdir% > (md)%mdmem%+1
if exist tdir && cat --locate=\x3D --replace=\x3F (md)%mdmem%+1 > nul
if exist tdir && cat --locate=\x2F --replace=\x20 (md)%mdmem%+1 > nul
## Check full target directory for LFN's first if not exist SFN
## Make target directory
if exist tdir && set dirsize=0 && set gotomsg= && set lfncatch= && set td= && setlocal && cat (md)%mdmem%+1 | call :parsetd &; endlocal && set "arg=%arg%" && set "td=%td%" && set dirsize=%dirsize% && set msds=%msds% && set makefil=%makefil% && set lfprmptd=%lfprmptd% && set "lfntd=%lfntd%" && set sdlfnd=%sdlfnd% && set sdlfnsk=%sdlfnsk% && set "gotomsg=%gotomsg%" && set newdir=%newdir% &; if exist LFN &; if not /i "%lfntd%"=="%td%" && if not %LFN%==/LFN:@ && set lfncatch=1 ! set lfncatch=
if exist tdir && if exist gotomsg && %gotomsg%
if exist tdir && if %dirsize%>=1 && echo Error: target directory (or a part of PATH2) is an existing filename && echo && goto :eov
if exist tdir && if not exist ls && if not exist SFN && if %lfncatch%==1 && echo -e %tdir% not for FAT directory-parsing => FATCOPY.G4B /? && echo && goto :eov
if exist tdir && if exist ls && if not exist SFN && if %lfncatch%==1 && echo -e %tdir% is a LFN-directory => FATCOPY.G4B /? && echo && goto :eov
if exist tdir && if exist td && set "tdir=%td%" && set td= && set waittime=
## Clean (md)%mdmem%+1
if exist tdir && set ltdir= && set dirsize= && set argtilde= && echo -n > (md)%mdmem%+1
## Spare var's: set source/target to cd/td or sd/td
if not "%sdev:~-1,1%"=="/"  && set sdev=%sdev%/
if %sdir%==/ && set sdir=
## To identify copy from rootdir: if %sdir%==/ && set sdir=
## Change ?=3F back to ==3D is oke now, must be after mktdir because of /d!
if "%sdir:~0,1%"=="/" && set "sdir=%sdir:~1%"
if not "%tdev:~-1,1%"=="/" && set "tdev=%tdev%/"
if "%tdir%"=="/" && set tdir=
if "%tdir:~0,1%"=="/"  && set "tdir=%tdir:~1%" &; ls %tdir% > nul || set result=0 && goto :exit
if exist sd && set "source=%sdev%%%sd:~1%/" ! set source=%sdev% &; if exist LFN &; if not %sourceok:~0,3%==FAT && set sfnsd= ! if exist sfnsd && set sfnsrc=%sdev%%%sfnsd:~1%/ && set sfnsd= ! set sfnsrc=%sdev%
ls %source% > nul || echo && echo Source directory does not exist or is empty && echo && goto :eov
set "target=%tdev%%%tdir%" &; if not "%target:~-1,1%"=="/" && set "target=%target%/" ! set "target=%target%" &; if exist LFN &; if exist lfntd && set "lfntgt=%tdev%%%lfntd%" ! set lfntgt=%tdev% &; set lfntd= && if not "%lfntgt:~-1,1%"=="/" && set lfntgt=%tdev%
if exist file1 && set "ls=/ls"
if exist LFN && if %sourceok:~0,3%==FAT && if not exist output1 &; setlocal && ATTRIBFT.LLL getchainclus %sdev% 1 &; endlocal && set "output1=%output%"
if exist LFN && if %sourceok:~0,3%==FAT && if %sdev%==%tdev% &; set "output2=%output1%"
if exist LFN && if not exist output2 &; setlocal && ATTRIBFT.LLL getchainclus %tdev% 1 &; endlocal && set "output2=%output%"
set sdev= && set sdir= && set tdev= && set tdir= && set td= && set batchsrc= && set d=
set FILE1=
## md-based directory-parsing
set callsect=256
## Check /n:y & set size of fd-parsing for memdrive
set parsesec=4095
if exist file1 && set name1= && set ext1=
## Needed: doube accounting for source and target with lfn directories
if %ls%==/ls && set sd= && set td=
if %ls%==/ls && setlocal && call :cleanmd %mdmem% %callsect% &; endlocal
if %ls%==/ls && call :lscpa
if %ls%==/ls && goto :exit
set cd=
## dd needs one sector with zero's
set /A ddifsect=%parsesec%+1 > nul
## Parse and verify /a:[-]darsh switch
if exist a && call :parseatt
## Clean memdrive
setlocal && call :cleanmd %mdmem% %ddifsect% &; endlocal
call :fdcpa
goto :exit
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# SUB-ROUTINES
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
:optargs
if "%~1"=="" && set arg= && goto :eof
set "arg=%~1"
if not "%arg:~0,1%"=="/" && echo && echo Switch '%arg%' is not valid => FATCOPY.G4B /? && set result=0 && goto :eof
if "%arg:~0,1%"=="/" && set "arg=%arg:~1%"
call :forbiden \x2F "goto :eof"
## Search double '/'=2F
if exist gotomsg && echo && echo Switch '/%arg%' is not valid => FATCOPY.G4B /? && set result=0 && %gotomsg%
## Needed for /x: and /noext: '='=3D replace with question mark ?=3F
cat --locate=\x3D --replace=\x3F (md)%mdmem%+1 > nul
## Spaces =20 allowed in switch "noext" if between double-quotes!
if not "%arg:~0,4%"=="ext:" && if not "%arg:~0,5%"=="-ext:" && cat --locate=\x20 (md)%mdmem%+1 > nul && echo && echo Switch '/%arg%' with spaces is not valid => FATCOPY.G4B /? && set result=0 && goto :eof
cat (md)%mdmem%+1 | set arg=
if not exist d && if /i "%arg%"=="d" && set d=/d && shift && goto :optargs
if %prompt%==1 && if /i "%arg%"=="-o" && set prompt=0 && shift && goto :optargs
if not exist o && if exist prompt && if /i "%arg%"=="o" && set o=/o && set prompt= && shift && goto :optargs
if not exist o && if not exist i && if /i "%arg%"=="i" && set i=/i && set o=/o && set prompt= && set lfprmptd= && set lfprmptf= && shift && goto :optargs
if not exist t && if /i "%arg%"=="t" && set t=/t && shift && goto :optargs
if not exist q && if /i "%arg%"=="q" && set q=/q && shift && goto :optargs
if /i "%arg%"=="p" && pager on && shift && goto :optargs
if not exist v && if /i "%arg%"=="v" && set v=/v && shift && goto :optargs
if not exist x && if /i "%arg:~0,2%"=="x:" && if "%arg:~3%"=="" && set "x=/%arg%" && shift && goto :optargs
if not exist x && if /i "%arg:~0,3%"=="-x:" && if "%arg:~4%"=="" && set "x=/%arg%" && shift && goto :optargs
if not exist s && if /i "%arg%"=="s" && set s=/s && shift && goto :optargs
if not exist noext && if /i "%arg:~0,4%"=="ext:" && set "noext=/%arg%" &; if "%noext:~5,1%"=="." && set "noext=/ext:%noext:~6%" && shift && goto :optargs ! shift && goto :optargs
if not exist noext && if /i "%arg:~0,5%"=="-ext:" && set "noext=/%arg%" &; if "%noext:~6,1%"=="." && set "noext=/-ext:%noext:~7%" && shift && goto :optargs ! shift && goto :optargs
if not exist a && if /i "%arg:~0,2%"=="a:" && set /l a=%arg:~2% && shift && goto :optargs
if not exist ls && if /i "%arg%"=="ls" && set ls=/ls && shift && goto :optargs
if not exist SFN && if /i "%arg%"=="sfn" && set SFN=/SFN && set ls=/ls && shift && goto :optargs
if not exist SFN && if /i "%arg%"=="sfn:@" && set SFN=/SFN:@ && set ls=/ls && shift && goto :optargs
if not exist SFN && if /i "%arg%"=="sfn@" && set SFN=/SFN:@ && set ls=/ls && shift && goto :optargs
if not exist s && if not exist f && if /i "%arg%"=="e" && set f=/f && set s=/s && shift && goto :optargs
if not exist e && if /i "%arg%"=="f" && set e=/e && set ls=/ls && shift && goto :optargs
if not exist NTFS && if /i "%arg%"=="$" && if /i "%arg:~1%"=="" && set NTFS=/$ && set ls=/ls && shift && goto :optargs
if not exist LF && if /i "%arg%"=="l+f" && set LF=/LF && set ls=/ls && shift && goto :optargs
if not exist nocase && if /i "%arg%"=="nocase" && set "nocase=/nocase" && shift && goto :optargs
if not exist filenum && if /i "%arg:~0,8%"=="filenum:" && set /a filenum=%arg:~8% > nul && set ls=/ls && shift && goto :optargs
if not exist nofilnum && if /i %arg:~0,9%=="filenum:-" && set /a nofilnum=%arg:~9% > nul && set filenum= && set ls=/ls && shift && goto :optargs
if not exist r && if /i "%arg%"=="r" && set r=/r && shift && goto :optargs
if not exist r && if /i "%arg%"=="-r" && set r=/-r && shift && goto :optargs
if not exist maxfiles && if /i "%arg:~0,9%"=="maxfiles:" && if not /i "%arg:~9%"=="" && set /a maxfiles=%arg:~9% > nul && shift && goto :optargs
if not exist maxbyte && if /i "%arg:~0,8%"=="maxbyte:" && if not /i "%arg:~8%"=="" && set /a maxbyte=%arg:~8% > nul && shift && goto :optargs
## New for FAT LFN
if not exist LFN && if /i "%arg%"=="lfn" && set LFN=/LFN && set ls=/ls && set SFN=/SFN && shift && goto :optargs
if not exist LFN && if /i "%arg%"=="lfn:case" && set LFN=/LFN:case && set ls=/ls && set SFN=/SFN && shift && goto :optargs
## New for Copy Zerobyt
if not exist z && if /i "%arg%"=="z" && set z=/z && shift && goto :optargs
## New for Copy All Sfn Attributes
if not exist copyattr && if /i "%arg%"=="a" && set copyattr=Y && shift && goto :optargs
## New for sfn@2lfn
if not exist LFN && if /i "%arg%"=="lfn:@" && set LFN=/LFN:@ && set SFN=/SFN && shift && goto :optargs
if not exist LFN && if /i "%arg%"=="lfn@" && set LFN=/LFN:@ && set SFN=/SFN && shift && goto :optargs
if "%~2"=="" && echo && echo Switch '%~1' is not valid ! echo && echo One er more switches '%*' are not valid
set result=0 && goto :eof
::
:filesystem
setlocal && set * && set mdmem=%mdmem% && set mdbase=%msbase%
if not exist mdbase && set mdbase=%mdmem%
set device=%~1
echo -n > (md)%mdbase%+1
errorcheck off
debug msg=1
if exist device && vol %device% > (md)%mdbase%+1
debug msg=0
cat --locate=\x0A --number=1 (md)%mdbase%+1 > nul &; set /a skip=%?% > nul
if exist device && if exist skip && set filesys=fat12 &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=fat16 &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=fat32 &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=ntfs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=exfat &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=ext2fs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=iso9660 &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=reiserfs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=udf &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=initrdfs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=minix &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=vstafs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=jfs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=xfs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=
if exist device && if exist skip && if not exist filesys &; set filesys=fat &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=ufs2 &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=ffs &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=fb &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=tftp &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=pxe &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=ipxe &; cat --skip=%skip% --locate=%filesys% (md)%mdbase%+1 > nul || set filesys=
endlocal && set filesys=%filesys%
goto :eof
::
:cleanarg
setlocal && set * && set mdmem=%mdmem% && set file=%file% && set arg=%arg%
set char1=%~1
set char2=%~2
## Absolutely needed with 'write'
echo -n > (md)%mdmem%+1
if not %char1%==\x22 && pause --wait=0 %arg% > (md)%mdmem%+1
if %char1%==\x22 && write (md)%mdmem%+1 %arg%\0
if not exist char2 && call :nochars %char1%
if exist char2 && cat --locate=%char1% --replace=%char2% (md)%mdmem%+1 > nul
cat (md)%mdmem%+1 | set arg=
echo -n > (md)%mdmem%+1
set char1= && set char2=
endlocal && set arg=%arg%
goto :eof
::
:forbiden
## Search first argument and set second
set gotomsg= && set message=
set message=%~1
echo -n > (md)%mdmem%+1
pause --wait=0 %arg% > (md)%mdmem%+1
cat --locate=%message% (md)%mdmem%+1 > nul && set "gotomsg=%~2"
set message=
goto :eof
::
:splitarg
setlocal && set *
set dev= && set path= && set name= && set ext= && set file=
set dev=%~d1
set path=%~p1
set name=%~n1
set ext=%~x1
set file=%~nx1
endlocal && set dev=%dev% && set path=%path% && set name=%name% && set ext=%ext% && set file=%file%
goto :eof
::
:parsesd
if "%~1"=="" && goto :eof
set arg= && set argname= && set argext= && set sfnarg= && set higharg= && set largname= && set largext=
if not exist lfndir && set lfndir=0
## if "%arg:~0,1%"==""" doesn't function (but see Jaclaz' de_quote.g4b!)
set "argname=%~n1" &; set /a largname=%@retval% > nul &; call Fn.11 "%argname%" "\x3F" && pause --wait=0 %argname% > (md)%mdmem%+1 && cat --locate=\x3F --replace=\x3D --length=%largname% (md)%mdmem%+1 > nul && cat --length=%largname% (md)%mdmem%+1 | set argname=
set "argext=%~x1" &; set /a largext=%@retval% > nul && if exist argext &; call Fn.11 "%argext%" "\x3F" && pause --wait=0 %argext% > (md)%mdmem%+1 && cat --locate=\x3F --replace=\x3D --length=%largext% (md)%mdmem%+1 > nul && cat --length=%largext% (md)%mdmem%+1 | set argext=
set "arg=%argname%%%argext%"
#MaybeNot#call :lfncatch &; set lfncatch=%lfncatch% &; if not %lfncatch%==1 && set /u arg=%arg%
if exist LFN && set lfncatch=
call :lfncatch &; if %utfcatch%==1 && set "gotomsg=echo UTF-8 characters in Source Directory not supported && goto :eov" && goto :eof
if not exist SFN && if %lfncatch%==1 && set "gotomsg=echo %sdev%%%sd%%%arg% is a LFN-directory => FATCOPY.G4B /? && goto :eov" && goto :eof
set argtilde=
if %lfncatch%==1 && set /a lfndir=%lfndir%+1 > nul && if exist LFN && fat info %sdev% > nul && setlocal &; if exist sd && ATTRIBFT.LLL getsfn input="%output1%" "%sdev%%%sd%/%arg%" ! ATTRIBFT.LLL getsfn input="%output1%" "%sdev%/%arg%" &; if exist result && endlocal && set sfnarg=%result% && set "output1=%output%" ! echo $[0x00]"$[]%message%$[0x00]" && endlocal && set "output1=%output%"
if exist LFN && if %lfncatch%==1 && if exist sfnarg && setlocal && ATTRIBFT.LLL getlfn input="%output1%" "%sdev%/%sd%/%sfnarg%" &; if not exist result && endlocal ! endlocal && set "arg=%result%"
if exist LFN && if not %LFN%==/LFN:@ && if not %lfncatch%==1 && fat info %sdev% > nul && setlocal && set /u higharg=%arg% &; ATTRIBFT.LLL getlfn input="%output1%" "%sdev%/%sd%/%higharg%" &; if not exist result && endlocal && set /u arg=%arg% ! endlocal && set "arg=%result%" && set higharg=%higharg%
if %LFN%==/LFN:case && if not %lfncatch%==1 &; fat info %sdev% > nul |; setlocal && set /u higharg=%arg% &; if %higharg%==%arg% && endlocal ! endlocal && set higharg=%higharg%
#BAD!#if exist SFN && if %lfncatch%==1 && setlocal && set tdev=%sdev%/ && set td=%sd% && call :lfn2sfn &; endlocal && set "lfnarg=%arg%" && set arg=%sfndir%
set "sd=%sd%/%arg%" && if exist LFN &; if %lfncatch%==1 && if exist sfnarg && set /u "sfnsd=%sfnsd%/%sfnarg%" ! if exist higharg && set "sfnsd=%sfnsd%/%higharg%" ! set sfnsd=%sfnsd%/%arg%
shift
goto :parsesd
::
:parsetd
#OKE_45-50vars##echo -n > (md)0x302+60 && set > (md)0x302+60 && raw cat --locate=\x0A (md)0x302+60 > nul &; echo %0 NUMVARS=%@retval%
echo -n > (md)0x302+60 && set > (md)0x302+60 && raw cat --locate=\x0A (md)0x302+60 > nul &; if %@retval%>=59 && echo %0 NUMVARS>=59
if "%~1"=="" && goto :eof
set "message=goto :eov"
set arg= && set larg= && set argname= && set largname= && set argext= && set largext= && set argtilde= && set lfncatch= && set lfnarg= && set needKB= && set higharg=
set batchsrc= && set status= && set prompt= && set lfprmptf= && set freebyte=
set "argname=%~n1" &; set /a largname=%@retval% > nul &; call Fn.11 "%argname%" "\x3F" && pause --wait=0 %argname% > (md)%mdmem%+1 && cat --locate=\x3F --replace=\x3D --length=%largname% (md)%mdmem%+1 > nul && cat --length=%largname% (md)%mdmem%+1 | set argname=
set "argext=%~x1" &; set /a largext=%@retval% > nul && if exist argext &; call Fn.11 "%argext%" "\x3F" && pause --wait=0 %argext% > (md)%mdmem%+1 && cat --locate=\x3F --replace=\x3D --length=%largext% (md)%mdmem%+1 > nul && cat --length=%largext% (md)%mdmem%+1 | set argext=
set "arg=%argname%%%argext%"
## Filter LFN 6x- max 8+3+1=12 still needed! Also: periods in argname, spaces and ms-dos forbidden-list, like '+'
#MaybeNot#call :lfncatch &; set lfncatch=%lfncatch% &; if not %lfncatch%==1 && set /u arg=%arg%
if exist LFN && set lfncatch=
call :lfncatch &; if %utfcatch%==1 && set "gotomsg=echo UTF-8 characters in Target Directory not supported && goto :eov" && goto :eof
if not exist SFN && if %lfncatch%==1 && set "gotomsg=echo %tdev%%%td%%%arg% is a LFN-directory => FATCOPY.G4B /? && goto :eov" && goto :eof
if exist LFN && ATTRIBFT.LLL getsfn input="%output2%" "%tdev%%%td%%%arg%" &; if exist result && set "lfnarg=%arg%" && set arg=%result% && set result= && set "output2=%output%" && set output= &; echo -e Target directory exists:$[0x00]"$[]%tdev%%%lfntd%%%lfnarg%$[0x00]" %NULL% && set newdir=0 && goto :skipt
if exist LFN && if %LFN%==/LFN:@ && ATTRIBFT.LLL getlfn input="%output2%" "%tdev%%%td%%%arg%" &; if exist result && set "lfnarg=%result%" && set result= && set "output2=%output%" && set output= &; echo -e Target directory exists:$[0x00]"$[]%tdev%%%lfntd%%%lfnarg%$[0x00]" %NULL% && set newdir=0 && goto :skipt
if exist LFN && if not %lfncatch%==1 && ATTRIBFT.LLL getlfn input="%output2%" "%tdev%%%td%%%arg%" &; if exist result && set "lfnarg=%result%" && set /u higharg=%arg% && set result= && set "output2=%output%" && set output= &; echo -e Target directory exists:$[0x00]"$[]%tdev%%%lfntd%%%lfnarg%$[0x00]" %NULL% && set newdir=0 && goto :skipt
if %LFN%==/LFN:@ && if not %lfncatch%==1 && if "%~2"=="" &; if not /i "%sdev%%%sdir%"=="%tdev%%%tdir:~1%" && call Fn.11 "%arg%" "~" && setlocal && set sdir=%sdir:~1,-1% && set arg=%arg% &; set /a arglen=%@retval% > nul &; call if /i %^sdir:~-%arglen%,%arglen%%%==%arg% && call :sfn@2lfn "%sdev%/%sdir%" "#" ! set lfnarg= &; if exist lfnarg && endlocal && set "lfnarg=%lfnarg%" ! endlocal
if %LFN%==/LFN:@ && if not %lfncatch%==1 && if /i "%sdev%%%sdir%"=="%tdev%%%tdir:~1%" && call Fn.11 "%arg%" "~" && setlocal && call :sfn@2lfn "%tdev%%%td%%%arg%" "#" &; if exist lfnarg && endlocal && set "lfnarg=%lfnarg%" ! endlocal &; if exist lfnarg && goto :makelfndir ! goto :skiptd
if %LFN%==/LFN:@ && if not %lfncatch%==1 && if /i "%sdev%%%sdir%"=="%tdev%%%tdir:~1%" && goto :skiptd
if %LFN%==/LFN:case && if not %lfncatch%==1 && setlocal && set /u higharg=%arg% &; if %higharg%==%arg% && endlocal ! endlocal && set higharg=%higharg% && set lfnarg=%arg%
if exist SFN && if %lfncatch%==1 && set "lfnarg=%arg%" && setlocal && set output1= && set output2= && call :lfn2sfn &; endlocal && set arg=%sfndir% && set lfprmptd=%lfprmptd% && set makefil=%makefil% && set r=%r% && set newdir=%newdir% &; if "%gotomsg:~0,5%"=="Abort" && set "gotomsg=set result=0 && echo Aborted by user %NULL% && goto :eov" && goto :eof
#VAR>=60#if exist SFN && if %lfncatch%==1 && set "lfnarg=%arg%" && setlocal && call :lfn2sfn &; endlocal && set arg=%sfndir% && set lfprmptd=%lfprmptd% && set makefil=%makefil% && set r=%r% &; if "gotomsg:~0,5%"=="Abort" && set "gotomsg=set result=0 && echo Aborted by user %NULL% && goto :eov" && goto :eof
## Directory exists as filename
if not exist LFN && set /u arg=%arg% ! if not %lfncatch%==1 && if not exist higharg && set /u arg=%arg%
if exist %tdev%%%td%%%arg% && echo %tdev%%%td%%%arg% is an existing File Name %NULL% && set /a dirsize=%dirsize%+1 > nul && goto :eof
## Existence target directory:
if not %lfncatch%==1 && fat dir %tdev%%%td%%%arg% > nul && set newdir=0 &; if exist higharg && echo -e Target directory exists:$[0x00]"$[]%tdev%%%lfntd%%%higharg%$[0x00]" %NULL% ! if exist LFN && echo -e Target directory exists:$[0x00]"$[]%tdev%%%lfntd%%%arg%$[0x00]" %NULL% ! echo Target directory exists: %tdev%%%td%%%arg% %NULL% &; if exist higharg && goto :makelfndir ! goto :skipt
if %lfncatch%==1 && setlocal && ATTRIBFT.LLL getsfn %tdev%%%lfntd%%%lfnarg% &; if exist result && endlocal ! endlocal && set /u higharg=%arg%
if %lfncatch%==1 && fat dir %tdev%%%td%%%arg% > nul && set newdir=0 &; if exist higharg && echo -e Target directory exists:$[0x00]"$[]%tdev%%%lfntd%%%higharg%$[0x00]" %NULL% && goto :makelfndir ! if exist LFN && echo -e Target directory exists:$[0x00]"$[]%tdev%%%lfntd%%%lfnarg%$[0x00]" %NULL% && goto :skipt ! goto :skipt
#DEBUG#if not %lfncatch%==1 &; if exist LFN && echo -e %act%make directory A %tdev%%%lfntd%%%arg% %NULL% ! echo %act%make directory A %tdev%%%td%%%arg% %NULL%
if not %lfncatch%==1 &; if exist LFN && echo -e %act%make directory %tdev%%%lfntd%%%arg% %NULL% ! echo %act%make directory %tdev%%%td%%%arg% %NULL% &; set newdir=1
## Waitloop target directory
set waittime=0
:tdagain
if not %t%==/t && fat mkdir %tdev%%%td%%%arg% > nul || echo Error: make target directory %tdev%%%td%%%arg% && set "gotomsg=%message%" && goto :eof
if %t%==/t && set /a msds=%msds%+1 > nul &; if exist LFN && goto :makelfndir ! goto :skipt
pause --wait=%waittime%
if %waittime%>=7 && echo make target directory failed: %tdev%%%td%%%arg% && set "gotomsg=%message%" && goto :eof
fat dir %tdev%%%td%%%arg% > nul || set /a waittime=%waittime%+1 > nul && goto :tdagain
set /a msds=%msds%+1 > nul
:makelfndir
if exist LFN && if %lfncatch%==1 && setlocal && ATTRIBFT.LLL getlfn input="%output2%" "%tdev%%%td%%%arg%" &; if exist result && endlocal && set lfncatch= && set lfnarg= ! endlocal
if exist LFN && if exist lfnarg &; if exist higharg && echo -e %act%make directory LFN:$[0x00]"$[]%lfnarg%$[0x00]" $[0x08]%higharg% %NULL% ! echo -e %act%make directory LFN:$[0x00]"$[]%lfnarg%$[0x00]" $[0x08]%arg% %NULL% &; if %t%==/t && set /a sdlfnd=%sdlfnd%+1 > nul
if not %t%==/t && if exist lfnarg && if not exist higharg && setlocal && ATTRIBFT.LLL makelfn input="%output2%" "%tdev%%%td%%%lfnarg%" "%arg%" &; if not exist result && echo -e make directory LFN:$[0x00]"$[]%tdev%%%lfntd%%%lfnarg%$[0x00]"$[]failed && echo $[0x00]"$[]%message%$[0x00]" && endlocal && set /a sdlfnsk=%sdlfnsk%+1 > nul ! if exist message && endlocal ! endlocal && set /a sdlfnd=%sdlfnd%+1 > nul
if not %t%==/t && if exist lfnarg && if exist higharg && setlocal && ATTRIBFT.LLL makelfn input="%output2%" "%tdev%%%td%%%lfnarg%" "%higharg%" &; if not exist result && echo -e make directory LFN:$[0x00]"$[]%tdev%%%lfntd%%%lfnarg%$[0x00]"$[]failed && echo $[0x00]"$[]%message%$[0x00]" && endlocal && set /a sdlfnsk=%sdlfnsk%+1 > nul ! if exist message && endlocal ! endlocal && set /a sdlfnd=%sdlfnd%+1 > nul &; set arg=%higharg%
:skipt
## Save SFN#number.ext if SFN~number.ext exists and if not identical on target already (check with crc32). If /d and if exist tdir, call set sd=td and cut out tdir-part with help of ltdir (set before call :parsetd)
if %SFN%==/SFN:@ && if exist argtilde && if not %case% %arg%==%argtilde% && call set sd=%^td:~%ltdir%%% &; if exist %sdev%/%sd%%%argtilde% && raw crc32 %sdev%/%sd%%%argtilde% | set srccrc32=
if %SFN%==/SFN:@ && if exist argtilde && if not %case% %arg%==%argtilde% && if exist %tdev%%%td%%%argtilde% && raw crc32 %tdev%%%td%%%argtilde% | set tgtcrc32=
if %SFN%==/SFN:@ && if exist argtilde && if not %case% %arg%==%argtilde% && if exist srccrc32 && if exist tgtcrc32 && if not %srccrc32%==0x0 && if not %tgtcrc32%==0x0 && if "%srccrc32%"=="%tgtcrc32%" && goto :skiptd
if %SFN%==/SFN:@ && if exist argtilde && if %t%==/t && call set sd=%^td:~%ltdir%%% &; if exist %sdev%/%sd%%%argtilde% && echo %act%save %argtilde% %NULL% && set /a makefil=%makefil%+1 > nul && goto :skiptd
if %SFN%==/SFN:@ && if exist argtilde && if not %t%==/t && call set sd=%^td:~%ltdir%%% &; if exist %sdev%/%sd%%%argtilde% && echo %act%copy %argtilde% (saved LFN) %NULL% &; fat copy /o %sdev%/%sd%%%argtilde% %tdev%%%td% && set tdev=%tdev% ! set needKB=1 && set freeKB= &; if %needKB%==1 && call :faterror "%sdev%/%sd%%%argtilde% %tdev%%%td%" "goto :eof" "%tdev%%%td%%argtilde%" &; if %freeKB%>=%needKB% && if exist %tdev%%%td%%%argtilde% && set /a makefil=%makefil%+1 > nul ! if exist gotomsg && %gotomsg%
if %copyattr%==Y && if %sourceok:~0,3%==FAT && set arglen= && set begin= && set next= && set length= &; if exist sfndir && set sfndir=%sfndir%/%arg% ! set sfndir= &; if not exist sfndir && set arg=%arg% &; set /a arglen=%@retval% &; call Fn.11 %sfnsd% / &; set /a begin=%@retval% &; call Fn.11 %sfnsd% %arg% &; set /a next=%@retval% &; set /a length=%next%-%begin%+%arglen% &; call set sfndir=%^sfnsd:~0,%length%%%
if %copyattr%==Y && if exist sfndir && if %sourceok:~0,3%==FAT && set arglen= && set begin= && set next= && set length= && setlocal && set copyattr=a && call :copyattributes "%sdev%%%sfndir%" "%tdev%%%td%%%arg%" &; if %success%==Y && if not exist LFN && endlocal && set "output1=%output1%" && set "output2=%output2%" ! if %success%==Y && endlocal ! endlocal
:skiptd
set "td=%td%%%arg%/" && if exist LFN &; if exist lfnarg && set "lfntd=%lfntd%%%lfnarg%/" ! set "lfntd=%lfntd%%%arg%/"
shift
goto :parsetd
::
:lsspaces
setlocal && set * && set mdmem=%mdmem% && set file=%file%
set numspace= && set skip=0
echo -n > (md)%mdmem%+1
pause --wait=0 %file% > (md)%mdmem%+1
cat --locate=\x20 (md)%mdmem%+1 > nul ;; set /a numspace=%@retval% > nul
if %numspace%==0 && endlocal && set "file=%file%" && goto :eof
:spaceloop
if %numspace%==0 && cat (md)%mdmem%+1 | set file= &; endlocal && set "file=%file%" && goto :eof
cat --skip=%skip% --locate=\x20 --number=1 (md)%mdmem%+1 > nul ;; set /A skip=%?% > nul
set /A skipmin1=%skip%-1 > nul
cat --skip=%skipmin1% --locate=\x5C --number=1 (md)%mdmem%+1 > nul ;; set /A skipmin1=%?% > nul
if %skipmin1%>=1 && set /A skipmin1=%skipmin1%+1 > nul
if %skip%==%skipmin1% && set /a numspace=%numspace%-1 > nul && set /A skip=%skip%+2 > nul && goto :spaceloop
set /A seek=%skip%+1 > nul
raw dd if=(md)%mdmem%+1 of=(md)%mdmem%+1 bs=1 skip=%skip% seek=%seek%
cat --skip=%skip% --locate=\x20 --replace=\x5C --number=1 (md)%mdmem%+1 > nul
set /a numspace=%numspace%-1 > nul
if %numspace%==0 && cat (md)%mdmem%+1 | set file= &; endlocal && set file=%file% && goto :eof
set /A skip=%skip%+2 > nul
goto :spaceloop
::
:fdcpa
## Parse source-directory: files only
if %parsedir%==0 && fat dir /a%a% %source%%%cd% > (md)%mdmem%+%parsesec%
if %a:~0,1%==d && fat dir /a%a% %source%%%cd% > (md)%mdmem%+%parsesec%
if not %a:~0,1%==d && fat dir /a-d%a% %source%%%cd% > (md)%mdmem%+%parsesec%
cat --locate=\x5D --number=1 (md)%mdmem%+1 > nul ;; set /A skipbyt0=%?%+1 > nul
raw dd if=(md)%mdmem%+%ddifsect% of=(md)%mdmem%+%parsesec% bs=1 skip=%skipbyt0% > nul
if not exist skipbyt0 && goto :skipcall
set findsect=0 && set skipbyt0=0
:skiploop
if exist skipbyt0 && cat --skip=%skipbyt0% (md)%mdmem%+%parsesec% | call :fdcopy
if exist maxfiles && if %fcs%>=%maxfiles% && goto :eof
if exist maxbyte && if exist gotomsg3 && %gotomsg3%
## Check unprocessed output after first call > about 3045 files (size of one 'fat dir'-line: 29-59 bytes)
set skipbyt0=
set /A findsect=%findsect%+%callsect% > nul
if %findsect%>=%parsesec% && set findsect= && goto :skipcall
cat --locate=\x0A (md)%mdmem%+%findsect% > nul ;; set /A skipbyt1=%?% > nul
set /A checkbyt=%findsect% * 0x200 - 0x127 > nul
if %skipbyt1%<=%checkbyt% && set findsect= && goto :skipcall
cat --locate=%arg% (md)%mdmem%+%findsect% > nul ;; set /A argbyt1=%?% > nul
cat --locate=\x0A (md)%mdmem%+%findsect% > nul ;; set /a minbyt1=%@retval%-1 > nul
cat --locate=\x0A --number=%minbyt1% (md)%mdmem%+%findsect% > nul ;; set /A minbyt1=%?% > nul
cat --locate=\x0A (md)%mdmem%+%findsect% > nul ;; set /a minbyt2=%@retval%-2 > nul
cat --locate=\x0A --number=%minbyt2% (md)%mdmem%+%findsect% > nul ;; set /A minbyt2=%?% > nul
cat --locate=\x0A (md)%mdmem%+%findsect% > nul ;; set /a minbyt3=%@retval%-3 > nul
cat --locate=\x0A --number=%minbyt3% (md)%mdmem%+%findsect% > nul ;; set /A minbyt3=%?% > nul
cat --locate=\x0A (md)%mdmem%+%findsect% > nul ;; set /a minbyt4=%@retval%-4 > nul
cat --locate=\x0A --number=%minbyt4% (md)%mdmem%+%findsect% > nul ;; set /A minbyt4=%?% > nul
cat --locate=\x0A (md)%mdmem%+%findsect% > nul ;; set /a minbyt5=%@retval%-5 > nul
cat --locate=\x0A --number=%minbyt5% (md)%mdmem%+%findsect% > nul ;; set /A minbyt5=%?% > nul
set /A maxsec=%findsect%+0x001 > nul
cat --locate=\x0A --skip=%skipbyt1% --number=2 (md)%mdmem%+%maxsec% > nul ;; set /A maxbyt1=%?% > nul
if %argbyt1%>=%minbyt5% && set skipbyt0=%minbyt4%
if %argbyt1%>=%minbyt4% && set skipbyt0=%minbyt3%
if %argbyt1%>=%minbyt3% && set skipbyt0=%minbyt2%
if %argbyt1%>=%minbyt2% && set skipbyt0=%minbyt1%
if %argbyt1%>=%minbyt1% && set skipbyt0=%skipbyt1%
if %argbyt1%>=%skipbyt1% && set skipbyt0=%maxbyt1%
set skipbyt1= && set checkbyt= && set minbyt1= && set minbyt2= && set minbyt3= && set minbyt4= && set minbyt5= && set maxbyt1= && set argbyt1= && set maxsec=
goto :skiploop
:skipcall
## Clean memdrive
setlocal && call :cleanmd %mdmem% %ddifsect% &; endlocal
set skipbyt0= && set skipbyt1= && set checkbyt= && set minbyt1= && set minbyt2= && set minbyt3= && set minbyt4= && set minbyt5= && set maxbyt1= && set argbyt1= && set maxsec=
if %a:~0,1%==d && if exist NULL && goto :eof
if not %s%==/s && goto :fddir
## Output messages after finish copying a directory
if %lcopybyt%<=1048575 && set "lcopybyt=%lcopybyt% byte"
## Cannot divide above 0x7FFFFFFF!
if %lcopybyt%>=1048576 && if %lcopybyt%<=0x7FFFFFFF && set /a lcopybyt=%lcopybyt%/1024 > nul &; set "lcopybyt=%lcopybyt% KiB"
if %lcopybyt%>=0x80000000 && set /a lcopybyt=%lcopybyt:~0,-3% > nul &; set "lcopybyt=%lcopybyt% KB"
if %lfcs%==0 if %lfco%==0 || echo Copied %lcopybyt% from directory %source%%%cd% %NULL%
## Errors not needed with FAT errorcheck (without: change #)
if %lfcs%==0 if %lfco%==0 if %lcatskip%==0 |; if %t%==/t && echo Files to copy/overwrite/skip: %lfcs%/%lfco%/%lcatskip% %NULL% %echomsg% ! echo Files copied/overwritten/skipped: %lfcs%/%lfco%/%lcatskip% %NULL% %echomsg%
:fddir
## Reset local counters
if %a:~0,1%==d && goto :eof
if %parsedir%==0 && goto :eof
## Test show directories in trial-mode
setlocal && call :cleanmd %mdmem% %callsect% &; endlocal
## Parse source-directory: directories only
fat dir /ad %source%%%cd% > (md)%mdmem%+%callsect%
set skipbyt0=
cat --locate=\x5D --number=1 (md)%mdmem%+1 | set skipbyt0=
if exist skipbyt0 && set "skipbyt0=0x%skipbyt0%" &; set /A skipbyt0=%skipbyt0%+1 > nul
if exist skipbyt0 && set parselen= && cat --skip=%skipbyt0% --locate=\x00 --number=1 (md)%mdmem%+%callsect% > nul &; set /A parselen=%?%-1 &; if %parselen%<=%skipbyt0% && set parselen= ! set /A parselen=%parselen%-%skipbyt0%
## Reset local counters if exist parselen and call :fdcopy
if exist skipbyt0 && if exist parselen && set lfcs=0 && set lzerobyt=0 && set lfco=0 && set lcatskip=0 && set lcopybyt=0 && cat --skip=%skipbyt0% --length=%parselen% (md)%mdmem%+%callsect% | call :fdcopy
set skipbyt0= && set parselen=
setlocal && call :cleanmd %mdmem% %callsect% &; endlocal
goto :eof
::
:fdcopy
if %lastkey%==Q && goto :eof ! if exist lastkey && set lastkey=
setlocal && set * && call :lastkey "Esc" &; if not %lastkey%==0x51 && if not %lastkey%==0x71 && endlocal && set lastkey=%ls% ! endlocal && set lastkey=Q && goto :eof
if "%~1"=="" goto :eof
if "%~2"=="" goto :eof
if "%~3"=="" goto :eof
if exist maxfiles && if %fcs%>=%maxfiles% && goto :eof
if exist maxbyte && if %copybyt%>=%maxbyte% && set "gotomsg3=goto :eof" && goto :eof
## Parse %-arguments
set arg= && set larg= && set argname= && set largname= && set argext= && set largext= && set sfndir= && set argafter= && set argsize= && set argcrc32= && set copycrc3= && set lcmd= && set needKB=
set lfnarg=
set "arg=%~1" &; set /a larg=%@retval% > nul
if %larg%==10 && if not %arg:~8,1%==. && if not %arg:~7,1%==. && if not %arg:~6,1%==. && shift
set arg=%~1 &; if %arg:~2,1%==: && shift
set arg=%~1 &; if %arg:~0,1%==< && if %arg:~-1,1%==> && set /u sfndir=%arg:~1,-1%
#NowBadChoiceFromCOPYPLUS.G4B!#set arg=%~1 &; if %arg:~0,1%==< && if %arg:~-1,1%==> && set /l sfndir=%arg:~1,-1%
## Check sfndir & check "if not exist sfndir" to avoid later problems with @retval
## Check for '%'
call Fn.11 "%~1" "\x25" &; echo -e %act%omit unsupported char '\x25' in $[0x00]"$[]%~1$[0x00]" && goto :skipcopy
if exist sfndir && fat dir %source%%%cd%%%sfndir% > nul && if %s%==/s && goto :fdsubdir
if not exist sfndir && fat dir %source%%%cd%%%arg% > nul && set sfndir=%arg% && if %s%==/s && goto :fdsubdir
## Test for FAT dir zero-byte files
set /a argafter=%~2 > nul
if "%~2"=="" && if not exist sfndir && goto :eof
## Set max length command-line to avoid Error 30: run-out-of-stack
set "cmdline=%source%%%cd%%%arg%" &; set /a lcmd=%@retval% > nul
if %lcmd%>=260 && echo $[0x0F]Error: command-line is too long, %lcmd% chars && echo %act%omit %cmdline% && goto :eof
set cmdline= && set lcmd=
if exist wcn if exist wcx && if exist sfndir && goto :skipcopy
## Parse asterisk wildcard
if exist name1 && set /l argname=%~n1 && setlocal && call :tstname1 "goto :skipcopy" &; endlocal && set "gotomsg=%gotomsg%" &; if exist gotomsg && %gotomsg%
#BAD?#if exist name1 && set /l argname=%~n1 && setlocal && call :tstname1 "goto :skipcopy" &; endlocal && set "gotomsg=%gotomsg%" &; if exist gotomsg && %gotomsg%
if exist ext1 && set /l argext=%~x1 && setlocal && call :testext1 "goto :skipcopy" &; endlocal && set "gotomsg=%gotomsg%" &; if exist gotomsg && %gotomsg%
#BAD?#if exist ext1 && set /l argext=%~x1 && setlocal && call :testext1 "goto :skipcopy" &; endlocal && set "gotomsg=%gotomsg%" &; if exist gotomsg && %gotomsg%
## Filter noext: omit semicolon-seperated extensions
if exist noext && set /u argext=%~x1 &; if exist argext && echo -n > (md)%mdmem%+1 && echo -e \x20 > (md)%mdmem%+1 &; if %noext:~0,5%==/ext: && pause --wait=0 %noext:~5% >> (md)%mdmem%+1 ! if %noext:~0,6%==/-ext: && pause --wait=0 %noext:~6% >> (md)%mdmem%+1
if exist noext && if not exist argext && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :skipcopy
if exist noext && if exist argext && setlocal && cat (md)%mdmem%+1 | call :skipext &; echo -n > (md)%mdmem%+1 &; if exist gotomsg && endlocal && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :skipcopy ! endlocal
## Parse special character anti-wildcard
if exist x && set /l argname=%~n1 && setlocal && call :tstxname "goto :skipcopy" &; endlocal && set "gotomsg=%gotomsg%" &; if exist gotomsg && %gotomsg%
#BAD?#if exist x && set /l argname=%~n1 && setlocal && call :tstxname "goto :skipcopy" &; endlocal && set "gotomsg=%gotomsg%" &; if exist gotomsg && %gotomsg%
## Get filesize of source & avoid Error 2
## Modified to show directories without /s
if %LFN%==/LFN:@ && call Fn.11 "%arg%" "~" && setlocal &; if exist sfndir && call :sfn@2lfn "%source%%%cd%%%sfndir%" "#" ! call :sfn@2lfn "%source%%%cd%%%arg%" "@" &; endlocal && set "lfnarg=%lfnarg%" &; if %source%==%target% && goto :makelfnfile@ ! if exist sfndir && if exist lfnarg && goto :makelfnfile@ ! if exist sfndir && goto :skip
if exist sfndir && goto :skip
if %LFN%==/LFN:@ && if /i %source%==%target% && goto :skipcopy
if not exist z &; if %argafter%==0 && set /a zerobyt=%zerobyt%+1 > nul && set /a lzerobyt=%lzerobyt%+1 > nul && echo %act%omit %arg% (zero-byte file) %NULL% && goto :skipcopy
raw cat --length=0 %source%%%cd%%%arg% ;; set /a argsize=%@retval%&0xffffffff > nul
if exist argsize && if not %argsize%>=0 && call :adretval "%source%%%cd%%%arg%" "goto :skipcopy"
if exist gotomsg && %gotomsg%
if not %argsize%<=%freebyte% && setlocal && set /a needKB=%argsize%>>10+1 > nul && set /a freeKB=%freebyte%>>10 &; if %freeKB%<=1 && echo Target is full && endlocal && goto :eof ! echo %act%skip %arg% (needed %needKB%KB, available %freeKB%KB) && endlocal && goto :skipcopy
if exist maxbyte && setlocal && set /a copybyt=%copybyt%+%argsize% > nul &; if not %copybyt%<=%maxbyte% && endlocal && set "gotomsg3=goto :eof" && goto :eof ! endlocal
## Incremental copying
if %i%==/i && raw crc32 %source%%%cd%%%arg% | set argcrc32= &; if exist argcrc32 && set /A argcrc32=0x%argcrc32% > nul
if %i%==/i && raw crc32 %target%%%cd%%%arg% | set copycrc3= &; if exist copycrc3 && set /A copycrc3=0x%copycrc3% > nul
if %i%==/i && if %argcrc32%>=0x1 && if %copycrc3%>=0x1 && if %argcrc32%==%copycrc3% && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && echo %act%skip %arg% %NULL% &; if %copyattr%==Y && goto :floopend ! goto :skipcopy
## Copy-dialog if file exists on target. Not disabled anymore if exist /s
if exist prompt && if %prompt%==1 && if not %o%==/o && if exist %target%%%cd%%%arg% && set askcopy=Y
if %askcopy%==Y && echo Do you want to overwrite %arg%? && set /p:90 /u "copy= (Y=yes N=no A=all S=skip)" &; set copy=%copy:~0,1% && echo
if %askcopy%==Y && if not %copy%==Y && if not %copy%==N && if not %copy%==A && if not %copy%==S && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && echo %act%skip %source%%%cd%%%arg% %NULL% && goto :skipcopy
if %copy%==Y && set /a fco=%fco%+1 > nul && set /a lfco=%lfco%+1 > nul && echo %act%overwrite %arg% %NULL%
if %copy%==N && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && echo %act%skip %arg% %NULL% && goto :skipcopy
if %copy%==A && set "o=/o" && set prompt=
if %copy%==S && set prompt=0 && set copy= && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && echo %act%skip %arg% %NULL% && goto :skipcopy
## Messages and skipcopy if needed
if exist prompt && if %prompt%==0 && if exist %target%%%cd%%%arg% && set /a catskip=%catskip%+1 > nul && set /a lcatskip=%lcatskip%+1 > nul && echo %act%skip %arg% %NULL% && goto :skipcopy
if exist o && if exist %target%%%cd%%%arg% && set /a fco=%fco%+1 > nul && set /a lfco=%lfco%+1 > nul && echo %act%overwrite %arg% %NULL%
if not exist o && if not exist copy && echo %act%copy %arg% %NULL%
if not exist prompt && if not exist copy &; if exist %target%%%cd%%%arg% || echo %act%copy %arg% %NULL%
## Negative argsize with almost 4 GB-file, above 0x7FFFFFF same limitations CALC & @retval ??
## Read-out: debug 1 ## cat --length=0 %target%%%td%%%arg% | argsize= ## debug 0 ## set /a argsize=%argsize:~12% > nul
## %?% doesn't work for filesize on 0.4.6a, %@retval% only!
## Verify if v=/v
if %argsize%==0 && if exist z && set gotomsg= && setlocal && set td=%cd% && set waittime=0 &; if not exist file2 && set file2=%arg% ! set file2=%file2% &; call :fatmkfile2 &; if exist gotomsg && echo %act%skip %source%%%cd%%%arg% %NULL% && endlocal && set catskip=%catskip% && set lcatskip=%lcatskip% && goto :skipcopy ! endlocal && goto :floopend
set copyloop=0
:fdcploop
if %t%==/t && goto :floopend
## Actual copying: without skipcopy after FAT errorcheck (with: change #)
errorcheck off
if %copy%==Y && if not %t%==/t &; fat copy /o %source%%%cd%%%arg% %target%%%cd% > nul |; set /a needKB=%argsize%>>10+1 > nul &; call :faterror "copy /o %source%%%cd%%%arg% %target%%%cd%" "goto :skipcopy" "%target%%%cd%%%arg%" &; if exist gotomsg && %gotomsg%
#DEBUG#if %copy%==Y && if not %t%==/t &; fat copy /o %source%%%cd%%%arg% %target%%%cd% > nul |; set /a needKB=%argsize%>>10+1 > nul &; echo A needKB=%needKB% && call :faterror "copy /o %source%%%cd%%%arg% %target%%%cd%" "goto :skipcopy" "%target%%%cd%%%arg%" &; echo B needKB=%needKB% &; if exist gotomsg && %gotomsg%
errorcheck off
if not %copy%==Y && if not %t%==/t &; fat copy /o %source%%%cd%%%arg% %target%%%cd% > nul |; set /a needKB=%argsize%>>10+1 > nul &; call :faterror "copy /o %source%%%cd%%%arg% %target%%%cd%" "goto :skipcopy" "%target%%%cd%%%arg%" &; if exist gotomsg && %gotomsg%
#DEBUG#if not %copy%==Y && if not %t%==/t &; fat copy /o %source%%%cd%%%arg% %target%%%cd% > nul |; set /a needKB=%argsize%>>10+1 > nul &; echo A needKB=%needKB% && call :faterror "copy /o %source%%%cd%%%arg% %target%%%cd%" "goto :skipcopy" "%target%%%cd%%%arg%" &; echo B needKB=%needKB% &; if exist gotomsg && %gotomsg%
## Always verify with crc32
if exist v && goto :fdverify
if %copyloop%>=4 && echo Skip %source%%%cd%%%arg% && set /a fcf=%fcf%+1 > nul && set /a lfcf=%lfcf%+1 > nul && goto :skipcopy
set argcrc32= &; raw crc32 %source%%%cd%%%arg% | set argcrc32= &; if exist argcrc32 && set /A argcrc32=0x%argcrc32% > nul
#BAD#if not %i%==/i && raw crc32 %source%%%cd%%%arg% | set argcrc32= &; set /A argcrc32=0x%argcrc32% > nul
set copycrc3= &; raw crc32 %target%%%cd%%%arg% | set copycrc3= &; if exist copycrc3 && set /A copycrc3=0x%copycrc3% > nul
#BAD#if not %i%==/i && raw crc32 %target%%%cd%%%arg% | set copycrc3= &; set /A copycrc3=0x%copycrc3% > nul
if %argcrc32%>=1 && if %copycrc3%>=1 &; if %argcrc32%==%copycrc3% || echo %source%%%cd%%%arg% crc32: %argcrc32% and %target%%%td%%%file2% crc32: %copycrc3% are not equal && set /a copyloop=%copyloop%+1 > nul && goto :fdcploop
:fdverify
## with /v verify with cmp
if not exist v && goto :floopend
if %copyloop%>=4 && echo Skip %source%%%cd%%%arg% && set /a fcf=%fcf%+1 > nul && set /a lfcf=%lfcf%+1 > nul && goto :skipcopy
cmp %source%%%cd%%%arg% %target%%%cd%%%arg% > nul || echo %source%%%cd%%%arg% and %target%%%cd%%%arg% are not equal && set /a copyloop=%copyloop%+1 > nul && goto :fdcploop
#BAD#if not %i%==/i && cmp %source%%%cd%%%arg% %target%%%cd%%%arg% > nul || echo %source%%%cd%%%arg% and %target%%%cd%%%arg% are not equal && set /a copyloop=%copyloop%+1 > nul && goto :fdcploop
:floopend
if %copyattr%==Y && setlocal && call :copyattributes "%source%%%cd%%%arg%" "%target%%%cd%%%arg%" &; endlocal && set "output1=%output1%" && set "output2=%output2%"
if %i%==/i &; if %copyattr%==Y && if %copyattr%==Y && if %argcrc32%>=0x1 && if %copycrc3%>=0x1 && if %argcrc32%==%copycrc3% && goto :skipcopy
set /a lfcs=%lfcs%+1 > nul && set /a fcs=%fcs%+1 > nul && set /a lcopybyt=%lcopybyt%+%argsize% > nul && set /a copybyt=%copybyt%+%argsize% > nul
#DEBUG#echo :floopend A output1="%output1%
#DEBUG#echo :floopend A output2="%output2%
#DEBUG#echo :floopend B output1="%output1%
#DEBUG#echo :floopend B output2="%output2%
:makelfnfile@
if %LFN%==/LFN:@ && if exist lfnarg && setlocal && ATTRIBFT.LLL getsfn input="%output2%" "%target%%%cd%%%lfnarg%" &; if exist result && endlocal && set lfnarg= && if exist sfndir && goto :skip ! endlocal
if %LFN%==/LFN:@ && if exist lfnarg && setlocal &; if exist sfndir && ATTRIBFT.LLL getlfn input="%output2%" "%target%%%cd%%%sfndir%" ! ATTRIBFT.LLL getlfn input="%output2%" "%target%%%cd%%%arg%" &; if exist result && endlocal && set lfnarg= && if exist sfndir && goto :skip ! endlocal
if %LFN%==/LFN:@ && if exist lfnarg &; if exist sfndir &; fat dir %target%%%cd%%%sfndir% > nul || set lfnarg= ! echo Target directory exists %target%%%cd%%%sfndir% %NULL%
if %LFN%==/LFN:@ && if exist lfnarg &; if exist sfndir && echo -e %act%make directory LFN:$[0x00]"$[]%lfnarg%$[0x00]" $[0x08]%sfndir% %NULL% ! echo -e %act%make file LFN:$[0x00]"$[]%lfnarg%$[0x00]" $[0x08]%arg% %NULL% &; if %t%==/t && if exist sfndir && set /a sdlfnd=%sdlfnd%+1 > nul && goto :skip ! if %t%==/t && set /a sdlfnf=%sdlfnf%+1 > nul
if %LFN%==/LFN:@ && if not %t%==/t && if exist lfnarg && setlocal &; if exist sfndir && ATTRIBFT.LLL makelfn input="%output2%" "%target%%%cd%%%lfnarg%" "%sfndir%" ! ATTRIBFT.LLL makelfn input="%output2%" "%target%%%cd%%%lfnarg%" "%arg%" &; if not exist result && echo -e make LFN: %target%%%cd%%%lfnarg% failed && echo $[0x00]"$[]%message%$[0x00]" && endlocal && set /a sdlfnsk=%sdlfnsk%+1 > nul ! if exist message && endlocal ! if exist sfndir && endlocal && set /a sdlfnd=%sdlfnd%+1 > nul && goto :skip ! endlocal && set /a sdlfnf=%sdlfnf%+1 > nul
:skipcopy
## After a filename one more shift because of filesize
shift
## One more shift if filesize is in KB (if filesize >= 1MB)
if /i %~2==KB && shift
:skip
## Shift to first new filedate. After a directory only one shift- no size
if "%~1"=="" || shift
## Reset copyloop & copy-dialog; arg needed above 3047 files!
set larg= && set argafter= && set argsize= && set argcrc32= && set cmdline= && set lcmd= && set copy= && set askcopy= && set copyloop= && set copycrc3=
goto :fdcopy
::
:fdsubdir
if exist maxfiles && if %fcs%>=%maxfiles% && goto :eof
if exist maxbyte && if %copybyt%>=%maxbyte% && set "gotomsg3=goto :eof" && goto :eof
if not exist f && ls %source%%%cd%%%sfndir%/ > nul || echo %act%omit empty directory %source%%%cd%%%sfndir% %NULL% && set /a sdsk=%sdsk%+1 > nul && shift && goto :fdcopy
setlocal
set arg= && set larg=
set direxist= && set lcmd=
## Set max length command-line with room for one filename (to avoid Error 30: run-out-of-stack)
set "cmdline=%target%%%cd%%%sfndir%" &; set /a lcmd=%@retval% > nul
if %lcmd%>=260 && echo $[0x0F]Error: command-line is too long, %lcmd% chars && echo %act%omit make directory %cmdline% && goto :fdendloc
echo %cmdline% > (md)%mdmem%+1 && cat --locate=/ --length=%lcmd% (md)%mdmem%+1 > nul &; if %@retval%>=20 && echo $[0x0F]Error: path is too deep, >= 19 directories && echo %act%omit make directory %cmdline% && pause --wait=1 && goto :fdendloc
set cmdline= && set lcmd=
if %LFN%==/LFN:@ && if exist sfndir && call Fn.11 "%sfndir%" "~" && setlocal && call :sfn@2lfn "%source%%%cd%%%sfndir%" "#" &; endlocal && set "lfnarg=%lfnarg%" &; if %source%==%target% && goto :fskipmld
## Existence target directory
fat dir %target%%%cd%%%sfndir% > nul &; if %LFN%==/LFN:@ && goto :fskipmld ! echo Target directory exists: %target%%%cd%%%sfndir%/ %NULL% && goto :fskipmld
## Existence filename same as subdirectory- xcopy finishes here too
set dirsize=
if exist %target%%%cd%%%sfndir% > nul && echo Error: subdirectory: <%sfndir%> is an already existing file! && goto :fdendloc
#bad#fat dir %target%%%cd%%%sfndir% > nul &; set dirsize=1
#bad#if %dirsize%>=1 && echo Error: subdirectory: <%sfndir%> is an already existing file!
## Output-message
#DEBUG#echo %act%make directory B %target%%%cd%%%sfndir% %NULL% && if %t%==/t && set /a msds=%msds%+1 > nul && goto :fskipmld
echo %act%make directory %target%%%cd%%%sfndir% %NULL% && if %t%==/t && set /a msds=%msds%+1 > nul && goto :fskipmld
## Waitloop make subdirectory
set waittime=0
:fdmd
#bad#set waittime=0
## Using FAT error-handling without:  > nul ||"
#MAYBE#if not %t%==/t && fat mkdir %target%%%cd%%%sfndir% || echo Error: make target directory %tdev%%%td%%%arg%/ && set "gotomsg=%message%" && goto :eof
fat mkdir %target%%%cd%%%sfndir%
pause --wait=%waittime%
if exist v && if %waittime%>=7 && echo make directory failed: %target%%%cd%%%sfndir% && set /a msdf=%msdf%+1 > nul && goto :fskipmld
if %waittime%>=7 && goto :fskipmld
fat dir %target%%%cd%%%sfndir% > nul || set /a waittime=%waittime%+1 > nul && goto :fdmd
set /a msds=%msds%+1 > nul
:fskipmld
if %copyattr%==Y && if %sourceok:~0,3%==FAT && if exist sfndir && setlocal && set copyattr=a && call :copyattributes "%source%%%cd%%%sfndir%" "%target%%%cd%%%sfndir%" &; if %success%==Y && endlocal && set "output1=%output1%" && set "output2=%output2%" ! endlocal
if %LFN%==/LFN:@ && if exist lfnarg && setlocal && ATTRIBFT.LLL getsfn input="%output2%" "%target%%%cd%%%lfnarg%" &; if exist result && endlocal && set lfnarg= ! endlocal
if %LFN%==/LFN:@ && if exist lfnarg && setlocal && ATTRIBFT.LLL getlfn input="%output2%" "%target%%%cd%%%sfndir%" &; if exist result && endlocal && set lfnarg= ! endlocal
if %LFN%==/LFN:@ && if exist lfnarg && if exist sfndir && if %source%==%target% && echo Target Directory exists: %target%%%cd%%%sfndir% %NULL%
if %LFN%==/LFN:@ && if exist lfnarg &; echo -e %act%make directory LFN:$[0x00]"$[]%lfnarg%$[0x00]" $[0x08]%sfndir% %NULL% && if %t%==/t && set /a sdlfnd=%sdlfnd%+1 > nul
if %LFN%==/LFN:@ && if not %t%==/t && if exist lfnarg && setlocal && ATTRIBFT.LLL makelfn input="%output2%" "%target%%%cd%%%lfnarg%" "%sfndir%" &; if not exist result && echo -e make LFN: %target%%%cd%%%lfnarg% failed && echo $[0x00]"$[]%message%$[0x00]" && endlocal && set /a sdlfnsk=%sdlfnsk%+1 > nul ! if exist message && endlocal ! endlocal && set /a sdlfnd=%sdlfnd%+1 > nul
if exist sfndir && set cd=%cd%%%sfndir%/
set sfndir= && set waittime= && set lfnarg=
call :fdcpa
:fdendloc
## Preserve Total output-counters
endlocal && set msds=%msds% && set msdf=%msdf% && set fcs=%fcs% && set fco=%fco% && set catskip=%catskip% && set zerobyt=%zerobyt% && set copybyt=%copybyt% && set freebyt=%freebyt% && set lastkey=%lastkey% && set o=%o% && set prompt=%prompt% && set r=%r% && set sdlfnsk=%sdlfnsk% && set sdlfnf=%sdlfnf% && set sdlfnd=%sdlfnd%
shift
goto :fdcopy
::
:lscpa
## ls-based directory-parsing
errorcheck off
if exist file1 && call :lscopy %file1%%%suffix%
## Always/already after source & sd
if not exist file1 && ls %source%%%sd% > (md)%mdmem%+%callsect% > nul
if not exist file1 && cat --locate=\x00 --number=1 (md)%mdmem%+%callsect% > nul &; set parselen=%?%
if not exist file1 &; if exist parselen && set /A parselen=%parselen% > nul ! set /A parselen=%callsect% * 0x200 > nul
if not exist file1 && cat --locate=\x3D --replace=\x3F --length=%parselen% (md)%mdmem%+%callsect% > nul
if not exist file1 && set parselen= && cat (md)%mdmem%+%callsect% | call :lscopy
if exist maxfiles && if %fcs%>=%maxfiles% && goto :eof
if exist maxbyte && if exist gotomsg3 && %gotomsg3%
setlocal && call :cleanmd %mdmem% %callsect% &; endlocal
if not %s%==/s && goto :eof
if exist SFN && set "file=%source%%%sd%" && call :nolspace
if exist SFN && set "echosd=%file%" && set file=
if %lcopybyt%<=1048575 && set "lcopybyt=%lcopybyt% byte"
## Cannot divide above 0x7FFFFFFF!
if %lcopybyt%>=1048576 && if %lcopybyt%<=0x7FFFFFFF && set /a lcopybyt=%lcopybyt%/1024 > nul &; set "lcopybyt=%lcopybyt% KiB"
if %lcopybyt%>=0x80000000 && set /a lcopybyt=%lcopybyt:~0,-3% > nul &; set "lcopybyt=%lcopybyt% KB"
if not exist SFN &; if %lfcs%==0 if %lfco%==0 || echo -e Copied %lcopybyt% from directory %source%%%sd% %NULL%
if exist SFN &; if %lfcs%==0 if %lfco%==0 || echo -e Copied %lcopybyt% from directory $[0x00]"$[]%echosd%$[0x00]" %NULL%
## Errors not needed with FAT errorcheck (without: change #)
if %lfcs%==0 if %lfco%==0 if %lcatskip%==0 |; if %t%==/t && echo Files to copy/overwrite/skip: %lfcs%/%lfco%/%lcatskip% %NULL% %echomsg% ! echo Files copied/overwritten/skipped: %lfcs%/%lfco%/%lcatskip% %NULL% %echomsg%
## Reset local counters
#NONEED#set lfcs=0 && set lzerobyt=0 && set lfco=0 && set lcatskip=0 && set lcopybyt=0
set echosd=
goto :eof
::
:lscopy
if %lastkey%==Q && goto :eof ! if exist lastkey && set lastkey=
setlocal && set * && call :lastkey "Esc" &; if not %lastkey%==0x51 && if not %lastkey%==0x71 && endlocal && set lastkey=%ls% ! endlocal && set lastkey=Q && goto :eof
if "%~1"=="" && goto :eof
## Check for unsupported color codes as: chars '$[' with ']'
call Fn.11 "%~1" "$[" &; call Fn.11 "%~1" "]" && pause --wait=0 %act%omit unsupported chars '$[' and ']' in "%~1"  && goto :skip1
## BUG2: last incomplete file been seen as a directory and created is /s, not anymore with next line = not good! With cat --skip maybe better?
if "%~2"=="" && cat --skip=130829 (md)%mdmem%+%callsect% | set content= &; if exist content && set content= && goto :eof
if exist maxfiles && if %fcs%>=%maxfiles% && goto :eof
if exist maxbyte && if %copybyt%>=%maxbyte% && set "gotomsg3=goto :eof" && goto :eof
set arg= && set larg= && set file= && set targfile= && set argnum= && set argname= && set largname= && set argext= && set largext=
set fileext= && set gotomsg= && set filesize= && set zeromsg= && set zero2msg= && set fulldir= && set sfndir= && set emdirfil= && set content=
set argsize= && set lfncatch= && set argcrc32= && set copycrc3= && set cmdline= && set lcmd= && set echofdir= && set echoarg= && set srccrc32= && set tgtcrc32= && set argtilde=
set sfnarg= && set lfnarg= && set utfcatch= && set needKB= && set higharg= && set ntcase= && set dellfn2=
set arg=%~1
set "arg=%arg%"
set "argname=%~n1" &; set /a largname=%@retval% > nul &; call Fn.11 "%argname%" "\x3F" && pause --wait=0 %argname% > (md)%mdmem%+1 && cat --locate=\x3F --replace=\x3D --length=%largname% (md)%mdmem%+1 > nul && cat --length=%largname% (md)%mdmem%+1 | set argname=
set "argext=%~x1" &; set /a largext=%@retval% > nul && if exist argext &; call Fn.11 "%argext%" "\x3F" && pause --wait=0 %argext% > (md)%mdmem%+1 && cat --locate=\x3F --replace=\x3D --length=%largext% (md)%mdmem%+1 > nul && cat --length=%largext% (md)%mdmem%+1 | set argext=
set "arg=%argname%%%argext%"
## Question mark ?=3F to replace back '= '=3D, for file1 and arg only, not for argext and argname!
if exist file1 && call Fn.11 "%file1%" "?" && echo -n > (md)%mdmem%+1 && pause --wait=0 %file1% > (md)%mdmem%+1 && cat --locate=\x3F --replace=\x3D (md)%mdmem%+1 > nul && cat (md)%mdmem%+1 | set file1=
set "arg=%arg%" &; set /a larg=%@retval% > nul
if exist file1 && if not exist %source%%%file1%%%suffix% && echo && echo -e Source file %file1%%%suffix% does not exist && goto :eof
## BUG1: without "if %sourceok%==NTFS &&" skip of names starting with "$" on other file-systems
if %sourceok%==NTFS && if not %NTFS%==/$ && if %arg:~0,1%==$ && goto :skip1
## Check subdirectory & set fulldir to avoid later problems with @retval
debug msg=1
raw cat --length=0 %source%%%sd%%%arg% | set filesize=
debug msg=0
if "%filesize:~14%"=="0" && set filesize=0 && set "zeromsg=(zero-byte file)"
## Modified to show directories without /s
if %sourceok%==NTFS && if %filesize%==0 && set "zero2msg=(zero-byte file/empty directory)" && set filesize= && set zeromsg=
if not %filesize%==0 &; raw cat --length=0 %source%%%sd%%%arg% || set fulldir=%arg%
## Instead of if %nulsize%==0 now if exist fulldir (n-less variables)
## check for unsupported char '%'
call Fn.11 "%arg%" "\x25" && echo -e %act%omit unsupported char '\x25' in:$[0x00]"$[]%arg%$[0x00]" && goto :skip1 ! set ARG=
if exist fulldir && if %s%==/s && goto :lssubdir
if not exist LF && if exist fulldir && if /i "%arg%"=="lost+found" && goto :skip1
#OLD#set lflag=1
## Test max command-line length AFTER call :lfn2sfn, 255 is SFN-only
## Filter LFN 6x- max 8+3+1=12 still needed! Also: periods in argname, spaces and ms-dos forbidden-list, like '+'
call :lfncatch &; if %utfcatch%==1 && echo -e $[0x00]"$[]%act%omit %arg% (UTF-8 characters)$[0x00]" && goto :skip1 ! if %argnum%>=1 && if not %sourceok%==ISO9660 && if not %sourceok%==UDF && set argnum= && set lfncatch=1
## Skip copy SFN@number.ext & SFN#number.ext
if %SFN%==/SFN:@ && if exist argtilde && if "%x%"=="/x:@" && set argtilde=
if %SFN%==/SFN:@ && if exist argtilde && if %case% "%arg%"=="%argtilde%" && goto :skip1
if not exist fulldir && if exist argnum && if %argnum%>=1 && if exist filenum && if not %argnum%==%filenum% && set /a catskip=%catskip%+1 > nul && set /a lcatskip=%lcatskip%+1 > nul && goto :skip1
if not exist fulldir && if exist argnum && if %argnum%==0 && if exist filenum && if not %argnum%==%filenum% && set /a catskip=%catskip%+1 > nul && set /a lcatskip=%lcatskip%+1 > nul && goto :skip1
if not exist fulldir && if not exist argnum && if exist filenum && set /a catskip=%catskip%+1 > nul && set /a lcatskip=%lcatskip%+1 > nul && goto :skip1
if not exist fulldir && if exist argnum && if %argnum%>=1 && if exist nofilnum && if %argnum%==%nofilnum% && set /a catskip=%catskip%+1 > nul && set /a lcatskip=%lcatskip%+1 > nul && goto :skip1
if %lfncatch%==1 && if exist fulldir && set "file=%arg%" && call :nolspace
if %lfncatch%==1 && if exist fulldir && set "echofdir=%file%" && set file=
if not exist echofdir && set "echofdir=%arg%"
if not %SFN:~0,4%==/SFN && if exist wcn if exist wcx && if exist fulldir && goto :skip1
## Filter wildcards
if exist name1 && setlocal && call :tstname1 "goto :skip1" &; endlocal && set "gotomsg=%gotomsg%" &; if exist gotomsg && %gotomsg%
set gotomsg=
if exist ext1 && setlocal && call :testext1 "goto :skip1" &; endlocal && set "gotomsg=%gotomsg%" &; if exist gotomsg && %gotomsg%
set gotomsg=
## Filter noext: omit semicolon-seperated extensions
if exist argext && if exist noext && echo -n > (md)%mdmem%+1
if exist argext && if exist noext && echo -e \x20 > (md)%mdmem%+1
if exist argext && if "%noext:~0,5%"=="/ext:" && pause --wait=0 %noext:~5% >> (md)%mdmem%+1
if exist argext && if "%noext:~0,6%"=="/-ext:" && pause --wait=0 %noext:~6% >> (md)%mdmem%+1
if exist noext && if not exist argext && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :skip1
if exist noext && if exist argext && setlocal && cat (md)%mdmem%+1 | call :skipext &; echo -n > (md)%mdmem%+1 &; if exist gotomsg && endlocal && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :skip1 ! endlocal
set gotomsg=
## Filter anti-wildcard
if %SFN%==/SFN:@ &; if "%x:~-1,1%"=="@" && goto :nofilter
#NEEDED=POSSIBLE???# ! if "%x:~-2,1%"=="@" && goto :nofilter ! if "%x:~-3,1%"=="@" && goto :nofilter ! if "%x:~-4,1%"=="@" && goto :nofilter ! if "%x:~-5,1%"=="@" && goto :nofilter
if exist x && setlocal && call :tstxname "goto :skip1" &; endlocal && set "gotomsg=%gotomsg%" &; if exist gotomsg && %gotomsg%
set gotomsg=
:nofilter
set message= && set larg= && set largname= && set largext=
if exist file1 && if not /i "%arg%"=="%file1%%%suffix%" && goto skip1
## Placement empty directory/zero-byte file omit AFTER LFN-filter ##=tested
if %filesize%==0 && if not exist z && set /a zerobyt=%zerobyt%+1 > nul && set /a lzerobyt=%lzerobyt%+1 > nul && echo -e %act%omit$[0x00]"$[]%arg%$[0x00]"$[]%zeromsg% %NULL% && goto :skip1
if exist fulldir &; ls %source%%%sd%%%fulldir%/ > nul || set emdirfil=1
if not exist emdirfil && if exist fulldir && goto :skip1
if %sourceok%==NTFS && if %emdirfil%==1 && if exist fulldir && echo -e %act%omit$[0x00]"$[]%echofdir%$[0x00]"$[]%zero2msg% %NULL% && goto :skip1
set emdirfil=
## Get filesize of source & avoid Error 2. Now "if exist fulldir". Can deleted if zerobyt/emptydir are gone.
if exist fulldir && goto :skip1
set filesize=
## Negative argsize with almost 4 GB-file, above 0x7FFFFFF same limitations CALC & @retval ??
## %?% doesn't work for filesize on 0.4.6a, %@retval% only!
#TEST=BAD##
raw cat --length=0 %source%%%sd%%%arg%
#WHY???#if not %argnum%>=1 && raw cat --length=0 %source%%%sd%%%arg%
set /a argsize=%@retval%&0xffffffff > nul
if not %argsize%<=%freebyte% && setlocal && set /a needKB=%argsize%>>10+1 > nul && set /a freeKB=%freebyte%>>10 &; if %freeKB%<=1 && echo Target is full && endlocal && goto :eof ! echo -e %act%skip %arg% (needed %needKB%KB, available %freeKB%KB) && endlocal && goto :skip1
set gotomsg=
if not exist fulldir && if not %argnum%>=1 && if exist argsize && if not %argsize%>=0 && call :adretval "%source%%%sd%%%arg%" "goto :skip1"
if not exist fulldir && if not %argnum%>=1 && if exist argsize && if exist gotomsg && %gotomsg%
if not exist fulldir && if exist argsize && if %argsize%>=0x100000000 && echo -e %act%omit$[0x00]"$[]%arg%$[0x00]"$[]with %argsize% byte is too big for FAT-target && goto :skip1
if exist maxbyte && setlocal && set /a copybyt=%copybyt%+%argsize% > nul &; if not %copybyt%<=%maxbyte% && endlocal && set "gotomsg3=goto :eof" && goto :eof ! endlocal
## Start LFN2SFN
if exist file2 && set "file2=%file2%" &; set /a lfile2=%@retval% > nul &; call Fn.11 "%file2%" "\x3F" && pause --wait=0 "%file2%" > (md)%mdmem%+1 && cat --skip=1 --locate=\x3F --replace=\x3D --length=%lfile2% (md)%mdmem%+1 > nul && cat --skip=1 --length=%lfile2% (md)%mdmem%+1 | set file2= &; call Fn.11 "%file2%" "\x20" && echo -e "%file2%" | set file2 &; set "file2=%file2:~1,-1%"
set lfile2=
if exist LFN && if exist file2 && setlocal && ATTRIBFT.LLL getsfn input="%output1%" "%target%%%td%%%file2%" &; if exist result && endlocal && set sfnfile2=%result% ! endlocal
if exist file2 && if not exist sfnfile2 && setlocal && call :splitarg "%file2%" &; set "argname=%name%" && set "argext=%ext%" && set "arg=%file2%" && set lfncatch= && call :lfncatch &; if %lfncatch%==1 && if not exist SFN && echo -e Target-file %file2% is LFN => FATCOPY.G4B /? && endlocal && set result=0 && goto :eof ! if %lfncatch%==1 && endlocal && set "argname2=%argname%" && set "argext2=%argext%" && set "lfnfile2=%file2%" && set lfncatch=1 ! if %argnum%>=1 && if not %sourceok%==ISO9660 && if not %sourceok%==UDF && endlocal && set "argname2=%argname%" && set "argext2=%argext%" && set "lfnfile2=%file2%" && set lfncatch=1 ! endlocal && set FILE2=%file2% && set argname2=%argname% && set argext2=%argext%
if exist SFN && if exist lfnfile2 && setlocal && set "argname=%argname2%" && set "argext=%argext2%" && set "arg=%lfnfile2%" && set lfncatch=1 && set file2= && call :lfn2sfn &; if exist FILE2 && endlocal && set file2=%FILE2% && set r=%r% && set newdir=%newdir% && set promt=%prompt% && set lfprmptf=%lfprmptf% ! endlocal && set r=%r% && set prompt=%prompt% && set lfprmptf=%lfprmptf% && echo -e Target SFN of %lfnfile2% not available && set result=0 && goto :eof
if not exist SFN && if %lfncatch%==1 && set "file=%arg%" && call :nolspace
if not exist SFN && if %lfncatch%==1 && set "echoarg=%file%" && set file=
if %argnum%>=32768 && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && echo -e File Number Suffix above 32767 is not supported: %act%skip %arg% %NULL% && goto :skip1
if exist wcn if exist wcx && if not exist SFN && if %lfncatch%==1 && set /a lfnskip=%lfnskip%+1 > nul && goto :skip1
#OLD#if exist wcn if exist wcx && if not exist SFN && if %lfncatch%==1 && set /a lfnskip=%lfnskip%+1 > nul && set lflag=1 && goto :skip1
if not exist SFN && if %lfncatch%==1 && set /a lfnskip=%lfnskip%+1 > nul && echo -e %act%omit LFN:$[0x00]"$[]%echoarg%$[0x00]"$[]%zeromsg% %zero2msg% %NULL% && goto :skip1
#OLD#if not exist SFN && if %lfncatch%==1 && set /a lfnskip=%lfnskip%+1 > nul && set lflag=1 && echo -e %act%omit LFN:$[0x00]"$[]%echoarg%$[0x00]"$[]%zeromsg% %zero2msg% %NULL% && goto :skip1
set zeromsg= && set zero2msg=
if exist LFN && if %lfncatch%==1 && if %sourceok:~0,3%==FAT && setlocal && ATTRIBFT.LLL getsfn input="%output1%" "%sfnsrc%%%arg%" &; if exist result && endlocal && set sfnarg=%result% ! endlocal
if exist LFN && if not exist file2 && setlocal && ATTRIBFT.LLL getsfn input="%output1%" "%target%%%td%%%arg%" &; if exist result && endlocal && set sfnfile2=%result% ! endlocal
if exist SFN && if %lfncatch%==1 && if not exist sfnarg && if not exist sfnfile2 && set "lfnarg=%arg%" && setlocal &; if exist lfnfile2 && set "argname=%argname2%" && set "argext=%argext2%" && set "LFNFILE2=%lfnfile2%" && set lfnfile2= ! set lfnfile2= &; call :lfn2sfn &; endlocal && set argsize=%argsize% && set lfprmptf=%lfprmptf% && set prompt=%prompt% && set o=%o% && set fco=%fco% && set lfco=%lfco% && set lcatskip=%lcatskip% && set catskip=%catskip% && set makefil=%makefil% && set "gotomsg=%gotomsg%" && set file2=%file2% && set r=%r% && set newdir=%newdir% &; if exist LFN && set file2=%file2% ! set file2= &; if exist gotomsg && %gotomsg%
## :lfn2sfn allows max source=511 char's instead of 255
set "cmdline=%source%%%sd%%%arg%" &; set /a lcmd=%@retval% > nul
if %lcmd%>=260 && echo $[0x0F]Error: command-line is too long, %lcmd% chars && echo -e %act%omit$[0x00]"$[]%cmdline%$[0x00]" && goto :skip1
set cmdline= && set lcmd=
if %i%==/i && if exist sfnarg && raw crc32 %source%%%sd%%%sfnarg% | set argcrc32= &; if exist argcrc32 && set /A argcrc32=0x%argcrc32% > nul
if %i%==/i && if not exist sfnarg && raw crc32 %source%%%sd%%%arg% | set argcrc32= &; if exist argcrc32 && set /A argcrc32=0x%argcrc32% > nul
if exist file1 && if not "%file1%"=="%file2%" && if exist sfnfile2 && setlocal && ATTRIBFT.LLL getlfn input="%output2%" "%target%%%td%%%file2%" &; if exist result && if "%result%"=="%file2%" && endlocal && set "lfnfile2=%result%" ! if exist result && if not "%result%"=="%file2%" && endlocal && set "lfnfile2=%file2%" && set "dellfn2=%result%" ! endlocal
if exist sfnfile2 &; if not "%file2%"=="%sfnfile2%" && set file2=%sfnfile2% ! set lfnfile2=
if exist sfnfile2 && if not %LFN%==/LFN:case && set lfnfile2= && set dellfn2=
#BAD#if exist sfnfile2 &; if "%file2%"=="%sfnfile2%" && if exist lfnfile2 && set "dellfn2=%lfnfile2%" && set lfnfile2= ! set file2=%sfnfile2%
if exist file2 && if %i%==/i && raw crc32 %target%%%td%%%file2% | set copycrc3= &; if exist copycrc3 && set /A copycrc3=0x%copycrc3% > nul
if not exist file2 && if %i%==/i && if exist sfnarg && raw crc32 %target%%%td%%%sfnarg% | set copycrc3= &; if exist copycrc3 && set /A copycrc3=0x%copycrc3% > nul
if not exist file2 && if %i%==/i && if not exist sfnarg && raw crc32 %target%%%td%%%arg% | set copycrc3= &; if exist copycrc3 && set /A copycrc3=0x%copycrc3% > nul
## Copy-dialog if file exists on target. Not disabled anymore if exist /s
if not exist file2 && if not %argnum%>=1 &; if exist sfnarg && set file2=%sfnarg% ! set file2=%arg%
## Still needed if not exist argext
if not exist file2 && if %argnum%>=1 && if not exist argext && set argext=%argname%
if not exist file2 && if %argnum%>=1 && setlocal && call :semicol &; if exist file && endlocal && set /u file2=%file% ! endlocal &; if exist file2 &; if not %i%==/i && set copyloop=0 && goto :lscploop ! if %i%==/i && if %argcrc32%>=0x1 && if %copycrc3%>=0x1 && if not %argcrc32%==%copycrc3% && set copyloop=0 && goto :lscploop
if %i%==/i && if %argcrc32%>=0x1 && if %copycrc3%>=0x1 && if %argcrc32%==%copycrc3% && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && echo -e %act%skip %arg% %NULL% &; if exist LFN && goto :makelfnfile ! if %copyattr%==Y && goto: lloopend ! goto :skip1
if exist prompt && if %prompt%==1 && if not %o%==/o && if exist %target%%%td%%%file2% && set askcopy=Y
#OKE_53vars##echo -n > (md)0x302+60 && set > (md)0x302+60 && raw cat --locate=\x0A (md)0x302+60 > nul &; echo %0 NUMVARS=%@retval% && cat --locate=\x0A --replace=\x20 (md)0x302+60 && raw cat (md)0x302+60 && echo && echo -n && pause Press a Key to Continue... && echo
if %askcopy%==Y && if exist file1 && echo -e Do you want to overwrite %file2%? && set /p:90 /u "copy= (Y=yes N=no)" &; set copy=%copy:~0,1% && echo
if %askcopy%==Y && if not exist file1 && echo -e Do you want to overwrite %file2%? && set /p:90 /u "copy= (Y=yes N=no A=all S=skip)" &; set copy=%copy:~0,1% && echo
if %askcopy%==Y && if not %copy%==Y && if not %copy%==N && if not %copy%==A && if not %copy%==S && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && echo &; if exist sfnarg && echo -e %act%skip %sfnarg% %NULL% && goto :skip1 ! echo -e %act%skip %arg% %NULL% && goto :skip1
if %askcopy%==Y && if not %copy%==Y && if %copy%==N && if not %copy%==A && if not %copy%==S && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul &; if exist sfnarg && echo -e %act%skip %sfnarg% %NULL% && goto :skip1 ! echo -e %act%skip %arg% %NULL% && goto :skip1
if %copy%==Y && set /a fco=%fco%+1 > nul && set /a lfco=%lfco%+1 > nul && echo -e %act%overwrite %file2% %NULL%
if %copy%==N && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul &; if exist sfnarg && echo -e %act%skip %sfnarg% %NULL% && goto :skip1 ! echo -e %act%skip %arg% %NULL% && goto :skip1
if %copy%==A && set "o=/o" && set prompt=
if %copy%==S && set prompt=0 && set copy= && set /a catskip=%catskip%+1 > nul && set /a lcatskip=%lcatskip%+1 > nul &; if exist sfnarg && echo -e %act%skip %sfnarg% %NULL% && goto :skip1 ! echo -e %act%skip %arg% %NULL% && goto :skip1
## Messages and skip1 if needed
if %prompt%==0 && if exist %target%%%td%%%file2% && set /a catskip=%catskip%+1 > nul && set /a lcatskip=%lcatskip%+1 > nul &; if exist sfnarg && echo -e %act%skip %sfnarg% %NULL% && goto :skip1 ! echo -e %act%skip %arg% %NULL% && goto :skip1
if exist o && if exist %target%%%td%%%file2% && set /a fco=%fco%+1 > nul && set /a lfco=%lfco%+1 > nul && echo -e %act%overwrite %file2% %NULL%
if %o%==/o &; if exist %target%%%td%%%file2% |; if exist sfnarg && echo -e %act%copy %sfnarg% %NULL% ! echo -e %act%copy %arg% %NULL%
if exist file1 &; if not exist o && if not exist copy &; if not /i %file1%==%file2% && if exist sfnarg && echo -e %act%copy %sfnarg% => %file2% %NULL% ! if not /i %file1%==%file2% && echo -e %act%copy %arg% => %file2% %NULL% ! echo -e %act%copy %arg%
if not exist file1 &; if not exist o && if not exist copy &; if exist sfnarg && echo -e %act%copy %sfnarg% %NULL% ! echo -e %act%copy %arg% %NULL%
if exist file1 &; if not exist prompt && if not exist copy && if not /i %file1%==%file2% &; if exist %target%%%td%%%file2% |; if exist sfnarg && echo -e %act%copy %sfnarg% => %file2% %NULL% ! echo -e %act%copy %arg% => %file2% %NULL%
#BAD#if not exist prompt && if not exist copy && if exist targfile && if exist %target%%%td%%%arg% || echo -e %act%copy %arg% %targfile% %NULL%
if %argsize%==0 && if exist z &; set gotomsg= && setlocal && set waittime=0 &; if not exist file2 && set file2=%arg% ! set file2=%file2% &; call :fatmkfile2 &; if "%gotomsg%"=="goto :skip1" && echo -e %act%skip %source%%%sd%%%arg% %NULL% && endlocal && set catskip=%catskip% && set lcatskip=%lcatskip% && goto :skip1 ! if exist LFN && endlocal && goto :makelfnfile ! endlocal && goto :lloopend
#BAD#if %argsize%==0 && if exist z &; setlocal && set waittime=0 &; if not exist file2 && set file2=%arg% ! set file2=%file2% &; call :fatmkfile &; if "%gotomsg%"=="goto :skip1" && echo -e %act%skip %source%%%cd%%%arg% %NULL% && endlocal && set catskip=%catskip% && set lcatskip=%lcatskip% && goto :skip1 ! if exist LFN && endlocal && goto :makelfnfile ! endlocal && goto :lloopend
## Verify if v=/v
set copyloop=0
:lscploop
## "FAT error (5) "Could not find the path"- target directory doesn't exist
## Save SFN@number.ext to target if SFN~number.ext is copied
errorcheck off
if %SFN%==/SFN:@ && if %copy%==argtilde && if not %t%==/t &; fat copy /o %source%%%sd%%%argtilde% %target%%%td% && set target=%target% ! set needKB=1 &; if %needKB%==1 && call :faterror "copy /o %source%%%sd%%%argtilde% %target%%%td%%%argtilde%" "goto :eof" "%target%%%td%%%argtilde%" &; if exist gotomsg && %gotomsg% ! if exist %target%%%td%%%argtilde% && set /a makefil=%makefil%+1 > nul && set argtilde=
if not exist i && if %argnum%>=1 && if exist file2 && setlocal && call :skiptilde &; endlocal && set argsize=%argsize% && set prompt=%prompt% && set o=%o% && set fco=%fco% && set lfco=%lfco% && set lcatskip=%lcatskip% && set catskip=%catskip% && set "gotomsg=%gotomsg%" &; if exist gotomsg && %gotomsg%
if exist i && if %argnum%>=1 && if exist file2 && setlocal && call :incremen &; endlocal && set argsize=%argsize% && set prompt=%prompt% && set o=%o% && set fco=%fco% && set lfco=%lfco% && set lcatskip=%lcatskip% && set catskip=%catskip% && set "gotomsg=%gotomsg%" &; if exist gotomsg && %gotomsg%
errorcheck off
if %copy%==Y && if not %t%==/t && if exist snfarg &; fat copy /o %sfnsrc%%%sfnarg% %target%%%td%%%file2% > nul |; set /a needKB=%argsize%>>10+1 && call :faterror "copy /o %sfnsrc%%%sfnarg% %target%%%td%%%file2%" "goto :skip1" "%target%%%td%%%file2%" &; if exist gotomsg && %gotomsg%
if %copy%==Y && if not %t%==/t && if not exist sfnarg &; fat copy /o %source%%%sd%%%arg% %target%%%td%%%file2% > nul |; set /a needKB=%argsize%>>10+1 && call :faterror "copy /o %source%%%sd%%%arg% %target%%%td%%%file2%" "goto :skip1" "%target%%%td%%%file2%" &; if exist gotomsg && %gotomsg%
if not %copy%==Y && if not %t%==/t && if not %copy%==argtilde && if exist sfnarg &; fat copy %o% %sfnsrc%%%sfnarg% %target%%%td%%%file2% > nul |; set /a needKB=%argsize%>>10+1 && call :faterror "copy %o% %sfnsrc%%%sfnarg% %target%%%td%%%file2%" "goto :skip1" "%target%%%td%%%file2%" &; if exist gotomsg && %gotomsg%
if not %copy%==Y && if not %t%==/t && if not %copy%==argtilde && if not exist sfnarg &; fat copy %o% %source%%%sd%%%arg% %target%%%td%%%file2% > nul |; set /a needKB=%argsize%>>10+1 && call :faterror "copy %o% %source%%%sd%%%arg% %target%%%td%%%file2%" "goto :skip1" "%target%%%td%%%file2%" &; if exist gotomsg && %gotomsg%
## Skip if identical on target the saving of SFN@number.ext if SFN~number.ext is copied (checked with crc32)
if %SFN%==/SFN:@ && if exist argtilde && if not %case% "%arg%"=="%argtilde%" && if exist %source%%%sd%%%argtilde% && raw crc32 %source%%%sd%%%argtilde% | set srccrc32=
if %SFN%==/SFN:@ && if exist argtilde && if not %case% "%arg%"=="%argtilde%" && if exist %target%%%td%%%argtilde% && raw crc32 %target%%%td%%%argtilde% | set tgtcrc32=
if %SFN%==/SFN:@ && if exist argtilde && if not %case% "%arg%"=="%argtilde%" && if exist srccrc32 && if exist tgtcrc32 && if not %srccrc32%==0x0 && if not %tgtcrc32%==0x0 && if "%srccrc32%"=="%tgtcrc32%" && goto :skip1
if %SFN%==/SFN:@ && if exist argtilde && if %t%==/t && if not "%argtilde%"=="%arg%" && if exist %source%%%sd%%%argtilde% && echo %act%copy %argtilde% (saved LFN) %NULL% && set /a makefil=%makefil%+1 > nul && set argtilde= && goto :lloopend
if %SFN%==/SFN:@ && if not %copy%==argtilde && if exist argtilde && if not %t%==/t && if not "%argtilde%"=="%arg%" && if exist %source%%%sd%%%argtilde% && set copy=argtilde && echo %act%copy %argtilde% (saved LFN) %NULL% && goto :lscploop
if %t%==/t &; if exist LFN && goto :makelfnfile ! goto :lloopend
## Always verify with crc32
if exist v && goto :lsverify
if %copyloop%>=4 && if exist sfnarg && echo -e %act%skip %sfnsrc%%%sfnarg% %NULL% && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :skip1
if %copyloop%>=4 && if not exist sfnarg && echo -e %act%skip %source%%%sd%%%arg% %NULL% && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :skip1
#BAD#if %copyloop%>=4 && echo -e %act%skip %source%%%sd%%%arg% %NULL% && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :skip1
if exist sfnarg && set argcrc32= &; raw crc32 %sfnsrc%%%sfnarg% | set argcrc32= &; if exist argcrc32 && set /A argcrc32=0x%argcrc32% > nul
if not exist sfnarg && set argcrc32= &; raw crc32 %source%%%sd%%%arg% | set argcrc32= &; if exist argcrc32 && set /A argcrc32=0x%argcrc32% > nul
set copycrc3= &; raw crc32 %target%%%td%%%file2% | set copycrc3= &; if exist copycrc3 && set /A copycrc3=0x%copycrc3% > nul
#BAD?#if not %i%==/i && raw crc32 %source%%%sd%%%arg% | set argcrc32= &; set /A argcrc32=0x%argcrc32% > nul
#BAD?#if not %i%==/i && raw crc32 %target%%%td%%%file2% | set copycrc3= &; set /A copycrc3=0x%copycrc3% > nul
if %argcrc32%>=1 && if %copycrc3%>=1 && if %argcrc32%==%copycrc3% |; if exist sfnarg && echo -e %sfnsrc%%%sfnarg% crc32: %argcrc32% and %target%%%td%%%file2% crc32: %copycrc3% are not equal ! echo -e %source%%%sd%%%arg% crc32: %argcrc32% and %target%%%td%%%file2% crc32: %copycrc3% are not equal &; set /a copyloop=%copyloop%+1 > nul && goto :lscploop
#BAD#if %argcrc32%>=1 && if %copycrc3%>=1 &; if %argcrc32%==%copycrc3% || echo -e %source%%%sd%%%arg% crc32: %argcrc32% and %target%%%td%%%file2% crc32: %copycrc3% are not equal && set /a copyloop=%copyloop%+1 > nul && goto :lscploop
:lsverify
## with /v verify with cmp
if not exist v &; if not exist LFN && goto :lloopend ! goto :makelfnfile
if %copyloop%>=4 && echo -e Skip %source%%%sd%%%arg% && set /a fcf=%fcf%+1 > nul && set /a lfcf=%lfcf%+1 > nul && goto :skip1
if exist sfnarg &; cmp %sfnsrc%%%sfnarg% %target%%%td%%%file2% > nul || echo -e %sfnsrc%%%sfnarg% and %target%%%td%%%arg% are not equal && set /a copyloop=%copyloop%+1 > nul && goto :lscploop
if not exist sfnarg &; cmp %source%%%sd%%%arg% %target%%%td%%%file2% > nul || echo -e %source%%%sd%%%arg% and %target%%%td%%%arg% are not equal && set /a copyloop=%copyloop%+1 > nul && goto :lscploop
#BAD#if not %i%==/i && cmp %source%%%cd%%%arg% %target%%%cd%%%file2% > nul || echo %source%%%cd%%%arg% and %target%%%cd%%%arg% are not equal && set /a copyloop=%copyloop%+1 > nul && goto :lscploop
:makelfnfile
#BAD#if %lfncatch%==1 && echo :lscopy A arg=%arg% file2=%file2% snfarg=%sfnarg% lfnfile2=%lfnfile2%
if not exist LFN && goto :lloopend
#MAYBE#if exist sfnfile2 && if exist dellfn2 && echo %act%delete file LFN: %dellfn2% %NULL% && if not %t%==/t && setlocal && ATTRIBFT.LLL dellfn input="%output2%" "%target%%%td%%%dellfn2%" &; if exist result && endlocal ! if exist message && echo $[0x00]"$[]%message%$[0x00]" && endlocal && goto :lloopend ! echo Can not delete %dellfn2% && endlocal && goto :lloopend
if exist sfnfile2 && if exist dellfn2 && echo -e %act%delete file LFN: %dellfn2% %NULL% && if not %t%==/t && setlocal && ATTRIBFT.LLL dellfn input="%output2%" "%target%%%td%%%dellfn2%" &; if exist result && endlocal ! if exist message && echo $[0x00]"$[]%message%$[0x00]" && endlocal && goto :lloopend ! echo -e Can not delete %dellfn2% && endlocal && goto :lloopend
if exist sfnfile2 && if not exist lfnfile2 && goto :lloopend
if exist FILE2 && set lfncatch=
if %argnum%>=1 &; if not %sourceok%==ISO if not %sourceok%==UDF |; setlocal && set "file=%arg%" && call :semicol &; endlocal && set "arg=%file%" &; if not %lfncatch%==1 && call :lfncatch &; if %utfcatch%==1 && echo -e %act%omit$[0x00]"$[]%arg%$[0x00]"$[](UTF-8 characters) && goto :skip1
if %LFN%==/LFN:case && if not %lfncatch%==1 && if not exist lfnfile2 && setlocal &; if exist argname2 && set /u higharg=%argname2%%%argext2% ! set /u higharg=%arg% &; if exist argname2 && if %higharg%==%argname2%%%argext2% && endlocal ! if exist argname2 && endlocal && set file2=%higharg% && set lfnfile2=%argname2%%%argext2% && set lfncatch=1 ! if %higharg%==%arg% && endlocal ! endlocal && set arg=%higharg% && set lfnarg=%arg% && set lfncatch=1 && set higharg=%higharg%
if exist lfnfile2 &; call Fn.11 "%lfnfile2%" "$[" && call Fn.11 "%lfnfile2%" "]" && pause --wait=0 %act%omit unsupported chars '$[' and ']' in "%lfnfile2%"  && goto :skip1
if not %lfncatch%==1 && if exist lfnarg &; call Fn.11 "%lfnarg%" "$[" && call Fn.11 "%lfnarg%" "]" && pause --wait=0 %act%omit unsupported chars '$[' and ']' in "%lfnarg%" && goto :skip1
if not %lfncatch%==1 && if exist sfnarg &; call Fn.11 "%arg%" "$[" && call Fn.11 "%arg%" "]" && pause --wait=0 %act%omit unsupported chars '$[' and ']' in "%arg%" && goto :skip1
## Only make case-LFN on fat if exist on source
if %LFN%==/LFN:case && if exist higharg && if %sourceok:~0,3%==FAT && setlocal && ATTRIBFT.LLL getlfn input="%output1%" "%source%%%sd%%%higharg%" &; if not exist result && endlocal && set lfncatch= && set lfnfile2= && set lfnarg= && set higharg= ! endlocal
## Only 'copy' ntcasebyte if not copyattr=Y & 8+3 case-LFN [if LFN=/LFN:case & if %lfncatch%==1 & if exist higharg]
#DEBUG#setlocal && ATTRIBFT.LLL getntcasebyte input="%output2%" "%target%%%td%%%arg%" &; echo 3 result=%result% && endlocal
if %copyattr%==Y && if %lfncatch%==1 && if %sourceok:~0,3%==FAT && setlocal &; if exist sfnarg && call :copyattributes "%sfnsrc%%%sfnarg%" "%target%%%td%%%file2%" ! if exist LFN && call :copyattributes "%sfnsrc%%%arg%" "%target%%%td%%%file2%" ! call :copyattributes "%source%%%sd%%%arg%" "%target%%%td%%%file2%" &; if %success%==Y && endlocal ! endlocal
if exist LFN && if %lfncatch%==1 && if exist sfnarg && if %sfnarg%==%file2% &; setlocal && ATTRIBFT.LLL getlfn input="%output2%" "%target%%%td%%%sfnarg%" &; if exist result && endlocal && set lfncatch= && set lfnfile2= ! endlocal
#BAD#if exist LFN && if %lfncatch%==1 && if exist sfnarg &; setlocal && ATTRIBFT.LLL getlfn input="%output2%" "%target%%%td%%%sfnarg%" &; if exist result && endlocal && set lfncatch= && set lfnfile2= ! endlocal
if exist LFN && if exist lfnfile2 && if not exist dellfn2 &; setlocal && ATTRIBFT.LLL getlfn input="%output2%" "%target%%%td%%%file2%" &; if exist result && endlocal && set lfncatch= && set lfnfile2= ! endlocal
if not %lfncatch%==1 if not exist lfnfile2 |; if exist LFN &; if exist lfnfile2 && echo -e %act%make file LFN:$[0x00]"$[]%lfnfile2%$[0x00]" $[0x08]%file2% ! if exist lfnarg && echo -e %act%make file LFN:$[0x00]"$[]%lfnarg%$[0x00]" $[0x08]%file2% %NULL% ! if exist sfnarg && echo -e %act%make file LFN:$[0x00]"$[]%arg%$[0x00]" $[0x08]%sfnarg% %NULL% ! echo -e %act%make file LFN:$[0x00]"$[]%arg%$[0x00]" $[0x08]%file2% %NULL% &; if %t%==/t && set /a sdlfnf=%sdlfnf%+1
if not %t%==/t && if exist LFN && if %lfncatch%==1 && if exist sfnarg && if not exist lfnfile2 &; setlocal && ATTRIBFT.LLL makelfn input="%output2%" "%target%%%td%%%arg%" "%sfnarg%" &; if not exist result && echo -e Make file LFN:$[0x00]"$[]%arg%$[0x00]"$[]failed && echo $[0x00]"$[]%message%$[0x00]" && endlocal && set /a lfnskip=%lfnskip%+1 > nul ! if exist message && endlocal ! endlocal && set /a sdlfnf=%sdlfnf%+1
if not %t%==/t && if exist LFN && if exist lfnfile2 &; setlocal && ATTRIBFT.LLL makelfn input="%output2%" "%target%%%td%%%lfnfile2%" "%file2%" &; if not exist result && echo -e Make file LFN:$[0x00]"$[]%lfnfile2%$[0x00]"$[]failed && echo $[0x00]"$[]%message%$[0x00]" && endlocal && set /a lfnskip=%lfnskip%+1 > nul ! if exist message && endlocal ! endlocal && set /a sdlfnf=%sdlfnf%+1
if not %t%==/t && if exist LFN && if %lfncatch%==1 && if not exist sfnarg && if not exist lfnfile2 &; setlocal && ATTRIBFT.LLL makelfn input="%output2%" "%target%%%td%%%lfnarg%" "%file2%" &; if not exist result && echo -e Make file LFN:$[0x00]"$[]%lfnarg%$[0x00]"$[]failed && echo $[0x00]"$[]%message%$[0x00]" && endlocal && set /a lfnskip=%lfnskip%+1 > nul ! if exist message && endlocal ! endlocal && set /a sdlfnf=%sdlfnf%+1
:lloopend
if %copyattr%==Y && if not exist lfncatch && if %sourceok:~0,3%==FAT && setlocal &; if exist sfnarg && call :copyattributes "%sfnsrc%%%sfnarg%" "%target%%%td%%%file2%" ! if exist LFN && call :copyattributes "%sfnsrc%%%arg%" "%target%%%td%%%file2%" ! call :copyattributes "%source%%%sd%%%arg%" "%target%%%td%%%file2%" &; if %success%==Y && if not exist LFN && endlocal && set "output1=%output1%" && set "output2=%output2%" ! if %success%==Y && endlocal ! endlocal
if %i%==/i &; if %argcrc32%>=0x1 && if %copycrc3%>=0x1 && if %argcrc32%==%copycrc3% && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && echo -e %act%skip %arg% %NULL% && goto :skip1
set /a lfcs=%lfcs%+1 > nul && set /a fcs=%fcs%+1 > nul && set /a lcopybyt=%lcopybyt%+%argsize% > nul && set /a copybyt=%copybyt%+%argsize% > nul
#OLD#set /a lfcs=%lfcs%+1 > nul && set /a fcs=%fcs%+1 > nul && set lflag=1 && set /a lcopybyt=%lcopybyt%+%argsize% > nul && set /a copybyt=%copybyt%+%argsize% > nul
#DEBUG#echo :lloopend copyattr=%copyattr% sourceok=%sourceok% sfnsrc=%sfnsrc% arg=%arg% sfnarg=%sfnarg% file1=%file1% file2=%file2% %^target%%%^td%%%^file2%=%target%%%td%%%file2%
#DEBUG#echo :lloopend A output1="%output1%
#DEBUG#echo :lloopend A output2="%output2%
#BADDF#if %copyattr%==Y && if not exist lfncatch && if %sourceok:~0,3%==FAT && setlocal &; if exist sfnarg && call :copyattributes "%sfnsrc%%%sfnarg%" "%target%%%td%%%file2%" ! call :copyattributes "%source%%%sd%%%arg%" "%target%%%td%%%file2%" &; if %success%==Y && if not exist LFN && endlocal && set ""output1=%output1%"" && set "output2=%output2%"" ! if %success%==Y && endlocal ! endlocal
#DIFFUCULT2ECHO#echo "if %copyattr%==Y && if %sourceok:~0,3%==FAT && setlocal &; if exist sfnarg && call :copyattributes "%sfnsrc%%%sfnarg%" "%target%%%td%%%file2%" ! call :copyattributes "%source%%%sd%%%arg%" "%target%%%td%%%file2%" &; if %success%==Y && if not exist LFN && endlocal && set "output1=%output1%" && set "output2=%output2%" ! if %success%==Y && endlocal ! endlocal
#DEBUG#echo :lloopend B output1="%output1%
#DEBUG#echo :lloopend B output2="%output2%
:skip1
set arg= && set larg= && set argname= && set largname= && set argext= && set largext= && set argnum= && set argsize= && set argcrc32= && set echofdir= && set copy= && set askcopy= && set file2= && set copyloop= && set copycrc3= && set gotomsg= && set argtilde= && set srccrc32= && set tgtcrc32= && set zeromsg=
set sfnarg= && set lfnarg= && set utfcatch= && set lfnfile2= && set needKB= && set higharg= && set ntcase= && set sfnfile2= && set dellfn2=
shift
goto :lscopy
::
:lssubdir
if exist maxfiles && if %fcs%>=%maxfiles% && goto :eof
if exist maxbyte && if %copybyt%>=%maxbyte% && set "gotomsg3=goto :eof" && goto :eof
if not exist f && ls %source%%%sd%%%fulldir%/ > nul || echo -e %act%omit empty directory$[0x00]"$[]%source%%%sd%%%fulldir%$[0x00]" %NULL% && set /a sdsk=%sdsk%+1 > nul && shift && goto :lscopy
setlocal
set larg= && set largname= && set largext=
## Local output-count messages - errors not needed with FAT errorcheck (without: change #)
## lflag etc. still needed? = NO
if %lfcs%==0 if %lfco%==0 if %lcatskip%==0 || echo Files copied/overwritten/skipped: %lfcs%/%lfco%/%lcatskip% %NULL% %echomsg%
#OLD#if %lflag%==1 && if %lfcs%==0 if %lfco%==0 if %lcatskip%==0 || echo Files copied/overwritten/skipped: %lfcs%/%lfco%/%lcatskip% %NULL% %echomsg%
## Reset local counters
set lfcs=0 && set lzerobyt=0 && set lfco=0 && set lcatskip=0 && set lcopybyt=0
## ls gives error with LFN, empty directory and with zero-byte file too
if not exist LF && if /i "%fulldir%"=="lost+found" && goto :lsendloc
## Filter LFN 6x- max 8+3+1=12 still needed! Also: periods in argname, spaces and ms-dos forbidden-list, like+
call :lfncatch &; if %utfcatch%==1 && echo -e %act%omit$[0x00]"$[]%fulldir%$[0x00]"$[](UTF-8 characters) && goto :lsendloc
## Copy SFN#number.ext if SFN~number.ext exists
if %lfncatch%==1 && set "file=%source%%%sd%%%fulldir%" && call :nolspace &; set "echofdir=%file%" && set file=
if not exist echofdir && set "echofdir=%source%%%sd%%%fulldir%"
## New placement NTFS no /e
if %sourceok%==NTFS && if not %e%==/e &; ls %source%%%sd%%%fulldir%/ > nul || set /a sdsk=%sdsk%+1 > nul && set /a lsdsk=%lsdsk%+1 > nul && echo -e %act%omit empty directory/zero-byte file:$[0x00]"$[]%echofdir%$[0x00]" %NULL% && goto :lsendloc
if not exist SFN && if %lfncatch%==1 && set /a sdlfnsk=%sdlfnsk%+1 > nul && echo -e %act%omit directory$[0x00]"$[]%echofdir%/$[0x00]" %NULL% && goto :lsendloc
set echofdir=
#MaybeNot#if not %lfncatch%==1 && if exist fulldir && set /u sfndir=%fulldir% && set /u fulldir=%fulldir%
if exist LFN && ls %target%%%td%%%fulldir% > nul && setlocal && ATTRIBFT.LLL getsfn input="%output2%" "%target%%%td%%%fulldir%" &; if not exist result && endlocal && set "lfndir=%fulldir%" ! endlocal && set sfndir=%result%
#BAD#if exist LFN && if not %lfncatch%==1 && setlocal && ATTRIBFT.LLL getlfn input="%output2%" "%target%%%td%%%fulldir%" &; if exist result && endlocal && set fulldir=%result% && set /u sfndir=%fulldir% ! endlocal
if exist LFN && if not exist sfndir && if %sourceok:~0,3%==FAT && setlocal && ATTRIBFT.LLL getsfn input="%output1%" "%source%%%sd%%%fulldir%" &; if exist result && endlocal && set sfndir=%result% ! endlocal
if exist LFN && if exist sfndir && fat dir %target%%%td%%%sfndir% > nul && setlocal && ATTRIBFT.LLL getlfn input="%output2%" "%target%%%td%%%sfndir%" &; if exist result && endlocal && set "lfndir=%result%" ! endlocal && set "lfndir=%fulldir%"
#NONEED#if not %lfncatch%==1 && if exist lfndir && if %lfndir%==%fulldir% && set lfndir=
if not %lfncatch%==1 && if exist fulldir && if not exist sfndir && set /u sfndir=%fulldir%
if exist SFN && if %lfncatch%==1 && if not exist sfndir && setlocal && set output1= && set output2= && call :lfn2sfn &; endlocal && set sfndir=%sfndir% && set lfprmptd=%lfprmptd% && set makefil=%makefil% && set r=%r% && set newdir=%newdir% && set echoD=%echoD% &; if "%gotomsg:~0,5%"=="Abort" && echo Aborted by user %NULL% && set lastkey=Q && goto :lsendloc ! if exist t && goto :makelfndirectory
## Max cmd-length with room for one filename
set "cmdline=%target%%%td%%%sfndir%" &; set /a lcmd=%@retval% > nul
if %lcmd%>=260 && echo $[0x0F]Error: command-line is too long, %lcmd% chars && echo -e %act%omit make directory$[0x00]"$[]%cmdline%$[0x00]" && goto :lsendloc
echo "%cmdline%" > (md)%mdmem%+1 && cat --locate=/ --length=%lcmd% (md)%mdmem%+1 > nul &; if %@retval%>=20 && echo $[0x0F]Error: path is too deep, >= 19 directories && echo -e %act%omit make directory$[0x00]"$[]%cmdline%$[0x00]" && pause --wait=1 && goto :lsendloc
#LATER#set cmdline= && set lcmd=
if %sourceok%==NTFS && if %e%==/e &; ls %source%%%sd%%%fulldir%/ > nul || set /a sdsm=%sdsm%+1 > nul && goto :mdall
:mdall
## Existence filename same as target directory
set dirsize= && set cmdline= && set lcmd=
if exist sfndir && if exist %target%%%td%%%sfndir% &; set dirsize=1
if %dirsize%>=1 && echo Error: target directory is an existing filename && goto :lsendloc
## Existence target directory
if not %lfncatch%==1 && if exist sfndir && fat dir %target%%%td%%%sfndir% > nul && set newdir=0 &; if exist LFN && if "%fulldir%"=="%sfndir%" && echo -e Target directory exists:$[0x00]"$[]%lfntgt%%%sfndir%$[0x00]" %NULL% ! if exist LFN && echo -e Target directory exists:$[0x00]"$[]%lfntgt%%%fulldir%$[0x00]" %NULL% ! echo Target directory exists: %target%%%td%%%sfndir% %NULL% &; if %LFN%==/LFN:case && if not "%fulldir%"=="%sfndir%" && goto :makelfndirectory ! goto :lskipmcd
if exist lfndir && set "cmdline=%lfntgt%%%lfndir%" ! if exist LFN && set "cmdline=%lfntgt%%%fulldir%" &; set /a lcmd=%@retval% > nul &; if %lcmd%>=260 && echo $[0x0F]Error: command-line is too long, %lcmd% chars && echo -e %act%omit make directory$[0x00]"$[]%cmdline%$[0x00]" && set cmdline= && set lcmd= && goto :lsendloc
if %lfncatch%==1 && if exist sfndir && fat dir %target%%%td%%%sfndir% > nul && set newdir=0 &; if exist lfndir && echo -e Target directory exists:$[0x00]"$[]%lfntgt%%%lfndir%$[0x00]" %NULL% ! if exist LFN && echo -e Target directory exists:$[0x00]"$[]%lfntgt%%%fulldir%$[0x00]" %NULL% ! set lfndir= &; if exist lfndir && goto :makelfndirectory ! goto :lskipmcd
#DEBUG#if exist sfndir &; if %lfncatch%==1 && if not %SFN%==/SFN:@ && echo -e %act%make directory B1 %lfntgt%%%sfndir% %NULL% ! if not %lfncatch%==1 && echo %act%make directory B2 %target%%%td%%%sfndir% %NULL%
if exist sfndir &; if %lfncatch%==1 && if not %SFN%==/SFN:@ && if not exist echoD && echo -e %act%make directory %lfntgt%%%sfndir% %NULL% ! if not %lfncatch%==1 && echo %act%make directory %target%%%td%%%sfndir% %NULL% ! if exist echoD && set echoD= &; set newdir=1
#DEBUG#if exist sfndir &; if %lfncatch%==1 && if not %SFN%==/SFN:@ && if not exist echoD && echo -e A %act%make directory %lfntgt%%%sfndir% %NULL% ! if not %lfncatch%==1 && echo B %act%make directory %target%%%td%%%sfndir% %NULL% ! if exist echoD && set echoD= &; set newdir=1
#BAD#if exist sfndir && if %lfncatch%==1 && echo -e %act%make directory %lfntgt%%%sfndir% %NULL% ! if exist sfndir && echo %act%make directory %target%%%td%%%sfndir% %NULL%
#bad#if not %lfncatch%==1 && if exist sfndir &; if exist LFN && echo -e %act%make directory %lfntgt%%%sfndir% %NULL% ! echo %act%make directory %target%%%td%%%sfndir% %NULL%
## Waitloop make subdirectory
set waittime=0
:lsmd
## Using FAT error-handling without: > nul || (or change #)
if not %t%==/t && if exist sfndir && fat mkdir %target%%%td%%%sfndir%
## Fallback to non-auto with switch /w:n
#BAD#if %LFN%==/LFN:case && if %lfncatch%==1 && if %sourceok:~0,3%==FAT && if exist higharg && setlocal && ATTRIBFT.LLL getntcasebyte input="%output1%" "%sfnsrc%%%arg%" &; endlocal && set ntcase=%result% &; if not %ntcase%==0x8 if not %ntcase%==0x10 if not %ntcase%==0x18 |; setlocal && ATTRIBFT.LLL setntcasebyte input="%output2%" "%target%%%td%%%arg%" "%ntcase%" &; if %result%==1 && endlocal && set lfncatch= && set ntcase= ! endlocal && set ntcase=
#BAD#$if %t%==/t && if %lfncatch%==1 && if exist LFN && echo -e make directory LFN:$[0x00]"$[]%fulldir%$[0x00]" $[0x08]%sfndir% %NULL% && set /a sdlfnd=%sdlfnd%+1 > nul && goto :makelfndirectory
if %t%==/t && set /a msds=%msds%+1 > nul &; if exist LFN && goto :makelfndirectory ! goto :lskipmcd
if exist waittime && pause --wait=%waittime%
if %waittime%>=7 && if exist sfndir && echo make directory failed: %target%%%td%%%sfndir% && set /a msdf=%msdf%+1 > nul && goto :lsendloc
if exist sfndir &; fat dir %target%%%td%%%sfndir% > nul || set /a waittime=%waittime%+1 > nul && goto :lsmd
set /a msds=%msds%+1 > nul
:makelfndirectory
if %LFN%==/LFN:case && if not %lfncatch%==1 && setlocal && set /u higharg=%arg% &; if %higharg%==%arg% && endlocal ! endlocal && set arg=%higharg% && set lfnarg=%arg% && set lfncatch=1 && set higharg=%higharg%
if exist LFN && if %lfncatch%==1 && if exist lfnarg &; call Fn.11 "%lfnarg%" "$[" && call Fn.11 "%lfnarg%" "]" && pause --wait=0 %act%omit unsupported chars '$[' and ']' in "%lfnarg%" && goto :lskipmcd
if exist LFN && if %lfncatch%==1 && if not exist lfnarg &; call Fn.11 "%fulldir%" "$[" && call Fn.11 "%fulldir%" "]" && pause --wait=0 %act%omit unsupported chars '$[' and ']' in "%fulldir%" && goto :lskipmcd
## Only make case-LFN on fat if exist on source
if %LFN%==/LFN:case && if exist higharg && if %sourceok:~0,3%==FAT && setlocal && ATTRIBFT.LLL getlfn input="%output1%" "%source%%%sd%%%higharg%" &; if not exist result && endlocal && set lfncatch= && set lfnarg= && set higharg= ! endlocal
if %LFN%==/LFN:case && if %lfncatch%==1 && if %sourceok:~0,3%==FAT && if exist higharg && setlocal && ATTRIBFT.LLL getntcasebyte input="%output1%" "%sfnsrc%%%arg%" &; endlocal && set ntcase=%result% &; if not %ntcase%==0x8 && if not %ntcase%==0x10 && if not %ntcase%==0x18 && set ntcase= ! if %t%==/t && set ntcase= && set lfncatch= && set higharg=
if %LFN%==/LFN:case && if exist ntcase &; setlocal && ATTRIBFT.LLL setntcasebyte input="%output2%" "%target%%%td%%%arg%" "%ntcase%" &; if %result%==1 && endlocal && set lfncatch= && set ntcase= ! endlocal && set ntcase=
#BAD#if %LFN%==/LFN:case && if %lfncatch%==1 && if %sourceok:~0,3%==FAT && if exist higharg && setlocal && ATTRIBFT.LLL getntcasebyte input="%output1%" "%sfnsrc%%%arg%" &; endlocal && set ntcase=%result% &; if not %ntcase%==0x8 if not %ntcase%==0x10 if not %ntcase%==0x18 |; setlocal && ATTRIBFT.LLL setntcasebyte input="%output2%" "%target%%%td%%%arg%" "%ntcase%" &; if %result%==1 && endlocal && set lfncatch= && set ntcase= ! endlocal && set ntcase=
if %lfncatch%==1 && if exist LFN &; setlocal && ATTRIBFT.LLL getlfn input="%output2%" "%target%%%td%%%sfndir%" &; if exist result && endlocal && set lfncatch= ! endlocal
if exist LFN && if %lfncatch%==1 &; if exist higharg && echo -e %act%make directory LFN:$[0x00]"$[]%lfnarg%$[0x00]" $[0x08]%higharg% %NULL% ! echo -e %act%make directory LFN:$[0x00]"$[]%fulldir%$[0x00]" $[0x08]%sfndir% %NULL% &; if %t%==/t && set /a sdlfnd=%sdlfnd%+1 > nul && goto :lskipmcd
if exist LFN && if %lfncatch%==1 && setlocal && ATTRIBFT.LLL makelfn input="%output2%" "%target%%%td%%%fulldir%" "%sfndir%" &; if not exist result && echo -e Make directory LFN$[0x00]"$[]%lfntgt%%%fulldir%$[0x00]"$[]failed && echo $[0x00]"$[]%message%$[0x00]" && endlocal && set /a sdlfnsk=%sdlfnsk%+1 ! if exist message && endlocal ! endlocal && set /a sdlfnd=%sdlfnd%+1
set lfndir= && set highdir=
:lskipmcd
## Save SFN#number.ext if SFN~number.ext exists and if not identical on target already (check with crc32).
if %SFN%==/SFN:@ && if exist argtilde && if not %case% "%arg%"=="%argtilde%" && if exist %source%%%sd%%%argtilde% && raw crc32 %source%%%sd%%%argtilde% | set srccrc32=
if %SFN%==/SFN:@ && if exist argtilde && if not %case% "%arg%"=="%argtilde%" && if exist %target%%%td%%%argtilde% && raw crc32 %target%%%td%%%argtilde% | set tgtcrc32=
if %SFN%==/SFN:@ && if exist argtilde && if not %case% "%arg%"=="%argtilde%" && if exist srccrc32 && if exist tgtcrc32 && if not %srccrc32%==0x0 && if not %tgtcrc32%==0x0 && if "%srccrc32%"=="%tgtcrc32%" && goto :lskiptld
if %SFN%==/SFN:@ && if exist argtilde && if %t%==/t && if exist %source%%%sd%%%argtilde% && echo save %argtilde% %NULL% && set /a makefil=%makefil%+1 > nul && set argtilde= && goto :lsmd
if %SFN%==/SFN:@ && if exist argtilde && if not %t%==/t && if exist %source%%%sd%%%argtilde% && echo %act%copy %argtilde% (saved LFN) %NULL% && set needKB= &; fat copy /o %source%%%sd%%%argtilde% %target%%%td% && set target=%target% ! set needKB=1 &; if %needKB%==1 && call :faterror "copy /o %source%%%sd%%%argtilde% %target%%%td%" "goto :lskiptld" "%target%%td%%%argtilde%" &; if exist gotomsg && %gotomsg% ! if exist %target%%%td%%%argtilde% && set /a makefil=%makefil%+1 > nul && set argtilde=
if %copyattr%==Y && if %sourceok:~0,3%==FAT && if exist sfndir && setlocal && set copyattr=a &; if exist LFN && call :copyattributes "%sfnsrc%%%sfndir%" "%target%%%td%%%sfndir%" ! call :copyattributes "%source%%%sd%%%sfndir%" "%target%%%td%%%sfndir%" &; if %success%==Y && endlocal && set "output1=%output1%" && set "output2=%output2%" ! endlocal
#BAD#if %copyattr%==Y && if exist sfndir && if %sourceok:~0,3%==FAT && setlocal && set copyattr=a && call :copyattributes "%sfnsrc%%%sfndir%" "%target%%%td%%%sfndir%" &; if %success%==Y && if not exist LFN && endlocal && set ""output1=%output1%"" && set "output2=%output2%"" ! if %success%==Y && endlocal ! endlocal
:lskiptld
set waittime= && set argtilde= && set srccrc32= && set tgtcrc32=
errorcheck off
if exist LFN && if %lfncatch%==1 && if %sourceok:~0,3%==FAT && setlocal && ATTRIBFT.LLL getsfn input="%output1%" "%sfnsrc%%%fulldir%" &; if exist result && endlocal && set sfnsd=%result% ! endlocal
if exist LFN &; if %LFN%==/LFN:case && set "lfntgt=%lfntgt%%%fulldir%/" ! if %lfncatch%==1 && set "lfntgt=%lfntgt%%%fulldir%/" ! set "lfntgt=%lfntgt%%%sfndir%/" &; if %sourceok:~0,3%==FAT &; if %lfncatch%==1 && set sfnsrc=%sfnsrc%%%sfnsd%/ && set sfnsd= ! set sfnsrc=%sfnsrc%%%sfndir%/
ls %source%%%sd%%%fulldir%/ > nul || goto :lsendloc
if exist fulldir && set "sd=%sd%%%fulldir%/" && set fulldir=
if exist sfndir && set "td=%td%%%sfndir%/" && set sfndir=
setlocal && call :cleanmd %mdmem% %callsect% &; endlocal
call :lscpa
:lsendloc
## Preserve Total output-counts
endlocal && set msds=%msds% && set msdf=%msdf% && set sdsm=%sdsm% && set sdsk=%sdsk% && set fcs=%fcs% && set lfnskip=%lfnskip% && set catskip=%catskip% && set fco=%fco% && set o=%o% && set prompt=%prompt% && set lfprmptd=%lfprmptd% && set lfprmptf=%lfprmptf% && set sdlfnsk=%sdlfnsk% && set copybyt=%copybyt% && set makefil=%makefil% && set sdlfnf=%sdlfnf% && set sdlfnd=%sdlfnd% && set zerobyt=%zerobyt% && set freebyt=%freebyt% && set lastkey=%lastkey% && set r=%r%
shift
## Experimental
#OLD#set lflag=0
goto :lscopy
::
:cleanmd
set basemd=%~1
set memrange=%~2
set /A basemd=%basemd% * 0x200 > nul
set /A memrange=%memrange% * 0x200 > nul
call Fn.24 %basemd% 0x00 %memrange%
goto :eof
::
:prsname1
set gotomsg=
set "message=%~1"
if not "%name1:~-1,1%"=="*" && goto :eof
if "%name1:~0,1%"=="*" && set "name1=*" && set "wcn=*" && goto :eof
if "%name1:~1,1%"=="*" && set "name1=%name1:~0,1%" && set "wcn=*" && goto :eof
if "%name1:~2,1%"=="*" && set "name1=%name1:~0,2%" && set "wcn=*" && goto :eof
if "%name1:~3,1%"=="*" && set "name1=%name1:~0,3%" && set "wcn=*" && goto :eof
if "%name1:~4,1%"=="*" && set "name1=%name1:~0,4%" && set "wcn=*" && goto :eof
if "%name1:~5,1%"=="*" && set "name1=%name1:~0,5%" && set "wcn=*" && goto :eof
if "%name1:~6,1%"=="*" && set "name1=%name1:~0,6%" && set "wcn=*" && goto :eof
if "%name1:~7,1%"=="*" && set "name1=%name1:~0,7%" && set "wcn=*" && goto :eof
if "%name1:~8,1%"=="*" && set "name1=%name1:~0,8%" && set "wcn=*" && goto :eof
if not exist SFN && set "gotomsg=%message%" && goto :eof
if "%name1:~9,1%"=="*" && set "name1=%name1:~0,9%" && set "wcn=*" && goto :eof
if "%name1:~10,1%"=="*" && set "name1=%name1:~0,10%" && set "wcn=*" && goto :eof
if "%name1:~11,1%"=="*" && set "name1=%name1:~0,11%" && set "wcn=*" && goto :eof
if "%name1:~12,1%"=="*" && set "name1=%name1:~0,12%" && set "wcn=*" && goto :eof
if "%name1:~13,1%"=="*" && set "name1=%name1:~0,13%" && set "wcn=*" && goto :eof
if "%name1:~14,1%"=="*" && set "name1=%name1:~0,14%" && set "wcn=*" && goto :eof
if "%name1:~15,1%"=="*" && set "name1=%name1:~0,15%" && set "wcn=*" && goto :eof
if "%name1:~16,1%"=="*" && set "name1=%name1:~0,16%" && set "wcn=*" && goto :eof
set "gotomsg=%message%" && goto :eof
::
:prsext1
set gotomsg=
set "message=%~1"
if not "%ext1:~-1,1%"=="*" && goto :eof
if "%ext1:~1,1%"=="*" && set "ext1=*" && set "wcx=*" && goto :eof
if "%ext1:~2,1%"=="*" && set "ext1=%ext1:~0,2%" && set "wcx=*" && goto :eof
if "%ext1:~3,1%"=="*" && set "ext1=%ext1:~0,3%" && set "wcx=*" && goto :eof
if "%ext1:~4,1%"=="*" && set "ext1=%ext1:~0,4%" && set "wcx=*" && goto :eof
if not exist SFN && set "gotomsg=%message%" && goto :eof
if "%ext1:~5,1%"=="*" && set "ext1=%ext1:~0,5%" && set "wcx=*" && goto :eof
if "%ext1:~6,1%"=="*" && set "ext1=%ext1:~0,6%" && set "wcx=*" && goto :eof
if "%ext1:~7,1%"=="*" && set "ext1=%ext1:~0,7%" && set "wcx=*" && goto :eof
set "gotomsg=%message%" && goto :eof
::
:parseatt
set arga=%a%
if %arga:~0,2%==-d && set a=%arga% && set /a parsedir=0 > nul && goto :eof
if %arga:~1,2%==-d && set a=%arga% && set /a parsedir=0 > nul && goto :eof
if %arga:~2,2%==-d && set a=%arga% && set /a parsedir=0 > nul && goto :eof
if %arga:~3,2%==-d && set a=%arga% && set /a parsedir=0 > nul && goto :eof
if %arga:~4,2%==-d && set a=%arga% && set /a parsedir=0 > nul && goto :eof
if %arga:~5,2%==-d && set a=%arga% && set /a parsedir=0 > nul && goto :eof
if %arga:~6,2%==-d && set a=%arga% && set /a parsedir=0 > nul && goto :eof
if %arga:~7,2%==-d && set a=%arga% && set /a parsedir=0 > nul && goto :eof
if %arga:~8,2%==-d && set a=%arga% && set /a parsedir=0 > nul && goto :eof
if %arga:~0,1%==d && set a=%arga% && goto :eof
if %arga:~1,1%==d && set a=d%arga:~0,1%%%arga:~2% && goto :eof
if %arga:~2,1%==d && set a=d%arga:~0,2%%%arga:~3% && goto :eof
if %arga:~3,1%==d && set a=d%arga:~0,3%%%arga:~4% && goto :eof
if %arga:~4,1%==d && set a=d%arga:~0,4%%%arga:~5% && goto :eof
if %arga:~5,1%==d && set a=d%arga:~0,5%%%arga:~6% && goto :eof
if %arga:~6,1%==d && set a=d%arga:~0,6%%%arga:~7% && goto :eof
if %arga:~7,1%==d && set a=d%arga:~0,7%%%arga:~8% && goto :eof
if %arga:~8,1%==d && set a=d%arga:~0,8%%%arga:~9% && goto :eof
if %arga:~9,1%==d && set a=d%arga:~0,9% && goto :eof
goto :eof
::
:tstname1
set gotomsg=
set "message=%~1"
if %name1%==* && goto :eof
echo -n > (md)%mdmem%+1
pause --wait=0 %name1% > (md)%mdmem%+1
## Only arg is changed back in lscopy, argname can contain 3F!
cat --locate=\x3D --replace=\x3F (md)%mdmem%+1 > nul
cat (md)%mdmem%+1 | set name1=
if %case% "%argname%"=="%name1%" && goto :eof
if %wcn%==* || set "gotomsg=%message%" && goto :eof
if %case% "%argname:~0,1%"=="%name1%" && goto :eof
if %case% "%argname:~0,2%"=="%name1%" && goto :eof
if %case% "%argname:~0,3%"=="%name1%" && goto :eof
if %case% "%argname:~0,4%"=="%name1%" && goto :eof
if %case% "%argname:~0,5%"=="%name1%" && goto :eof
if %case% "%argname:~0,6%"=="%name1%" && goto :eof
if %case% "%argname:~0,7%"=="%name1%" && goto :eof
if %case% "%argname:~0,8%"=="%name1%" && goto :eof
if not exist SFN && set "gotomsg=%message%" && goto :eof
if %case% "%argname:~0,9%"=="%name1%" && goto :eof
if %case% "%argname:~0,10%"=="%name1%" && goto :eof
if %case% "%argname:~0,11%"=="%name1%" && goto :eof
if %case% "%argname:~0,12%"=="%name1%" && goto :eof
if %case% "%argname:~0,13%"=="%name1%" && goto :eof
if %case% "%argname:~0,14%"=="%name1%" && goto :eof
if %case% "%argname:~0,15%"=="%name1%" && goto :eof
if %case% "%argname:~0,16%"=="%name1%" && goto :eof
set "gotomsg=%message%" && goto :eof
goto :eof
::
:testext1
set gotomsg=
set "message=%~1"
if %ext1%==* && goto :eof
echo -n > (md)%mdmem%+1
pause --wait=0 %ext1% > (md)%mdmem%+1
## argext may contain 3F!
cat --locate=\x3D --replace=\x3F (md)%mdmem%+1 > nul
cat (md)%mdmem%+1 | set ext1=
if %argnum%>=1 && call :semicol
if %argnum%>=1 && set fileext=%fileext%
if %argnum%>=1 && if exist fileext && set "argext=%fileext%;" && set fileext=
if %case% "%argext%"=="%ext1%" && goto :eof
if %wcx%==* || set "gotomsg=%message%" && goto :eof
if %case% "%argext:~0,1%"=="%ext1%" && goto :eof
if %case% "%argext:~0,2%"=="%ext1%" && goto :eof
if %case% "%argext:~0,3%"=="%ext1%" && goto :eof
if %case% "%argext:~0,4%"=="%ext1%" && goto :eof
if %case% "%argext:~0,5%"=="%ext1%" && goto :eof
if not exist SFN && set "gotomsg=%message%" && goto :eof
if %case% "%argext:~0,6%"=="%ext1%" && goto :eof
if %case% "%argext:~0,7%"=="%ext1%" && goto :eof
set "gotomsg=%message%" && goto :eof
goto :eof
::
:skipext
if "%~1"=="" && goto :eof
set "ext=.%~1"
call Fn.11 "%ext%" "?" && pause --wait=0 %ext% > (md)%mdmem%+1 && cat --locate=\x3F --replace=\x3D (md)%mdmem%+1 > nul && cat (md)%mdmem%+1 | set ext=
set gotomsg=
if not exist ls && set "message=goto :skipcopy"
if exist ls && set "message=goto :skip1"
if "%noext:~0,6%"=="/-ext:" && if %case% "%argext%"=="%ext%" && set "file=%arg%" && call :nolspace
if "%noext:~0,6%"=="/-ext:" && if %case% "%argext%"=="%ext%" && set "echoarg=%file%" && set file=
if "%noext:~0,6%"=="/-ext:" && if %case% "%argext%"=="%ext%" && set "gotomsg=%message%" && goto :eof
if "%noext:~0,5%"=="/ext:" && if %case% "%argext%"=="%ext%" && set gotomsg= && goto :eof
if "%noext:~0,5%"=="/ext:" && setlocal && set "file=%arg%" &; call :nolspace &; set "echoarg=%file%" &; endlocal && set "echoarg=%echoarg%" && set "gotomsg=%message%"
shift
goto :skipext
::
:tstxname
set gotomsg=
set "message=%~1"
## Already done in parsing /x: ?=3F replaced with '='=3D
if "%x:~0,4%"=="/-x:" && if %case% "%argname:~7,1%"=="%x:~4%" && set "gotomsg=%message%" && goto :eof
if not "%x:~0,4%"=="/-x:" && if %case% "%argname:~7,1%"=="%x:~3%" && goto :eof
if "%x:~0,4%"=="/-x:" && if %case% "%argname:~6,1%"=="%x:~4%" && set "gotomsg=%message%" && goto :eof
if not "%x:~0,4%"=="/-x:" && if %case% "%argname:~6,1%"=="%x:~3%" && goto :eof
if "%x:~0,4%"=="/-x:" && if %case% "%argname:~5,1%"=="%x:~4%" && set "gotomsg=%message%" && goto :eof
if not "%x:~0,4%"=="/-x:" && if %case% "%argname:~5,1%"=="%x:~3%" && goto :eof
if "%x:~0,4%"=="/-x:" && if %case% "%argname:~4,1%"=="%x:~4%" && set "gotomsg=%message%" && goto :eof
if not "%x:~0,4%"=="/-x:" && if %case% "%argname:~4,1%"=="%x:~3%" && goto :eof
if "%x:~0,4%"=="/-x:" && if %case% "%argname:~3,1%"=="%x:~4%" && set "gotomsg=%message%" && goto :eof
if not "%x:~0,4%"=="/-x:" && if %case% "%argname:~3,1%"=="%x:~3%" && goto :eof
if "%x:~0,4%"=="/-x:" && if %case% "%argname:~2,1%"=="%x:~4%" && set "gotomsg=%message%" && goto :eof
if not "%x:~0,4%"=="/-x:" && if %case% "%argname:~2,1%"=="%x:~3%" && goto :eof
if "%x:~0,4%"=="/-x:" && if %case% "%argname:~1,1%"=="%x:~4%" && set "gotomsg=%message%" && goto :eof
if not "%x:~0,4%"=="/-x:" && if %case% "%argname:~1,1%"=="%x:~3%" && goto :eof
if "%x:~0,4%"=="/-x:" && if %case% "%argname:~0,1%"=="%x:~4%" && set "gotomsg=%message%" && goto :eof
if not "%x:~0,4%"=="/-x:" && if %case% "%argname:~0,1%"=="%x:~3%" && goto :eof
if "%x:~0,4%"=="/-x:" && goto :eof
if not "%x:~0,4%"=="/-x:" && set "gotomsg=%message%" && goto :eof
goto :eof
::
:lfncatch
setlocal
## Filter LFN 6x- max 8+3+1=12 still needed! Also: periods in argname and ms-dos forbidden list, like+
#BAD#echo :lfncatch argname=%argname% argext=%argext% arg=%arg%
:lfncatchloop
if not "%~1"=="" && set "argname=%~n1" && set "argext=%~x1" &; set "arg=%argname%%%argext%" && shift
if not exist tdev if not exist fulldir || goto :skipscol
set "file=%arg%"
if not exist argext && set "fileext=%argname%"
call Fn.11 "%file%" ";" && call :semicol
if exist argnum && if not exist argext && if %argnum%>=1 && if %argnum%<=32767 && set "argname=%fileext%"
if %argnum%>=1 && if %argnum%<=32767 && if exist argext && set "arg=%file%" && set "argext=%fileext%"
:skipscol
if not exist arg if not exist fulldir |; setlocal &; if exist arg && echo -e "%arg%" | set file= ! if exist fulldir && echo -e "%fulldir%" | set file= &; set "file=%file:~1,-1%" &; set "file=%file:~0,13%" &; set /a lfile=%@retval% > nul && call :utfcatch &; if %utfcatch%==1 && endlocal && endlocal && set utfcatch=1 && goto :eof ! endlocal
#BAD(inconsistent results)#setlocal && echo -e %arg% | set file= &; set "file=%file:~1,12%" &; set /a lfile=%@retval% > nul &; if %lfile%==1 && if %file:~0,1%>=0x80 && endlocal && endlocal && set utfcatch=1 && goto :eof ! if %lfile%==2 && if %file:~1,1%>=0x80 && endlocal && endlocal && set utfcatch=1 && goto :eof ! if %lfile%==3 && if %file:~2,1%>=0x80 && endlocal && endlocal && set utfcatch=1 && goto :eof ! if %lfile%==4 && if %file:~3,1%>=0x80 && endlocal && endlocal && set utfcatch=1 && goto :eof ! if %lfile%==5 && if %file:~4,1%>=0x80 && endlocal && endlocal && set utfcatch=1 && goto :eof ! if %lfile%==6 && if %file:~5,1%>=0x80 && endlocal && endlocal && set utfcatch=1 && goto :eof ! if %lfile%==7 && if %file:~6,1%>=0x80 && endlocal && endlocal && set utfcatch=1 && goto :eof ! if %lfile%==8 && if %file:~7,1%>=0x80 && endlocal && endlocal && set utfcatch=1 && goto :eof ! if %lfile%==9 && if %file:~8,1%>=0x80 && endlocal && endlocal && set utfcatch=1 && goto :eof ! if %lfile%==10 && if %file:~9,1%>=0x80 && ####endlocal && endlocal && set utfcatch=1 && goto :eof ! if %lfile%==11 && if %file:~10,1%>=0x80 && endlocal && endlocal && set utfcatch=1 && goto :eof ! if %lfile%==12 && if %file:~11,1%>=0x80 && endlocal && endlocal && set utfcatch=1 && goto :eof ! endlocal
set "arg=%arg%" &; set /a larg=%@retval% > nul
set "argname=%argname%" &; set /a largname=%@retval% > nul
set "argext=%argext%" &; set /a largext=%@retval% > nul
if %larg%>=13 && set lfncatch=1
if %largname%>=9 && set lfncatch=1
if %largext%>=5 && set lfncatch=1
echo -n > (md)%mdmem%+1
pause --wait=0 %arg% > (md)%mdmem%+1
cat --locate=\x5C\x20 (md)%mdmem%+1 > nul && set /a lfncatch=1 > nul
cat --locate=\x20 (md)%mdmem%+1 > nul && set /a lfncatch=1 > nul
## Check for tilded' SFN-files and set argtilde to copy @/# files with /lfn:@ ('~'=7E '@'=40 '#'=23)
if not %lfncatch%==1 && if %SFN%==/SFN:@ && call :argtilde
echo -n > (md)%mdmem%+1
pause --wait=0 %argname% > (md)%mdmem%+1
cat --locate=\x2E (md)%mdmem%+1 > nul && set /a lfncatch=1 > nul
## "=" en "|" not possible!
## BUT: '+' and '"' are alowed in MS-DOS 7.1 SFN's => ignored like FAT does
## Also: '!' gives stange results in MS-DOS, added to nogo
## And: spaces are possible in SFN's if given between "S F N" (in MS-DOS 7.1) => ignored
## Problem: FAT doesn't accept args between double quotes
call :dosnogo \x22 \x2A \x2B \x2C \x3A \x3B \x3C \x3D \x3E \x3F \x5B \x5D \x7C
if not exist argext && if not %lfncatch%==1 && if not "%~1"=="" && goto :lfncatchloop
if not exist argext && if not %lfncatch%==1 && set lfncatch=
if not exist argext && endlocal && set lfncatch=%lfncatch% && set argnum=%argnum% && set argtilde=%argtilde% && goto :eof
echo -n > (md)%mdmem%+1
pause --wait=0 %argext% > (md)%mdmem%+1
## LFN-chars: '!'=21 '"'=22 '*'=2A '+'=2B ','=2C ':'=3A ';'=3B '<'=3C '='=3D '>'=3E '?'=3F '['=5B ']'=5D '|'=7C
call :dosnogo \x22 \x2A \x2B \x2C \x3A \x3B \x3C \x3D \x3E \x3F \x5B \x5D \x7C
if not %lfncatch%==1 && if not "%~1"=="" && goto :lfncatchloop
if not %lfncatch%==1 && set lfncatch= && endlocal && set argnum=%argnum% && set argtilde=%argtilde% && goto :eof
if %lfncatch%==1 && endlocal && set lfncatch=%lfncatch% && set argnum=%argnum% && set argtilde=%argtilde% && goto :eof
endlocal && set lfncatch=%lfncatch% && set argnum=%argnum% && set argtilde=%argtilde%
goto :eof
::
:utfcatch
## Check if characters in file are non-ASCII, i.e. > 0x80 ( > 128)
if not exist address && echo -n > (md)%mdmem%+1 && pause --wait=0 "%file%" > (md)%mdmem%+1 && set /A address=%mdmem% * 0x200 + 1
read %address% > nul &; set /A result=%@retval%&0xff > nul &; if %result%>=0x80 && set utfcatch=1 && set result= && set address= && set lfile= && goto :eof ! set /a lfile=%lfile%-1 > nul
set result= &; if %lfile%>=1 && set /A address=%address%+1 > nul && goto :utfcatch ! set lfile=
goto :eof
::
:semicol
setlocal && set * && set "file=%file%" && set "fileext=%fileext%" && set "arg=%arg%" && set "argext=%argext%"
if not exist file && set "file=%arg%"
if not exist fileext && set "fileext=%argext%"
if "%file:~-2,1%"==";" && set "file=%file:~,-2%" && set /a argnum=%fileext:~-1,1% > nul &; set "fileext=%fileext:~,-2%" &; endlocal && set "file=%file%" && set "fileext=%fileext%" && set argnum=%argnum% && goto :eof
if "%file:~-3,1%"==";" && set "file=%file:~,-3%" && set /a argnum=%fileext:~-2,2% > nul &; set "fileext=%fileext:~,-3%" &; endlocal && set "file=%file%" && set "fileext=%fileext%" && set argnum=%argnum% && goto :eof
if "%file:~-4,1%"==";" && set "file=%file:~,-4%" && set /a argnum=%fileext:~-3,3% > nul &; set "fileext=%fileext:~,-4%" &; endlocal && set "file=%file%" && set "fileext=%fileext%" && set argnum=%argnum% && goto :eof
if "%file:~-5,1%"==";" && set "file=%file:~,-5%" && set /a argnum=%fileext:~-4,4% > nul &; set "fileext=%fileext:~,-5%" &; endlocal && set "file=%file%" && set "fileext=%fileext%" && set argnum=%argnum% && goto :eof
if "%file:~-6,1%"==";" && set "file=%file:~,-6%" && set /a argnum=%fileext:~-5,5% > nul &; set "fileext=%fileext:~,-6%" &; endlocal && set "file=%file%" && set "fileext=%fileext%" && set argnum=%argnum% && goto :eof
if "%file:~-7,1%"==";" && set "file=%file:~,-7%" && set /a argnum=%fileext:~-6,6% > nul &; set "fileext=%fileext:~,-7%" &; endlocal && set "file=%file%" && set "fileext=%fileext%" && set argnum=%argnum% && goto :eof
goto :eof
::
:argtilde
if %x%==/-x:@ && goto :eof
setlocal
set numtilde= && set tilde= && set tildelen=
cat --skip=1 --length=7 --locate=\x40 (md)%mdmem%+1 > nul && set argtilde=%arg% && set "tilde=\x40"
cat --skip=1 --length=7 --locate=\x23 (md)%mdmem%+1 > nul && set argtilde=%arg% && set "tilde=\x23"
cat --skip=1 --length=7 --locate=\x7E (md)%mdmem%+1 > nul && set argtilde=%arg% && set "tilde=\x7E"
if not exist argtilde && endlocal && goto :eof
setlocal && call :notilde "1" "2" "3" "4" "5" "6" "7" "8" "9" &; endlocal && set numtilde=%numtilde% &; if not %numtilde%==Y && endlocal && set argtilde= && set tilde= && set numtilde= && goto :eof
if %tilde%==\x7E && if not exist fulldir && if not exist tdev && cat --skip=1 --length=7 --locate=\x7E --replace=\x40 (md)%mdmem%+1 > nul
if %tilde%==\x7E && if not exist fulldir && if not exist tdev && cat (md)%mdmem%+1 | set argtilde=
if %tilde%==\x7E &; if not exist fulldir if not exist tdev || cat --skip=1 --length=7 --locate=\x7E --replace=\x23 (md)%mdmem%+1 > nul
if %tilde%==\x7E &; if not exist fulldir if not exist tdev || cat (md)%mdmem%+1 | set argtilde=
if exist tdev && set source= && set sd= &; set source=%sdev%/ && call set "sd=%^td:~%ltdir%%%"
raw cat --length=0 %source%%%sd%%%argtilde% ;; set /a tildelen=%@retval% > nul &; if %tildelen%>=256 && set argtilde=
if exist argtilde && cat %source%%%sd%%%argtilde% | set fullname=
set "fullname=%fullname%" && set /a namelen=%@retval% > nul
if not %namelen%==%tildelen% && set argtilde=
endlocal && set argtilde=%argtilde%
goto :eof
::
:notilde
## Set numtilde=Y in case '~'=7E or '@'=40 or '#"=23 WITH number 1-9 behind exists
set message=
if "%~1"=="" && goto :eof
set message=%~1
cat --skip=1 --length=7 --locate=%tilde%%%message% (md)%mdmem%+1 > nul && set "numtilde=Y"
shift
goto :notilde
::
:dosnogo
if "%~1"=="" && goto :eof
if "%~1"=="" && echo -n > (md)%mdmem%+1 && goto :eof
set message=%~1
## In case of cat --locate && set var > nul seems to be neccessary
cat --locate=%message% (md)%mdmem%+1 > nul && set /a lfncatch=1 > nul
shift
goto :dosnogo
::
:lfn2sfn
#OKE#echo %0 arg=%arg% argname=%argname% argext=%argext% argnum=%argnum% lfncatch=%lfncatch% newdir=%newdir%
if not %lfncatch%==1 && set file2=%argname%%%argext%
if not exist fulldir && if exist argnum && if %argnum%>=32768 && echo argnum=%argnum% && goto :eof
if not exist fulldir && if exist argnum && if not %argnum%>=1 && echo argnum=%argnum% && goto :eof
## Next 4 filenum/nofilnum lines really needed?
if not exist fulldir && if exist argnum && if %argnum%>=1 && if exist filenum && if not %argnum%==%filenum% && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && set "gotomsg=goto :skip1" && goto :eof
if not exist fulldir && if exist argnum && if %argnum%==0 && if exist filenum && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && set "gotomsg=goto :skip1" && goto :eof
if not exist fulldir && if not exist argnum && if exist filenum && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && set "gotomsg=goto :skip1" && goto :eof
if not exist fulldir && if exist argnum && if %argnum%>=1 && if exist nofilnum && if %argnum%==%nofilnum% && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && set "gotomsg=goto :skip1" && goto :eof
if not exist fulldir && if exist argnum && if not exist argext && set "file=%argname%" && set "fileext=%argname%" && call :semicol
if not exist fulldir && if exist argnum && if not exist argext && set "argname=%file%" && set file=
if exist argname && echo -n > (md)%mdmem%+1
if exist argname && pause --wait=0 %argname% > (md)%mdmem%+1
if exist file2 && if not exist tdev && if not exist fulldir && goto :skiptilde
if exist argname && setlocal && call :cleanlfn &; endlocal && set "argname=%file2%"
set "argname=%argname%" &; set /a largname=%@retval% > nul &; set lfile2=%largname%
call :dossubst \x22 \x2A \x2B \x2C \x3A \x3B \x3C \x3D \x3E \x3F \x5B \x5D \x7C
#ORG#call :dossubst \x21 \x22 \x2A \x2B \x2C \x3A \x3B \x3C \x3D \x3E \x3F \x5B \x5D \x7C
set /u "argname=%file2%" &; set /a largname=%@retval% > nul && set file2= && set lfile2=
#OKE#echo %0 argname=%argname%
set /a tildenum=1 > nul
:tildechk
## FAT32 maximum files in one directory
if %tildenum%==65537 && set file2= && echo -e %act%omit$[0x00]"$[]%arg%$[0x00]"$[]to %file2% (%file2% already on target) %NULL% && set "gotomsg=goto :skip1" && goto :eof
if %SFN%==/SFN:@ && if %tildenum%==32768 && set file2= && echo -e %act%omit$[0x00]"$[]%arg%$[0x00]"$[]to %file2% (%file2% already on target) %NULL% && set "gotomsg=goto :skip1" && goto :eof
if %largname%>=7 && set argname=%argname:~0,6%
set "argname=%argname%" &; set /a largname=%@retval% > nul
if %largname%==6 && if %tildenum%>=10 && set argname=%argname:~0,5%
if %largname%==5 && if %tildenum%>=100 && set argname=%argname:~0,4%
if %largname%==4 && if %tildenum%>=1000 && set argname=%argname:~0,3%
if %largname%==3 && if %tildenum%>=10000 && set argname=%argname:~0,2%
## Needed for incremental copying if file2 with same tildenum exists and CRC32's are unequal
if %i%==/i && if %tildenum%>=2 && set "file2=%argname%~%tildenum%%%argext%" && goto :incremen
if %tildenum%>=2 && set "file2=%argname%~%tildenum%%%argext%" && goto :asknext
if exist argnum && if exist argext && call :semicol
if exist argnum && if exist argext && set "argext=%fileext%"
if not exist argext && goto :noargext
echo -n > (md)%mdmem%+1
pause --wait=0 %argext% > (md)%mdmem%+1
call Fn.11 "%argext%" "\x20" && setlocal && call :delspace &; endlocal && set argext=%file2%
set "argext=%argext%" &; set /a largext=%@retval% > nul &; set lfile2=%largext%
call :dossubst \x22 \x2A \x2B \x2C \x3A \x3B \x3C \x3D \x3E \x3F \x5B \x5D \x7C
#ORG#call :dossubst \x21 \x22 \x2A \x2B \x2C \x3A \x3B \x3C \x3D \x3E \x3F \x5B \x5D \x7C
set /u "argext=%file2%" &; set /a largext=%@retval% > nul
set file2= && set lfile2=
if %largext%>=5 && set "argext=%argext:~0,4%" && set largext= ! set largext=
set "argext=%argext%"
:noargext
if %lfncatch%==1 && set file2=%argname%~%tildenum%%%argext%
if not %lfncatch%==1 && set file2=%argname%%%argext% &; set /a lfile2=%@retval% > nul
## Because tdev comes from :parsetd
if exist tdev && if %lfile2%>=13 && set file2= && echo Error conversion LFN to SFN && set "gotomsg=goto :eof" && goto :eof
if "%arg%"=="%fulldir%" && if %largname%>=13 && set file2= && echo Error conversion LFN to SFN && set "gotomsg=goto :lsendloc" && goto :eof
if %lfile2%>=13 && echo No conversion LFN to SFN && set file2= && set "gotomsg=goto :skip1" && goto :eof
set largname= && set lfile2=
## Needed for VAR target directory
if exist tdev && set target=%tdev%
if exist tdev && goto :asknext
if exist fulldir && goto :asknext
## Incremental copying with CRC32
:incremen
if %i%==/i && set "file=%arg%" && call :nolspace
if %i%==/i && set "echoarg=%file%" && set file=
if %i%==/i && set argcrc32=
if %i%==/i && raw crc32 %source%%%sd%%%arg% | set argcrc32= &; if exist argcrc32 && set /A argcrc32=0x%argcrc32% > nul
if %i%==/i && if exist argcrc32 && if %argcrc32%==0x0 && goto :asknext
if %i%==/i && set copycrc3=
if %i%==/i && raw crc32 %target%%%td%%%file2% | set copycrc3= &; if exist copycrc3 && set /A copycrc3=0x%copycrc3% > nul
if %i%==/i && if exist copycrc3 && if %copycrc3%==0x0 && goto :asknext
:asknext
## Check first if SFN#number.ext or SFN@number.ext is equal on target, if not: update first before skip
if %SFN%==/SFN:@ && if %i%==/i && if %argcrc32%==%copycrc3% && call :lfnadd
if %i%==/i && if %argcrc32%==%copycrc3% && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && echo -e %act%skip %echoarg% %NULL% && set "gotomsg=goto :skip1" && goto :eof
## Incremental copying only fully possible with consisten use /sfn:@, if SFN~1 exists on target and SFN~2 comes up, will first try target-filename SFN~1 => CRC32's unequal, but call :readlfn compare LFN's
if not %lfncatch%==1 && if not exist fulldir && if exist argnum && if %argnum%>=1 && goto :skiptilde
if not exist tdev if not exist fulldir && goto :skipaskd
if %lfprmptd%==2 && goto :skipaskd
if not exist lfprmptd && fat dir %target%%%td%%%file2% > nul && set /a tildenum=%tildenum%+1 > nul && goto :tildechk
if not exist lfprmptd && echo %act%make directory %target%%%td%%%file2% %NULL% && set newdir=1 && goto :skipaskd
#DEBUG#if not exist lfprmptd && echo C %act%make directory %target%%%td%%%file2% %NULL% && set newdir=1 && goto :skipaskd
set askcopyd= && set copyd=
if %lfprmptd%==1 && fat dir %target%%%td%%%file2% > nul && set askcopyd=Y
## Read-out LFN directory-name with SFN:@ if #-SFN exists ('~'=7E, '#'=23)
#DEBUG#fat dir %target%%%td%%%file2% > nul || echo %act%make directory D %target%%%td%%%file2% %NULL%
#BAD#fat dir %target%%%td%%%file2% > nul |; if not exist t && echo >make directory %target%%%td%%%file2% %NULL% && set newdir=1 ! set newdir=1
set echoD= && fat dir %target%%%td%%%file2% > nul || echo %act%make directory %target%%%td%%%file2% %NULL% && set newdir=1 && if not %SFN%==/SFN:@ && if not exist t && set echoD=Y
#DEBUG#set echoD= && fat dir %target%%%td%%%file2% > nul || echo D %act%make directory %target%%%td%%%file2% %NULL% && set newdir=1 && if not %SFN%==/SFN:@ && if not exist t && set echoD=Y
if %SFN%==/SFN:@ && if %askcopyd%==Y && echo Target directory exists: %target%%%td%%%file2%/ && set newdir=0 && setlocal && call :readlfn \x7E \x23 &; endlocal && set tildenum=%tildenum% && set "gotomsg=%gotomsg%" && set file2=%file2% &; if exist gotomsg && %gotomsg%
if %SFN%==/SFN:@ && if %askcopyd%==Y && if %newdir%==0 && set /p:90 /u "copyd= Do you want to make next SFN (Y=yes N=no A=allways S=skip Q=quit)?" &; set copyd=%copyd:~0,1% && echo
if not %SFN%==/SFN:@ && if %askcopyd%==Y && if %newdir%==0 && echo Directory %file2% exists on target && set /p:90 /u "copyd= Do you want to make next SFN (Y=yes N=no A=allways S=skip Q=Quit)?" &; set copyd=%copyd:~0,1% && echo
if %askcopyd%==Y && if %newdir%==1 && set copyd=Y
if %askcopyd%==Y && if not %copyd%==Y && if not %copyd%==N && if not %copyd%==A && if not %copyd%==S && if not %copyd%==Q && goto :eof
if %copyd%==Y && set /a tildenum=%tildenum%+1 > nul && goto :tildechk
if %copyd%==N && goto :skipaskf
if %copyd%==A && set lfprmptd= && set /a tildenum=%tildenum%+1 > nul && goto :tildechk
if %copyd%==S && set lfprmptd=2 && goto :skipaskf
if %copyd%==Q && set "gotomsg=Aborted by user" && goto :eof
set askcopyd= && set copyd=
:skipaskd
if not %lfprmptd%==2 && if exist tdev && if %SFN%==/SFN:@ && setlocal && call :lfnadd &; if %lfncatch%==1 && endlocal && set makefil=%makefil% && set lfprmptd=%lfprmptd% ! endlocal
if not %lfprmptd%==2 && if exist fulldir && if %SFN%==/SFN:@ && setlocal && call :lfnadd &; if %lfncatch%==1 && endlocal && set makefil=%makefil% && set lfprmptd=%lfprmptd% ! endlocal
if exist tdev && goto :skipaskf
if exist fulldir && goto :skipaskf
if %lfprmptf%==2 && goto :skipaskf
if not exist lfprmptf && if exist %target%%%td%%%file2% && set /a tildenum=%tildenum%+1 > nul && goto :tildechk
if not exist lfprmptf && goto :skipaskf
set askcopyf= && set copyf=
if exist %target%%%td%%%file2% && set askcopyf=Y
## Read-out SFN file-name with SFN:@ if @-SFN exists ('@'=40)
if not %i%==/i && if %SFN%==/SFN:@ && if %askcopyf%==Y && if %newdir%==0 && setlocal && call :readlfn \x7E \x40 &; endlocal && set tildenum=%tildenum% && set "gotomsg=%gotomsg%" &; if exist gotomsg && %gotomsg%
if %i%==/i && if %SFN%==/SFN:@ && if %askcopyf%==Y && setlocal && call :readlfn \x7E \x40 &; endlocal && set tildenum=%tildenum% && set "gotomsg=%gotomsg%" &; if exist gotomsg && %gotomsg%
if %SFN%==/SFN:@ && if %askcopyf%==Y && if %newdir%==0 && echo File %file2% exists on target && set /p:90 /u "copyf= Do you want to make next SFN (Y=yes N=no A=allways S=skip)?" &; set copyf=%copyf:~0,1% && echo
if not %SFN%==/SFN:@ && if %askcopyf%==Y && if %newdir%==0 && echo File %file2% exists on target && set /p:90 /u "copyf= Do you want to make next SFN (Y=yes N=no A=allways S=skip)?" &; set copyf=%copyf:~0,1% && echo
if not %i%==/i && if %askcopyf%==Y && if %newdir%==1 && set copyf=Y
if not %i%==/i && if %askcopyf%==Y && if not %copyf%==Y && if not %copyf%==N && if not %copyf%==A && if not %copyf%==S && echo %act%omit %file2% %NULL% && set "gotomsg=goto :skip1" && goto :eof
if not %i%==/i && if %copyf%==Y && set /a tildenum=%tildenum%+1 > nul && goto :tildechk
if not %i%==/i && if %copyf%==N && goto :skipaskf
if not %i%==/i && if %copyf%==A && set lfprmptf= && set /a tildenum=%tildenum%+1 > nul && goto :tildechk
if not %i%==/i && if %copyf%==S && set lfprmptf=2 && goto :skipaskf
if not %SFN%==/SFN:@ && if %i%==/i && if %askcopyf%==Y && set /a tildenum=%tildenum%+1 > nul && goto :tildechk
set askcopyf= && set copyf=
:skipaskf
echo -n > (md)0x302+60 && set > (md)0x302+60 && raw cat --locate=\x0A (md)0x302+60 > nul &; if %@retval%>=59 && echo %0 NUMVARS>=59
#OKE_55vars##echo -n > (md)0x302+60 && set > (md)0x302+60 && raw cat --locate=\x0A (md)0x302+60 > nul &; if %@retval%>=55 && echo %0 NUMVARS>=55 && pause KEY...
set gotomsg=
#BAD#if exist tdev && set sfndir=%file2% && set file2= &; goto :nolfnver
if exist tdev &; fat dir %target%%%td%%%file2% > nul && goto :nolfnver ! set sfndir=%file2% && goto :eof
if "%arg%"=="%fulldir%" &; fat dir %target%%%td%%%file2% > nul && goto :nolfnver ! set sfndir=%file2% && goto :eof
if exist lfnfile2 && set "FILE2=%file2%" && set file2= && goto :eof
set argname=
set argext=
set tildenum=
:skiptilde
## MAX PATH =260 C:\ + directories INCLUDING 255 chars LFN = 260 chars oke including (fd0)/
#WRONG# Source tested up to a depth of 22 directories of 8-9 chars plus 255 chars LFN = 460 chars oke including (fd0)/
set if=
set "if=%source%%%sd%%%arg%" &; set /a lif=%@retval% > nul
if %lif%>=260 && echo -e Error: source command-line is too long (%lif%) %act%omit$[0x00]"$[]%if%$[0x00]" %NULL% && set if= && set "gotomsg=goto :skip1" && goto :eof
#WRONG#if %lif%>=512 && echo -e Error: source command-line is too long (%lif%) %act%omit$[0x00]"$[]%if%$[0x00]" %NULL% && set if= && set "gotomsg=goto :skip1" && goto :eof
set if= && set lif= && set of=
set "of=%target%%%td%%%file2%" &; set /a lof=%@retval% > nul
if %lof%>=260 && echo -e Error: target command-line is too long (%lof%) %act%omit$[0x00]"$[]%of%$[0x00]" %NULL% && set of= && set if= && set "gotomsg=goto :skip1" && goto :eof
#OLD#if %lof%>=256 && echo -e Error: target command-line is too long (%lof%) %act%omit$[0x00]"$[]%of%$[0x00]" %NULL% && set of= && set if= && set "gotomsg=goto :skip1" && goto :eof
set of= && set lof=
set file1=
set file1=%source%%%sd%%%arg%
if not %i%==/i && set "file=%arg%" && call :nolspace
if not %i%==/i && set "echoarg=%file%" && set file=
if %SFN%==/SFN:@ && if %i%==/i && set "file=%arg%" && call :nolspace
if %SFN%==/SFN:@ && if %i%==/i && set "echoarg=%file%" && set file=
if not exist echoarg && set echoarg=%arg%
if not exist %target%%%td%%%file2% && echo -e %act%copy %echoarg% => %file2% %NULL% &; if %t%==/t && goto :nolfnver ! set waittime=0 && goto :fatmkfile
#DEBUG#if not exist %target%%%td%%%file2% && echo -e A argsize=%argsize% %act%copy %echoarg% => %file2% %NULL% &; if %t%==/t && goto :nolfnver ! set waittime=0 && goto :fatmkfile
set askover= && set copyo=
if exist prompt && if %prompt%==1 && if not %o%==/o && if exist %target%%%td%%%file2% && set /a askover=1 > nul
if %askover%==1 && echo Do you want to overwrite %file2%? && set /p:90 /u "copyo= (Y=yes N=no A=all S=skip)" &; set copyo=%copyo:~0,1% && echo
if %askover%==1 && if not %copyo%==Y && if not %copyo%==N && if not %copyo%==A && if not %copyo%==S && set copyo= && echo %act%omit %file2% %NULL% && set "gotomsg=goto :skip1" && goto :eof
set askover=
if %copyo%==N && set copyo= && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && echo %act%skip %file2% %NULL% && set "gotomsg=goto :skip1" && goto :eof
if %copyo%==S && set /a prompt=0 > nul && set copyo= && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && echo -e %act%skip %echoarg% %NULL% && set "gotomsg=goto :skip1" && goto :eof
if %copyo%==A && set "o=/o" && set prompt=
if exist prompt && if %prompt%==0 && if exist %target%%%td%%%file2% && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && echo -e %act%skip %echoarg% %NULL% && set "gotomsg=goto :skip1" && goto :eof
if %o%==/o && if exist %target%%%td%%%file2% && set copyo=Y
if %copyo%==Y && if not %t%==/t &; fat del %target%%%td%%%file2% || set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && echo Error: delete %target%%%td%%%file2% && goto :eof
set verloop=1
#old#:ddloop
if %copyo%==Y && set /a fco=%fco%+1 > nul && set /a lfco=%lfco%+1 > nul && echo -e %act%overwrite %echoarg% => %file2% %NULL%
set copyo=
## Negative argsize with almost 4 GB-file, above 0x7FFFFFF same limitations CALC & @retval ??
set argsize=
raw cat --length=0 %file1% ;; set /a argsize=%@retval%&0xffffffff > nul
if exist argsize && if not %argsize%>=0 && call :adretval "%file1%" "goto :nolfnver"
if exist argsize && if exist gotomsg && %gotomsg%
if %argsize%==0 && if not exist z &; echo -e %act%omit$[0x00]"$[]%file1%$[0x00]"$[](zerobyte-file) && set "gotomsg=goto :skip1" && goto :eof
if %t%==/t && goto :nolfnver
if exist %target%%%td%%%file2% && ls %target%%%td%%%file2% &; fat del %target%%%td%%%file2% > nul || echo Rollback error: can not delete %target%%%td%%%file2% > nul && set "gotomsg=goto :skip1" && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :eof
set waittime=0
#OLD#set waittime=1
:fatmkfile
#DEBUG#echo :fatmkfile file1=%file1% %^target%%%^td%%%^file2%=%target%%%td%%%file2% argsize=%argsize%
#DEBUG#echo -n > (md)0x302+60 && set > (md)0x302+60 && raw cat --locate=\x0A (md)0x302+60 > nul &; if %@retval%>=59 && echo :fatmkfile NUMVARS>=59
if %argsize%==0 && if exist z &; if not exist o if not %copy%==Y |; if exist %target%%%td%%%file2% &; if %SFN%==/SFN:@ && goto :nolfnver ! goto :eof
#BAD???#if %argsize%==0 && if exist z &; if not exist o if not %copy%==Y |; if exist %target%%%td%%%file2% &; if not exist ls && goto :eof ! goto :nolfnver
#NotGoodWithLFN#if exist z &; if not exist o if not %copy%==Y |; if exist %target%%%td%%%file2% &; fat del %target%%%td%%%file2% > nul |; if %waittime%<=3 && set /a waittime=%waittime%+1 > nul && goto :fatmkfile ! echo Can not delete %target%%%td%%%file2% > nul && set "gotomsg=goto :skip1" && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :eof
fat mkfile size=%argsize% %target%%%td%%%file2% > nul
if %@retval%==0 && pause --wait=%waittime% &; if not exist %target%%%td%%%file2% && set /a waittime=%waittime%+1 > nul &; if %waittime%<=3 && goto :fatmkfile ! echo Can not make %target%%%td%%%file2% && set "gotomsg=goto :skip1" && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :eof
if exist %target%%%td%%%file2% && pause --wait=%waittime% &; set /a waittime=%waittime%+1 > nul
raw cat --length=0 %target%%%td%%%file2% > nul ;; set /a makesize=%@retval% > nul &; if not %makesize%==%argsize% && if %waittime%<=3 && fat del %target%%%td%%%file2% > nul && goto :fatmkfile ! if not %makesize%==%argsize% && if %waittime%<=3 && echo Rollback error: can not delete %target%%%td%%%file2% > nul ! if not %makesize%==%argsize% && echo Can not make %target%%%td%%%file2% &; set "gotomsg=goto :skip1" && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :eof
set waittime= && set makesize=
## "raw" needed to overcome gzip/lzma errors
if %argsize%==0 && if exist z &; if not exist ls && goto :eof ! if exist sfnarg && goto :eof ! goto :nolfnver
#BAD???#if %argsize%==0 && if exist z &; if not exist ls && goto :eof ! goto :nolfnver
set veloop=1
:ddloop
raw dd if=%file1% of=%target%%%td%%%file2% |; set /a verloop=%verloop%+1 > nul &; if not %verloop%>=5 && goto :ddloop ! echo Can not ddcopy LFN file to SFN && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :eof
## Always verify with crc32
if %v%==/v && goto :ddverify
set argcrc32= &; raw crc32 %file1% | set argcrc32= &; if exist argcrc32 && set /A argcrc32=0x%argcrc32% > nul
set copycrc3= &; raw crc32 %target%%%td%%%file2% | set copycrc3= &; if exist copycrc3 && set /A copycrc3=0x%copycrc3% > nul
if not %argcrc32%==%copycrc3% && set /a verloop=%verloop%+1 > nul &; if not %verloop%>=5 && goto :ddloop
if not %v%==/v && if not %verloop%>=5 && goto :nolfnver
:ddverify
if %verloop%==5 &; fat del %target%%%td%%%file2% && echo Error: copy %arg% to %file2% not possible ! echo Rollback error: can not delete %target%%%td%%%file2% &; set file2= && set "gotomsg=goto :skip1" && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :eof
cmp %file1% %target%%%td%%%file2% > nul || set /a verloop=%verloop%+1 > nul && goto :ddloop
:nolfnver
if exist gotomsg && set "gotomsg=goto :lloopend" && goto :eof
if exist LFN && set "gotomsg=goto :makelfnfile" && goto :eof
if exist LFNFILE2 && echo -e "%LFNFILE2%" | set echoarg= &; set "echoarg=%echoarg:~1,-1%"
if %SFN%==/SFN:@ && if exist lfncatch && setlocal && call :lfnadd &; endlocal && set makefil=%makefil%
if exist tdev && set sfndir=%file2% && goto :eof
#NONEED???#if "%arg%"=="%fulldir%" && set sfndir=%file2% && set gotomsg= && goto :eof
set "gotomsg=goto :lloopend" && goto :eof
::
:cleanlfn
set seekbyt=
cat --locate=\x2E --number=1 (md)%mdmem%+1 | set seekbyt=
if not exist seekbyt && goto :delspace
set seekbyt=0x%seekbyt%
set /A seekbyt=%seekbyt% > nul
set /A skipbyt=%seekbyt%+1 > nul
dd if=(md)%mdmem%+1 of=(md)%mdmem%+1 bs=1 skip=%skipbyt% seek=%seekbyt%
goto :cleanlfn
:delspace
set seekbyt=
cat --locate=\x5C\x20 --number=1 (md)%mdmem%+1 | set seekbyt=
if not exist seekbyt && goto :delspac2
set seekbyt=0x%seekbyt%
set /A seekbyt=%seekbyt% > nul
set /A skipbyt=%seekbyt%+2 > nul
dd if=(md)%mdmem%+1 of=(md)%mdmem%+1 bs=1 skip=%skipbyt% seek=%seekbyt%
goto :delspace
:delspac2
set seekbyt=
cat --locate=\x20 --number=1 (md)%mdmem%+1 | set seekbyt=
if not exist seekbyt && goto :setfile2
set seekbyt=0x%seekbyt%
set /A seekbyt=%seekbyt% > nul
set /A skipbyt=%seekbyt%+1 > nul
dd if=(md)%mdmem%+1 of=(md)%mdmem%+1 bs=1 skip=%skipbyt% seek=%seekbyt%
goto :delspac2
:setfile2
cat (md)%mdmem%+1 | set file2=
goto :eof
::
:dossubst
if "%~1"=="" && cat --length=%lfile2% (md)%mdmem%+1 | set file2=
if "%~1"=="" && echo -n > (md)%mdmem%+1
if "%~1"=="" && goto :eof
set message=%~1
set file2=
cat --locate=%message% --replace=\x5F (md)%mdmem%+1 > nul
shift
goto :dossubst
::
:readlfn
## Read out LFN if SFN@/# exists & set goto-message if incremental copying
set fileadd= && set char1= && set char2=
set char1=%~1
set char2=%~2
echo -n > (md)%mdmem%+1
pause --wait=0 "%file2%" > (md)%mdmem%+1
cat --locate=%char1% --replace=%char2% (md)%mdmem%+1
cat (md)%mdmem%+1 | set fileadd= &; set "fileadd=%fileadd:~1,-1%"
echo -n > (md)%mdmem%+1
set "file=%arg%" &; call :nolspace "%file%"
set "echoarg=%file%"
if exist %target%%%td%%%fileadd% && cat %target%%%td%%%fileadd% | set readout=
if %SFN%==/SFN:@ && if not %i%==/i && if /i "%readout%"=="%echoarg%" &; if not exist tdev && if not exist fulldir && set "gotomsg=goto :skipaskf" ! set "gotomsg=goto :skipaskf" &; goto :eof
if %SFN%==/SFN:@ && if not %i%==/i && if exist readout && if /i not "%readout%"=="%echoarg%" && set /a tildenum=%tildenum%+1 > nul && set "gotomsg=goto :tildechk" && goto :eof
if %i%==/i && if /i "%readout%"=="%echoarg%" && set "gotomsg=goto :skipaskf"
if %i%==/i && if exist readout && if /i not "%readout%"=="%echoarg%" && set /a tildenum=%tildenum%+1 > nul && set "gotomsg=goto :tildechk"
if exist readout &; if not exist tdev if not exist fulldir || write (md)%mdmem%+1 <%readout%> > nul
if exist readout &; if not exist tdev if not exist fulldir || echo -e \x20is\x20LFN\x20of\x20<%file2%>\x20Actual source:\x20<%echoarg%> >> (md)%mdmem%+1
if exist readout &; if not %i%==/i &; if not exist tdev if not exist fulldir || cat (md)%mdmem%+1
if not %i%==/i && if not exist tdev && if not exist fulldir && if exist readout && if exist %target%%%td%%%fileadd% && cat %target%%%td%%%fileadd% && echo && echo -e \x20is LFN of %file2% Actual source: %echoarg%
set file= && set char1= && set char2=
echo -n > (md)%mdmem%+1
goto :eof
::
:lfnadd
if exist tdev && if not %target:~-1,1%==/ && set "target=%target%/"
if not exist tdev && if not exist fulldir && set argadd=%echoarg%
if exist fulldir && set "file=%fulldir%" && call :nolspace
if exist fulldir && set "argadd=%file%" && set file=
if exist tdev && set "file=%arg%" && call :nolspace
if exist tdev && set "argadd=%file%" && set file=
if not exist argadd && goto :eof
echo -n > (md)%mdmem%+1
pause --wait=0 %file2% > (md)%mdmem%+1
set file2=
## Code for "~"=7E & "@"=40
if not exist tdev && if not exist fulldir && cat --locate=\x7E --replace=\x40 (md)%mdmem%+1 > nul
## Code for "#"=23
if exist fulldir && cat --locate=\x7E --replace=\x23 (md)%mdmem%+1 > nul
if exist tdev && cat --locate=\x7E --replace=\x23 (md)%mdmem%+1 > nul
cat (md)%mdmem%+1 | set file2=
echo -n > (md)%mdmem%+1
## Strip off File Number Suffix on source ISO&UDF only
if %sourceok%==ISO && set "file=%argadd%" &; call :semicol
if %sourceok%==ISO && set "argadd=%file%" && set file=
if %sourceok%==UDF && set "file=%argadd%" &; call :semicol
if %sourceok%==UDF && set "argadd=%file%" && set file=
set "argadd=%argadd%" &; set /a largadd=%@retval% > nul
if %largadd%>=1 && if exist %target%%%td%%%file2% && set file3= && cat %target%%%td%%%file2% | set file3=
if %largadd%>=1 && if exist %target%%%td%%%file2% && if %argcrc32%==%copycrc3% && if not "%argadd%"=="%file3%" && set copycrc3= && set argadd= && set largadd= && goto :eof
if %largadd%>=1 && if exist %target%%%td%%%file2% && if "%argadd%"=="%file3%" && set argadd= && set largadd= && set file3= && goto :eof
if %largadd%>=1 && set file3=
## Risks involved?
if %largadd%>=1 && if not %t%==/t && if exist %target%%%td%%%file2% &; fat del %target%%%td%%%file2% > nul || set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && set argadd= && set largadd= && goto :eof
#DEBUG#echo argadd=%argadd% "if %largadd%>=1 && echo %act%save$[0x00]"$[]%argadd%$[0x00]"$[]=> %file2% %NULL% && if %t%==/t && set /a makefil=%makefil%+1 > nul
#MAYBE#if %largadd%>=1 && echo %act%save LFN:$[0x00]"$[]%argadd%$[0x00]"$[]=> %file2% %NULL% && if %t%==/t && set /a makefil=%makefil%+1 > nul
if %largadd%>=1 && echo -e %act%save$[0x00]"$[]%argadd%$[0x00]"$[]=> %file2% %NULL% && if %t%==/t && set /a makefil=%makefil%+1 > nul
if %t%==/t && goto :eof
if %largadd%>=1 && fat mkfile size=%largadd% %target%%%td%%%file2%
if exist %target%%%td%%%file2% && echo -e %argadd% > %target%%%td%%%file2% && set /a makefil=%makefil%+1 > nul ! set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :eof
set argadd= && set largadd=
goto :eof
::
:nolspace
setlocal && set * && set mdmem=%mdmem% && set "file=%file%"
if not exist file && set "file=%~1"
echo -n > (md)%mdmem%+1
write (md)%mdmem%+1 %file%\0 > nul
if exist file && cat (md)%mdmem%+1 | set file=
set "file=%file%"
echo -n > (md)%mdmem%+1
endlocal && set "file=%file%"
goto :eof
::
:nochars
set char=%~1
set file=%~2
set seekbyt=
if exist file && echo -n > (md)%mdmem%+1
if not %char%==\x22 && if exist file && pause --wait=0 %file% > (md)%mdmem%+1
if %char%==\x22 && if exist file && write (md)%mdmem%+1 %file%\0
set argout=
set /a ocount=
cat --locate=%char% (md)%mdmem%+1 | call :nochars2
if exist file && echo -n > (md)%mdmem%+1
set file=%argout%
set argout=
set seekbyt=
set skipbyt=
set ocount=
goto :eof
:nochars2
set seekbyt=%~1
if not exist seekbyt && cat (md)%mdmem%+1 | set argout= && goto :eof
set /A seekbyt=0x%seekbyt%-%ocount% > nul
set /A skipbyt=%seekbyt%+1 > nul
dd if=(md)%mdmem%+1 of=(md)%mdmem%+1 bs=1 skip=%skipbyt% seek=%seekbyt% > nul
shift
set /a ocount=%ocount%+1 > nul
goto :nochars2
::
#OLD#:FAT32max
#-# Calculate max size of FAT32-drive in bytes
#setlocal && set * && set tdev=%tdev%
#cat --hex --skip=0x20 --length=4 %tdev%+1 | set maxsect=
#set /a maxsect=0x%maxsect:~19,2%%%maxsect:~16,2%%%maxsect:~13,2%%%maxsect:~10,2% > nul
#cat --hex --skip=0x0B --length=2 %tdev%+1 | set bytepsec=
#set /a bytepsec=0x%bytepsec:~13,2%%%bytepsec:~10,2% > nul
#set /a maxbyte=%bytepsec% * %maxsect% > nul
#endlocal && set maxbyte=%maxbyte%
#goto :eof
#####
::
:adretval
## New subroutine for negative @retval file-size values
setlocal && set * && set argsize=%argsize% && set "arg=%arg%"
set "message1=%~1"
set "message2=%~2"
if %argsize%>=0 && endlocal && goto :eof
set argsize=
debug msg=1
raw cat --length=0 %message1% | set argsize=
debug msg=0
set /a argsize=%argsize:~12% > nul
if not %argsize%>=1 && endlocal && set gotomsg=%message2% && echo Filesize unknown %act%omit$[0x00]"$[]%arg%$[0x00]" && goto :eof
set gotomsg=
endlocal && set argsize=%argsize% && set "gotomsg=%gotomsg%"
goto :eof
::
:faterror
setlocal && set * && set mdmem=%mdmem% && set r=%r% && set needKB=%needKB% && set "NULL=%NULL%" && set "output2=%output2%"
set "message1=%~1"
#NONEEDANYMORE#set "message2=%~2"
#NONEEDANYMORE#set "targdev=%~d3" && set "targfile=%~f3"
#BADforFAT copy /o#if /i "%message1:~0,7%"=="copy /o" && if exist %targfile% && raw cat --length=0 %targfile% > nul &; set /a needKB=-%@retval%>>10+%needKB% &; if %needKB%<=0 && set needKB=1
if /i "%message1:~0,5%"=="copy " && call :freeKB "%~d3" &; if %freeKB%<=1 && echo No free space left on target %~d3 && endlocal && set freebyte=0 && set "gotomsg=goto :eof" && goto :eof ! if not %freeKB%>=%needKB% && echo Not enough space on target %~d3: needed %needKB%KB, available %freeKB%KB && endlocal && set /a freebyte=%freeKB% * 1k && set "gotomsg=%~2" && goto :eof
if /i "%message1:~0,7%"=="copy /o" && call :checkreadonly "%~3" &; if %delagain%==Q && endlocal && set lastkey=Q && set "gotomsg=%~2" && goto :eof
#????# &; debug msg=1
errorcheck off
if %delagain%==Y && if not exist q && if not exist r && echo >overwrite %~nx3 && set /a freeKB=%freeKB%+%needKB%-1
if %delagain%==Y &; fat %message1% > nul && endlocal && set r=%r% && set /a freebyte=%freeKB% * 1k && set gotomsg= && goto :eof
if %delagain%==N && set delagain= && endlocal && set r=%r% && set /a freebyte=%freeKB% * 1k && set "gotomsg=%~2" &; set /a fco=%fco%-1 > nul && set /a lfco=%lfco%-1 > nul && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :eof
if not "%~3"=="" &; cat --length=0 %~3 > nul |; fat del %~3 || echo Rollback error: can not delete %~3 && endlocal && set r=%r% && set /a freebyte=%freeKB% * 1k && set "gotomsg=%~2" && goto :eof
endlocal && echo -e Unspecified FAT-error >omit$[0x00]"$[]%~nx3$[0x00]" && set r=%r% && set /a freebyte=%freeKB% * 1k && set "gotomsg=%~2"
goto :eof
#OLD# New subroutine for FAT32 partitions above 4GB
#setlocal && set * && set tdevice=%tdevice% && set argsize=%argsize% && set arg=%arg%
#set "message1=%~1"
#set "message2=%~2"
#if not exist tdevice && endlocal && set freeKB=%freeKB% && set "gotomsg=%message2%" && echo Unspecified FAT-error %act%omit$[0x00]"$[]%arg%$[0x00]" && goto :eof
#OLD#
#delmod -l fatmini > nul || insmod (bd)/fatmini > nul || insmod (bd)/boot/grub/fatmini > nul || insmod (bd)/grub/fatmini > nul || insmod (bd)/g4dll/fatmini > nul || insmod /fatmini > nul || insmod /boot/grub/fatmini > nul || insmod /grub/fatmini > nul || insmod /g4dll/fatmini > nul || echo -e \x20FATMINI not found => fatcopy.g4b /? && echo >skip %file2% && set "gotomsg=%message2%" &; endlocal && set "gotomsg=%gotomsg%" && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :eof
#set * && set tdevice=%tdevice% && set argsize=%argsize% && set arg=%arg% && set "message1=%message1%" && set "message2=%message2%"
#cat --hex --skip=0x1E8 --length=4 %tdevice%%1+1 | set freeclus=
#set /a freeclus=0x%freeclus:~19,2%%%freeclus:~16,2%%%freeclus:~13,2%%%freeclus:~10,2% > nul
#if %freeclus%==0xFFFFFFFF && endlocal && set gotomsg=%message2% && echo Unspecified FAT-error %act%omit %arg% && goto :eof
#cat --hex --skip=0x0D --length=1 %tdevice%+1 | set secpclus=
#set /a secpclus=0x%secpclus:~10,2% > nul
#if %secpclus%==0x0 && endlocal && set gotomsg=%message2% && echo Unspecified FAT-error %act%omit %arg% && goto :eof
#cat --hex --skip=0x0B --length=2 %tdevice%+1 | set bytepsec=
#set /a bytepsec=0x%bytepsec:~13,2%%%bytepsec:~10,2% > nul
#if %bytepsec%==0x0 && endlocal && set gotomsg=%message2% && echo Unspecified FAT-error %act%omit %arg% && goto :eof
#set /a bytpclus=%bytepsec% * %secpclus% > nul
#set /a freebyte=%bytpclus% * %freeclus%-1 > nul
#set /a needbyte=%argsize%+%bytpclus% > nul
#-# Negative argsize with almost 4 GB-file, above 0x7FFFFFF same limitations CALC & @retval ??
#-# Free space not covered by FATMINI!
#if %needbyte%>=%freebyte% && echo %act%omit %arg% needed %needbyte% bytes, free space availaible %freebyte% bytes && endlocal && set gotomsg=%message2% && goto :eof
#echo >fatmini %message1%
#fatmini %message1% || set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && call :errors
#if not exist faterror && set gotomsg= &; endlocal && set "gotomsg=%gotomsg%" && goto :eof
#BAD#endlocal && set lcatskip=%lcatskip% && set catskip=%catskip% && set "gotomsg=%gotomsg%"
###goto :eof
#####
::
:errors
echo List of FAT-errors:
echo (1) A hard error occured in the low level disk I/O layer
echo (2) Assertion failed
echo (3) The physical drive cannot work
echo (4) Could not find the file
echo (5) Could not find the path
echo (6) The path name format is invalid
echo (7) Acces denied due to prohibited access or directory full
echo (8) Acces denied due to prohibited access
echo (9) The file/directory object is invalid
echo (10) The physical drive is write protected
echo (11) The logical drive number is invalid
echo (12) The volume has no work area
echo (13) There is no valid FAT volume on the physical drive
echo (14) The f_mkfs() aborted due to any parameter error
echo (15) Could not get a grant to access the volume within defined period
echo (16) The operation is rejected according to the file shareing policy
echo (17) LFN working buffer could not be allocated
echo (18) Number of open files > _FS_SHARE
set "faterror=active"
goto :eof
::
:checkreadonly
setlocal && set * && set mdmem=%mdmem% && set r=%r% && set "NULL=%NULL%" && set "output=%output2%"
#NOTthereWith/ls#set output && pause
call :attrib isreadonly "%~1" &; if not exist result && endlocal && set delagain=N && goto :eof
#BAD#set attribms=%source%%%cd%%%arg% && call :attrib isreadonly "%source%%%cd%%%arg%" &; if not exist result && set delagain=N && goto :eof
if %r%==/-r && set delagain=N
if not exist r && echo -e \x20%~1 is read-only
if not %delagain%==N && if not exist r && set /p:90 /u "delagain= Overwrite (attributes deleted) (Y=yes N=no A=always S=skip Q=quit)?" &; echo && set delagain=%delagain:~0,1%
if not exist r &; if not %delagain%==Y && if not %delagain%==N && if not %delagain%==A && if not %delagain%==S && if not %delagain%==Q && set delagain=
if not exist r &; if not exist delagain && set delagain=N && echo
if %delagain%==A && set r=/r && if exist NULL && echo
if %delagain%==S && set r=/-r && if exist NULL && echo
if %r%==/r && set delagain=Y
set result= && if %delagain%==Q && endlocal && set delagain=Q && echo Aborted by user && goto :eof
set result= && if not %delagain%==Y && endlocal && set r=%r% && set delagain=N &; echo >skip %arg% %NULL% && goto :eof
call :attrib setattrib "%~1" "-r"
if %result%==1 && set delagain=Y && set result= ! set result= && set delagain= && set output=
endlocal && set r=%r% && set delagain=%delagain% && set "output2=%output%"
goto :eof
::
:copyattributes
## getsfnentries of source-file and target-file and ddcopy attribute&dates&times
setlocal && set * && set mdmem=%mdmem% && set t=%t% && set lfncatch=%lfncatch% && set copyattr=%copyattr% && set "output1=%output1%" && set "output2=%output2%"
set sdev=%~d1
set sdir=%~p1
set sname=%~n1
set sext=%~x1
setlocal && set "output=%output1%" && call :attrib "getsfnentry" "%~1" &; endlocal && set sdentry=%entry% && set "output1=%output%"
if exist sdentry && if exist output1 && setlocal &; %output1% &; endlocal && set sdevsect=%devsect% && set sfatsys=%filesys%
#TooMuch?if exist soutput && setlocal &; %soutput% &; endlocal && set sdatarea=%dataarea% && set sclusize=%clussize% && set sroot=%root% && set sdevsect=%devsect% && set sfatsys=%fatsys%
if /i %sfatsys:~0,3%==FAT if %sdentry%>=0x200 if %sdevsect%>=3 || echo Can not find SFN-entry of source-file && endlocal && goto :eof
#DEBUG#if exist sdentry && cat --hex --skip=%sdentry% --length=32 %sdev%%0+%sdevsect% && echo
if %t%==/t && endlocal && set success=Y && set "output1=%output1%" && goto :eof
#BAD#if %t%==/t && endlocal && set success=Y && goto :eof
set tdev=%~d2
set tdir=%~p2
set tname=%~n2
set text=%~x2
setlocal && set output= &; set "output=%output2%" && call :attrib "getsfnentry" "%~2" &; endlocal && set tdentry=%entry% && set "output2=%output%"
if exist tdentry && if exist output2 && setlocal &; %output2% &; endlocal && set tdevsect=%devsect% && set tfatsys=%filesys%
#TooMuch?#if exist toutput && setlocal &; %toutput% &; endlocal && set tdatarea=%dataarea% && set troot=%root% && set tdevsect=%devsect% && set tfatsys=%fatsys%
if /i %tfatsys:~0,3%==FAT if %tdentry%>=0x200 if %tdevsect%>=3 || echo Can not find SFN-entry of target-file && endlocal && goto :eof
#DEBUG#if exist tdentry && cat --hex --skip=%tdentry% --length=32 %tdev%%0+%tdevsect%
if exist tdentry && set /A tdattrib=%tdentry%+11 > nul && set /A tlastacc=%tdentry%+18 > nul && set /A tdwrttd=%tdentry%+22 > nul
echo -n > (md)%mdmem%+1
if not %lfncatch%==Y && if exist sdentry && if exist tdentry && if exist tdattrib && echo -n > (md)%mdmem%+1 &; raw dd if=%sdev%%0+%sdevsect% of=(md)%mdmem%+1 bs=1 count=32 skip=%sdentry% > nul || echo BAD ddcopy I ! raw dd if=(md)%mdmem%+1 of=%tdev%%0+%tdevsect% bs=1 count=2 skip=11 seek=%tdattrib% || echo BAD ddcopy II ! set success=Y
if %lfncatch%==Y && if exist sdentry && if exist tdentry && if exist tdattrib && echo -n > (md)%mdmem%+1 &; raw dd if=%sdev%%0+%sdevsect% of=(md)%mdmem%+1 bs=1 count=32 skip=%sdentry% > nul || echo BAD ddcopy LFN I ! raw dd if=(md)%mdmem%+1 of=%tdev%%0+%tdevsect% bs=1 count=1 skip=11 seek=%tdattrib% || echo BAD ddcopy LFN II ! set success=Y
#WithoutNTcasebyte#if exist sdentry && if exist tdentry && if exist tdattrib && echo -n > (md)%mdmem%+1 &; raw dd if=%sdev%%0+%sdevsect% of=(md)%mdmem%+1 bs=1 count=32 skip=%sdentry% > nul || echo BAD ddcopy I ! raw dd if=(md)%mdmem%+1 of=%tdev%%0+%tdevsect% bs=1 count=1 skip=11 seek=%tdattrib% || echo BAD ddcopy II ! set success=Y
#NotGood#echo "if exist sdentry && if exist tdentry &; raw dd if=%sdev%%0+%sdevsect% of=%tdev%%0+%tdevsect% bs=1 count=1 skip=%sdattrib% seek=%tdattrib% > nul || echo BAD ddcopy
#NotGood#if exist sdentry && if exist tdentry &; raw dd if=%sdev%%0+%sdevsect% of=%tdev%%0+%tdevsect% bs=1 count=1 skip=%sdattrib% seek=%tdattrib% > nul || echo BAD ddcopy
if not %success%==Y && echo -n > (md)%mdmem%+1 && echo Can not copy Attributes from source-file to target-file && endlocal && goto :eof
if not %copyattr%==a && if exist sdentry && if exist tdentry && if %success%==Y && set success= && if exist tlastacc &; raw dd if=(md)%mdmem%+1 of=%tdev%%0+%tdevsect% bs=1 count=2 skip=18 seek=%tlastacc% || echo BAD ddcopy III && set success= ! set success=Y
if not %copyattr%==a && if not %success%==Y && echo -n > (md)%mdmem%+1 && echo Can not copy Last Access Date from source-file to target-file && endlocal && goto :eof
if not %copyattr%==a && if exist sdentry && if exist tdentry && if %success%==Y && set success= && if exist tdwrttd &; raw dd if=(md)%mdmem%+1 of=%tdev%%0+%tdevsect% bs=1 count=4 skip=22 seek=%tdwrttd% || echo BAD ddcopy IV && set success= ! set success=Y
if not %copyattr%==a && if not %success%==Y && echo -n > (md)%mdmem%+1 && echo Can not copy Modification Time and Date from source-file to target-file && endlocal && goto :eof
#DEBUG#if exist tdentry && echo && cat --hex --skip=%tdentry% --length=32 %tdev%%0+%tdevsect% && echo
echo -n > (md)%mdmem%+1
endlocal && set success=%succes% && set "output1=%output1%" && set "output2=%output2%"
#DEBUG#echo C "output1=%output1%"
goto :eof
::
:attrib
#BAD#setlocal && set * && set "output=%output2%" && set mdmem=%mdmem%
setlocal && set * && set mdmem=%mdmem% && set "output=%output%"
if exist output &; %output%
## Modes: isreadonly and setattrib
set mode=%~1 && shift
set device=%~d1
set path=%~p1
set name=%~n1
set ext=%~x1
set mdbase=%mdmem%
set /A basemem=%mdbase% * 0x200
if not exist filesys && call :filesystem "%device%" &; if not /i %filesys:~0,3%==fat && endlocal && set result= && goto :eof
if not exist output && call :bootblockbase "%device%" &; if %result%==0 && endlocal && set result= && goto :eof ! set result=
if not exist devsize && set /A devsize=%devsect% * 0x200 > nul
if %mode%==getsfnentry && if not exist output && set "output=set dataarea=%dataarea% && set clussize=%clussize% && set root=%root% && set fat1=%fat1% && set fat2=%fat2% && set secpfat=%secpfat% && set devsect=%devsect% && set secpclus=%secpclus% && set numclus=%numclus% && set fatsize=%fatsize% && set filesys=%filesys%"
call :findpath "%path%"
if %clusnum%==0 && endlocal && set result= && goto :eof
call :findfile "%name%%%ext%" &; if not exist entry && endlocal && set result= && goto :eof
if not exist output && set "output=set dataarea=%dataarea% && set clussize=%clussize% && set root=%root% && set fat1=%fat1% && set fat2=%fat2% && set secpfat=%secpfat% && set devsect=%devsect% && set secpclus=%secpclus% && set numclus=%numclus% && set fatsize=%fatsize% && set filesys=%filesys%"
if %mode%==getsfnentry && endlocal && set entry=%entry% && set "output=%output%" && goto :eof
call :attributes "%~2"
if %mode%==isreadonly &; if %r%==r && set result=1 ! set result=
if not exist output && set "output=set dataarea=%dataarea% && set clussize=%clussize% && set root=%root% && set fat1=%fat1% && set fat2=%fat2% && set secpfat=%secpfat% && set devsect=%devsect% && set secpclus=%secpclus% && set numclus=%numclus% && set fatsize=%fatsize% && set filesys=%filesys%"
#BAD#endlocal && set result=%result% && set "output2=%output%" && debug msg=1
endlocal && set result=%result% && set "output=%output%"
goto :eof
::
:attributes
setlocal
set /A address=%basemem%+0xB &; read %address% ;; set /A attrib=%@retval%&0xff > nul
set /a bit0=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit1=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit2=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit3=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit4=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit5=%attrib%&1 ;; set /A attrib=%attrib%>>1 ;; set /a bit6=%attrib%&1
if %bit0%==1 && set r=r ;; if %bit1%==1 && set h=h ;; if %bit2%==1 && set s=s ;; if %bit3%==1 && set v=v ;; if %bit4%==1 && set d=d ;; if %bit5%==1 && set a=a
if not %mode%==setattrib && endlocal && set r=%r% && set s=%s% && set h=%h% && set v=%v% && set d=%d% && set a=%a% && goto :eof
call Fn.11 "%~1" "+r" && set bit0=1 && set changed=Y
call Fn.11 "%~1" "-r" && set bit0=0 && set changed=Y
call Fn.11 "%~1" "+h" && set bit1=1 && set changed=Y
call Fn.11 "%~1" "-h" && set bit1=0 && set changed=Y
call Fn.11 "%~1" "+s" && set bit2=1 && set changed=Y
call Fn.11 "%~1" "-s" && set bit2=0 && set changed=Y
call Fn.11 "%~1" "+a" && set bit5=1 && set changed=Y
call Fn.11 "%~1" "-a" && set bit5=0 && set changed=Y
if %changed%==Y &; set /a bit0=1*%bit0% && set /a bit1=2*%bit1% && set /a bit2=4*%bit2% && set /a bit3=8*%bit3% && set /a bit4=16*%bit4% && set /a bit5=32*%bit5% && set /a bit6=64*%bit6%
#BAD#if %changed%==Y && set /a bit0=1*%bit0% #;; set /a bit1=2*%bit1% #;; set /a bit2=4*%bit2% #;; set /a bit3=8*%bit3% #;; set /a bit4=16*%bit4% #;; set /a bit5=32*%bit5% #;; set /a bit6=64*%bit6%
if %changed%==Y && set /A addattr2=%bit0%+%bit1%+%bit2%+%bit3%+%bit4%+%bit5%+%bit6%
if %changed%==Y && set /A attentry=%entry%+0xB &; raw write --offset=%attentry% %device%%0+%devsect% \x%addattr2:~2% > nul && set result=1
endlocal && set result=%result% && set addattr2=%addattr2%
goto :eof
::
:findfile
if "%path%"=="/" && set clusnum=2
setlocal
call :catfile "%name%%%ext%"
:findfileloop
set entry= && set success=
cat --skip=%bytedone% --locate="%ENTRY%" --length=%dirlen% --number=1 %device%%0+%devsect% | set entry= &; if exist entry && set entry=0x%entry%
if exist entry && if not %success%==Y && echo -n > (md)%mdbase%+1 && raw dd if=%device%%0+%devsect% of=(md)%mdbase%+1 bs=1 count=0x20 skip=%entry% > nul && set success=Y
if %success%==Y && if /i %filesys%==fat32 && read %address% &; set /A clusnumL=%@retval%&0xffff > nul &; set clusnumL=0000%clusnumL:~2% && set /A address=%address%-0x6 > nul &; read %address% &; set /A clusnumH=%@retval%&0xffff > nul &; if %clusnumH%==0x0 && set /A clusnum=0x%clusnumL:~-4,4% > nul ! set clusnum=%clusnumH%%%clusnumL:~-4,4%
if %success%==Y && if not /i %filesys%==fat32 && read %address% &; set /A clusnum=%@retval%&0xffff > nul
if not exist entry && if %bytedone%>=%dataarea% && if not %bytedone%>=%devsize% && if exist clusnum &; call :lookupFAT "%clusnum%" &; if %clusnum%>=2 && set /A bytedone=%clusnum%-0x2 * %clussize% + %dataarea% > nul && set /A dirlen=%clussize% > nul && goto :findfileloop
endlocal && set success=%success% && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set entry=%entry% && set ENTRY=%ENTRY% && set sfnpath=%sfnpath% && set lastclus=%lastclus%
goto :eof
::
:lookupFAT
setlocal
set clusnum=%~1 &; set lastclus=%clusnum%
if /i %filesys%==fat12 && set FATbytes=1.5 ! if /i %filesys%==fat16 && set FATbytes=2 ! if /i %filesys%==fat32 && set FATbytes=4
if /i %filesys%==fat32 && set /A address=%clusnum% * %FATbytes% + %fat1% > nul &; call :readendian "%address%" "%~2" &; set /A nextclus=%result%&0xffffffff &; set result= && if %nextclus%<=0xFFFFFF6 && set clusnum=%nextclus% ! set clusnum=0
if /i %filesys%==fat16 && set /A address=%clusnum% * %FATbytes% + %fat1% > nul &; call :readendian "%address%" "%~2" &; set /A nextclus=%result%&0xffff &; set result= && if %nextclus%<=0xFFEF && set clusnum=%nextclus% ! set clusnum=0
if /i %filesys%==fat12 &; calc %lastclus% % 2 > nul |; set /A address=%clusnum%/2+%clusnum%+%fat1% > nul && set even=Y &; call :readendian "%address%" "%~2" &; set /A nextclus=%result%&0x0fff > nul &; set result= && if %nextclus%>=0xFF0 && set clusnum=0 ! set clusnum=%nextclus% && set "success=Done"
if /i %filesys%==fat12 &; calc %lastclus% % 2 > nul &; set /A address=%clusnum%/2+%clusnum%+%fat1% > nul && set even=N &; call :readendian "%address%" "%~2" &; set /A nextclus=%result%&0xffff>>4 > nul &; set result= && if %nextclus%>=0xFF0 && set clusnum=0 ! set clusnum=%nextclus% && set "success=Done"
if %clusnum%==1 && set clusnum=0
endlocal && set clusnum=%clusnum% && set lastclus=%lastclus%
goto :eof
::
:readendian
setlocal && set * && set device=%device% && set devsect=%devsect%
set /A skip=%~1 > nul &; set /a s=%@retval% > nul
raw cat --hex --skip=%skip% --length=4 %device%%0+%devsect% | set LE= &; if %s%<=10 && set "LE=%LE:~10,11%" ! call set "LE=%^LE:~%s%,11%" &; if "%LE:~0,1%"==" " && set "LE=%LE:~1%"
if not "%LE:~9,1%"==" " && set result=0x%LE:~9,2%%%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~6,1%"==" " && set result=0x%LE:~6,2%%%LE:~3,2%%%LE:~0,2% ! if not "%LE:~3,1%"==" " && set result=0x%LE:~3,2%%%LE:~0,2% ! if not "%LE:~0,1%"==" " && set result=0x%LE:~0,2%
endlocal && set result=%result%
goto :eof
::
:catfile
setlocal && set *
set /u NAME=%~n1 &; set /a namelen=%@retval% > nul &; if %namelen%<=7 && call :spread "NAME" "%namelen%" &; set NAME=%NAME%%%spread% && set spread=
set /u EXT=%~x1 &; set EXT=%EXT:~1% &; set /a extlen=%@retval% > nul &; if exist EXT && if %extlen%<=2 && call :spread "EXT" "%extlen%" &; set EXT=%EXT%%%spread% && set spread=
if %namelen%>=1 && if %namelen%<=8 &; if not exist EXT && set ENTRY=%NAME%\x20\x20\x20 ! if %extlen%<=3 && set ENTRY=%NAME%%%EXT%
endlocal && set ENTRY=%ENTRY%
goto :eof
::
:spread
setlocal && set *
set "message=%~1"
set /a len=%~2 ;; if not exist len && set len=0
if %message%==NAME && set /a spaces=8-%len% && set "char=\x20"
if %message%==EXT && set /a spaces=3-%len% && set "char=\x20"
set c=1
:spreadloop
if %c%<=%spaces% && set "spread=%spread%%%char%" && set /a c=%c%+1 && goto :spreadloop
endlocal && set "spread=%spread%"
goto :eof
::
:findpath
setlocal
set "path=%~1"
if /i %filesys%==fat32 && set bytedone=%dataarea% && set /A dirlen=%clussize%
if not /i %filesys%==fat32 && set bytedone=%root% && set /A dirlen=%dataarea%-%root%
if "%path%"=="/" && endlocal && set bytedone=%bytedone% && set dirlen=%dirlen% && set sfnpath=/ && goto :eof
echo "%path%" > (md)%mdbase%+1
cat --locate=/ --replace=\x20 (md)%mdbase%+1 > nul
cat --locate=\x22 --replace=\x20 (md)%mdbase%+1 > nul
set clusnum=2 && set sfnpath=/ && cat (md)%mdbase%+1 | call :finddirectory
#BAD#set clusnum=0 && set sfnpath=/ && cat (md)%mdbase%+1 | call :finddirectory
endlocal && set clusnum=%clusnum% && set bytedone=%bytedone% && set dirlen=%dirlen% && set entry=%entry% && set sfnfile=%sfnfile% && set sfnpath=%sfnpath% && set lfnentry=%lfnentry%
goto :eof
::
:finddirectory
#-# find disk-address and cluster number of last directory in PATH
if "%~1"=="" && goto :eof
set "argname=%~n1" && set "argext=%~x1"
set sfnpath=%sfnpath%%%argname%%%argext%/ && set ENTRY= && call :catfile "%~1"
set /A address=%basemem%+0x1A
:finddirectoryloop
set entry= && set success= && set argname= && set argext=
if not exist entry && cat --skip=%bytedone% --locate="%ENTRY%" --length=%dirlen% --number=1 %device%%0+%devsect% | set entry= &; if exist entry && set entry=0x%entry%
if exist entry && if not %success%==Y && echo -n > (md)%mdbase%+1 && raw dd if=%device%%0+%devsect% of=(md)%mdbase%+1 bs=1 count=0x20 skip=%entry% > nul && set success=Y
if %success%==Y && if /i %filesys%==fat32 && read %address% &; set /A clusnumL=%@retval%&0xffff > nul &; set clusnumL=0000%clusnumL:~2% && set /A address=%address%-0x6 &; read %address% &; set /A clusnumH=%@retval%&0xffff > nul &; if %clusnumH%==0x0 && set /A clusnum=0x%clusnumL:~-4,4% ! set clusnum=%clusnumH%%%clusnumL:~-4,4%
if %success%==Y && if not /i %filesys%==fat32 && read %address% &; set /A clusnum=%@retval%&0xffff > nul
if not exist entry && if exist clusnum && if %bytedone%>=%dataarea% && call :lookupFAT "%clusnum%" &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% && goto :finddirectoryloop
#DEBUG#if not exist entry && if exist clusnum && if %bytedone%>=%dataarea% && call :lookupFAT "%clusnum%" &; echo clusnum=%clusnum% &; if %clusnum%>=2 && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize% && goto :finddirectoryloop
if exist entry && if %success%==Y && set /A bytedone=%clusnum% - 0x2 * %clussize% + %dataarea% && set /A dirlen=%clussize%
if not %clusnum%==0 && shift ! goto :eof
goto :finddirectory
::
:bootblockbase
setlocal && set * && set mdbase=%mdbase% && set filesys=%filesys%
set device=%~1
echo -n > (md)%mdbase%+1
dd if=%device%%0+1 of=(md)%mdbase%+1 > nul
set /A base=%mdbase% * 0x200
set /A address=%base%+0xB
read %address% > nul &; set /A bytepsec=%@retval%&0xffff > nul
set /A address=%base%+0xD > nul
read %address% > nul ;; set /A secpclus=%@retval%&0xff > nul
set /A address=%base%+0xE > nul
read %address% > nul ;; set /A reserved=%@retval%&0xffff > nul
set /A address=%base%+0x10 > nul
read %address% > nul ;; set /A numfats=%@retval%&0xff > nul
if not %numfats%>=1 && endlocal && echo Abort: number of fat's is zero && set result=0 && goto :eof
if %numfats%>=3 && endlocal && echo Abort: %numfats% File Allocation Tables unsupported && set result=0 && goto :eof
set /A address=%base%+0x11 > nul
read %address% > nul ;; set /A rootentr=%@retval%&0xffff > nul
set /A address=%base%+0x13 > nul
read %address% > nul ;; set /A devsect=%@retval%&0xffff > nul
set /A address=%base%+0x16 > nul
read %address% > nul ;; set /A secpfat=%@retval%&0xffff > nul
if %devsect%==0 && set /A address=%base%+0x20 > nul
if %devsect%==0 && read %address% > nul &; set /A devsect=%@retval%&0xffffffff > nul
if %secpfat%==0 && if /i %filesys%==fat32 && set /A address=%base%+0x24 > nul
if %secpfat%==0 && if /i %filesys%==fat32 && read %address% > nul &; set /A secpfat=%@retval%&0xffff > nul
set /A rootbyte=%rootentr% * 32 > nul
set /A fatbyte=%numfats% * %secpfat% * %bytepsec% > nul
set /A rsrvbyte=%reserved% * %bytepsec% > nul
if not /i %filesys%==fat32 && set /A root=%fatbyte%+%rsrvbyte% > nul
set /A dataarea=%rootbyte%+%fatbyte%+%rsrvbyte% > nul
set /A clussize=%secpclus% * %bytepsec% > nul
set /A fat1=%rsrvbyte% > nul
set /A fat2=%fatbyte%/2+%rsrvbyte% > nul
set /A numclus=-%dataarea%/0x200+%devsect%/%secpclus% > nul
## Needed by ATTRIBFT.LLL
if exist numclus &; if /i %filesys%==fat12 && set /A fatsize=%numclus% * 3 / 2 + 3 > nul ! if /i %filesys%==fat16 && set /A fatsize=%numclus% * 4 + 4 > nul ! if /i %filesys%==fat32 && set /A fatsize=%numclus% * 8 + 8 > nul
if not exist fatsize &; if exist fat2 && set /A fatsize=%fat2%-%fat1% > nul ! if exist root && set /A fatsize=%root%-fat1% > nul ! if exist dataarea && set /A fatsize=%dataarea%-%fat1% > nul
set /A devsize=%devsect% * %bytepsec% > nul
endlocal && set dataarea=%dataarea% && set clussize=%clussize% && set root=%root% && set fat1=%fat1% && set fat2=%fat2% && set secpfat=%secpfat% && set devsect=%devsect% && set secpclus=%secpclus% && set fatsize=%fatsize% && set numclus=%numclus% && set devsize=%devsize%
goto :eof
::
:freeKB
setlocal && set * && set mdbase=0x300
set device=%~1 &; if not exist device && endlocal && set freeKB=0 && goto :eof ! set device=%~d1 && errorcheck off
fat info %device% > nul || endlocal && set freeKB=0 && goto :eof
fat info %device% > (md)%mdbase%+1
raw cat --locate="drive space.\x0A" (md)%mdbase%+1 > nul &; set /A devspace=%?%+13 > nul
raw cat --skip=%devspace% --locate=\x20KB\x20 (md)%mdbase%+1 > nul &; set /A KB=%?% > nul
if exist KB && set /A freelen=%KB%-%devspace% > nul
if exist freelen && raw cat --skip=%devspace% --length=%freelen% (md)%mdbase%+1 | set freeKB= &; if exist freeKB && set /a freeKB=%freeKB% > nul ! set freeKB=0
endlocal && set freeKB=%freeKB%
goto :eof
::
:fatmkfile2
if %t%==/t && goto :eof
if exist z &; if not exist o if not %copy%==Y |; if exist %target%%%td%%%file2% &; goto :eof
fat mkfile size=%argsize% %target%%%td%%%file2% > nul
if %@retval%==0 && pause --wait=%waittime% &; if not exist %target%%%td%%%file2% && set /a waittime=%waittime%+1 > nul &; if %waittime%<=3 && goto :fatmkfile2 ! echo Can not make %target%%%td%%%file2% && set "gotomsg=goto :skip1" && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :eof
if exist %target%%%td%%%file2% && pause --wait=%waittime% &; set /a waittime=%waittime%+1 > nul
raw cat --length=0 %target%%%td%%%file2% > nul ;; set /a makesize=%@retval% > nul &; if not %makesize%==%argsize% && if %waittime%<=3 && fat del %target%%%td%%%file2% > nul && goto :fatmkfile2 ! if not %makesize%==%argsize% && if %waittime%<=3 && echo Rollback error: can not delete %target%%%td%%%file2% > nul ! if not %makesize%==%argsize% && echo Can not make %target%%%td%%%file2% &; set "gotomsg=goto :skip1" && set /a lcatskip=%lcatskip%+1 > nul && set /a catskip=%catskip%+1 > nul && goto :eof
goto :eof
::
:exit
#BAD#if exist s &; if %fcs%==0 if %fco%==0 if %catskip%==0 if %sdlfnd%==0 if %sdlfnf%==0 if %sdlfnsk%==0 || echo %NULL%
if %msds%==0 && if %sdsk%==0 && if %sdsm%==0 && if %fcs%==0 && if %fco%==0 && if %catskip%==0 && if %zerobyt%==0 &; if not exist SFN && if not exist LFN && if %lfnskip%==0 && if %sdlfnsk%==0 && echo %NULL% && goto :eov ! if %SFN%==/SFN:@ && if %makefil%==0 && echo %NULL% && goto :eov ! if exist LFN && if %lfnskip%==0 && if %sdlfnd%==0 && if %sdlfnf%==0 && if %sdlfnsk%==0 && echo %NULL% && goto :eov ! if exist SFN && if not exist LFN && echo %NULL% && goto :eov
if not exist s &; if %msds%==0 if %sdsk%==0 if %sdsm%==0 if %fcs%==0 if %fco%==0 if %catskip%==0 if %lfnskip%==0 if %zerobyt%==0 if %makefil%==0 if %sdlfnd%==0 if %sdlfnf%==0 if %sdlfnsk%==0 || echo %NULL%
if exist s &; if %msds%==0 && if %lfcs%==0 && if %lfco%==0 && if %lcatskip%==0 && echo %NULL%
call :copytime ;; set copytime=%copytime%
if %copybyt%>=1 && set showbyt=1 ! if exist z && if %copybyt%==0 && set showbyt=1 ! set showbyt=0
if %copybyt%<=1048575 && set "copybyt=%copybyt% byte"
## Cannot divide above 0x7FFFFFFF (older grub4dos versions)!
if %copybyt%>=1048576 && if %copybyt%<=0x7FFFFFFF && set /a copybyt=%copybyt%/1024 > nul &; set "copybyt=%copybyt% KiB"
if %copybyt%>=0x80000000 && set copybyt=%copybyt:~0,-3% &; set "copybyt=%copybyt% KB"
if %showbyt%==1 && if not %t%==/t && echo -e \x20 Copied %copybyt% in %copytime%
if %showbyt%==1 && if %t%==/t && echo -e \x20 Copy trial %copybyt% in %copytime%
if %showbyt%==0 && echo -e \x20 Runtime %copytime%
set showbyt=
:dirmsg
if not exist msds && set msds=0 ;; if not exist sdsm && set sdsm=0 ;; if not exist sdsk && set sdsk=0
if %msds%>=1 && if %sdlfnd%>=1 && if exist LFN &; if %t%==/t && echo -e \x20 Subdirectories to make: %msds% && echo -e \x20 Long Directory Names to make: %sdlfnd% ! echo -e \x20 Subdirectories made: %msds% && echo -e \x20 Long Directory Names made: %sdlfnd%
if %msds%==0 && if %sdlfnd%>=1 && if exist LFN &; if %t%==/t && echo -e \x20 Long Directory Names to make: %sdlfnd% ! echo -e \x20 Long Directory Names made: %sdlfnd%
if %msds%>=1 && if %sdlfnsk%>=1 &; if %t%==/t && echo -e \x20 Subdirectories to make: %msds% && echo -e \x20 LFN-directories to omit: %sdlfnsk% ! echo -e \x20 Subdirectories made: %msds% && echo -e \x20 LFN-directories omitted: %sdlfnsk%
if %msds%>=1 && if not %sdlfnd%>=1 && if not %sdlfnsk%>=1 &; if %t%==/t && echo -e \x20 Subdirectories to make: %msds% ! echo -e \x20 Subdirectories made: %msds%
if not %msds%>=1 && if %sdlfnsk%>=1 &; if %t%==/t && echo -e \x20 LFN-directories to omit: %sdlfnsk% ! echo -e \x20 LFN-directories omitted: %sdlfnsk%
if not %sourceok%==NTFS && if %sdsk%>=1 &; if %t%==/t && echo -e \x20 Empty subdirectories to omit: %sdsk% ! echo -e \x20 Empty subdirectories omitted: %sdsk%
if %ls%==/ls && if %sourceok%==NTFS && if %e%==/e && if %sdsm%>=1 &; if %t%==/t && echo -e \x20 Empty subdirectories to make or zero-byte files to become subdirectory: %sdsm% ! echo -e \x20 Empty subdirectories made or zero-byte files became subdirectory: %sdsm%
if %ls%==/ls && if %sourceok%==NTFS && if not %e%==/e && if %sdsk%>=1 &; if %t%==/t && echo -e \x20 Empty subdirectories or zero-byte files to omit: %sdsk% ! echo -e \x20 Empty subdirectories or zero-byte files omitted: %sdsk%
if %msdf%>=1 &; if %t%==/t && echo -e \x20 Number of subdirectories to fail to make: %msdf% ! echo -e \x20 Number of subdirectories failed to make: %msdf%
:filemsg
if not exist lfnskip && set /a lfnskip=0 > nul
if %lfnskip%>=1 && if %zerobyt%>=1 &; if %t%==/t && echo -e \x20 LFN-files to omit: %lfnskip% Zero-byte files to omit: %zerobyt% ! echo -e \x20 LFN-files omitted: %lfnskip% Zero-byte files omitted: %zerobyt%
if %lfnskip%>=1 && if not %zerobyt%>=1 &; if %t%==/t && echo -e \x20 LFN-files to omit: %lfnskip% ! echo -e \x20 LFN-files omitted: %lfnskip%
if not %lfnskip%>=1 && if %zerobyt%>=1 &; if %t%==/t && echo -e \x20 Zero-byte files to omit: %zerobyt% ! echo -e \x20 Zero-byte files omitted: %zerobyt%
if %makefil%>=1 &; if %t%==/t && echo -e \x20 Long File Names to be saved: %makefil% ! echo -e \x20 Long File Names saved: %makefil%
if %sdlfnf%>=1 &; if %t%==/t && echo -e \x20 Long File Names to make: %sdlfnf% ! echo -e \x20 Long File Names made: %sdlfnf%
if %fcs%>=1 && set /a showfile=1 > nul
if %fco%>=1 && set /a showfile=1 > nul
if %catskip%>=1 && set /a showfile=1 > nul
if %showfile%==1 &; if %t%==/t && echo -e \x20 Total files to copy/overwrite/skip: %fcs%/%fco%/%catskip% && set showfile= ! echo -e \x20 Total files copied/overwritten/skipped: %fcs%/%fco%/%catskip% && set showfile=
echo
goto :eov
::
:copytime
setlocal && set * && set status=%status%
set date1=%@date% && set time1=%@time%
%status:~0,20%
%status:~24,18%
if %date1:~8,2%>=%date0:~8,2% && set /a day=%date1:~8,2%-%date0:~8,2% > nul ! set /a day=1 > nul
set /a timesec0=%time0:~0,2% * 60 + %time0:~3,2% * 60 + %time0:~6,2% > nul
set /a timesec1=%day% * 24 + %time1:~0,2% * 60 + %time1:~3,2% * 60 + %time1:~6,2% > nul
set /a copytime=%timesec1%-%timesec0% > nul
set date0= && set date1= && set time0= && set time1= && set timesec0= && set timesec1=
if %copytime%>=86400 && set "copytime=>23:59:59" && goto :eof
if %copytime%==0 && set /a copytime=1 > nul
set /a hours=%copytime%/3600 > nul
set /a copytime=-3600 * %hours% + %copytime% > nul
set /a minutes=%copytime%/60 > nul
set /a seconds=-60 * %minutes% + %copytime% > nul
if %hours%<=9 && set "hours=0%hours%"
if %minutes%<=9 && set "minutes=0%minutes%"
if %seconds%<=9 && set "seconds=0%seconds%"
set "copytime=%hours%:%minutes%:%seconds%"
endlocal && set copytime=%copytime%
goto :eof
::
:lastkey
beep 0 1
read 0x41a > nul &; set /A head=%@retval%&0xff > nul &; if %head%>=0x20 && set /A lastmem=%head%+0x400-2 > nul ! set /A lastmem=0x43C > nul &; read %lastmem% > nul &; set /A lastkey=%@retval%&0xff > nul
if "%~1"=="" &; if %lastkey%==0x1B && set lastkey=0x71 && goto :eof ! goto :eof
#NONEED#if not exist ls && if "%~1"=="Esc" && if not %lastkey%==0x1B && goto :eof
#NONEED#if exist ls && if "%~1"=="Esc" && if not %lastkey%==0x1B && if not %lastkey%==0x51 && if not %lastkey%==0x71 && goto :eof
if "%~1"=="Esc" && if not %lastkey%==0x1B && goto :eof
setlocal && call :Fn.4 &; endlocal && set hORG=%h% && set hINT=%h% && set vORG=%v% && set vINT=%v%
if not %hORG%==0 && setlocal && echo && call :Fn.4 &; endlocal && set hINT=%h% && set vINT=%v% &; if %vINT%==%vORG% && set /a vORG=%vORG%-1
echo -n $[0x0F][Hit Q or Esc to quit, other key to continue] && pause --test-key &; set /A lastkey=%@retval%&0xff && call :Fn.5 %hINT% %vINT% && echo -n -e \x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20 && call :Fn.5 %hORG% %vORG%
if %lastkey%==0x1B && set lastkey=0x71
if not %lastkey%==0x51 if not %lastkey%==0x71 || goto :eof ! set lastkey=
#NOTSOGOOD#call :Fn.5 %hORG% %vORG% && set lastkey= && goto :eof
goto :eof
::
:Fn.4
#-#+ call Fn.4 - h is max 0-255 chars per line, position (h,v) (0,0) is 0 and (0,1) is 256 (in grub4efi text mode 20221128+30: 16 & h max +64, on some line h is always the same ?!)
call Fn.4 ;; set /A h=%@retval% ;; set /a v=%h%>>8 ;; set /a h=%h%&0xff
#NOT?#if not exist h && set h=0
goto :eof
::
:Fn.5
call Fn.5 %~1 %~2
goto :eof
::
:sfn@2lfn
#BAD#fat dir %~1 > nul && goto :eof
set device=%~d1
set "path=%~p1"
set "name=%~n1" &; set /a namelen=%@retval% > nul
if %namelen%<=3 && goto :eof
set "ext=%~x1" &; if %ext%==. && set ext=
echo -n > (md)%mdmem%+1
echo -e %name% > (md)%mdmem%+1
cat --locate=~ --length=%namelen% (md)%mdmem%+1 > nul ;; set /a skiptilde=%?% > nul
if %skiptilde%<=1 && goto :eof
cat --skip=%skiptilde% --locate=~ --replace=%~2 --length=1 (md)%mdmem%+1
cat --length=%namelen% (md)%mdmem%+1 | set hashname=
echo -n > (md)%mdmem%+1
fat dir %device%%%path%%%hashname%%%ext% > nul && goto :eof
cat --length=0 %device%%%path%%%hashname%%%ext% > nul ;; set /a filelen=%@retval% > nul
if not %filelen%>=%namelen% && goto :eof
cat %device%%%path%%%hashname%%%ext% | set lfnarg=
if exist lfnarg && set lfnarg=%lfnarg% &; set /a lfnlen=%@retval% > nul
if not %lfnlen%<=256 && set lfnarg= && goto :eof
if not %lfnlen%==%filelen% && set lfnarg= && goto :eof
## NOT always first two chars of SFN and LFN equal!
#BAD#if not /i "%name:~0,2%"=="%lfnarg:~0,2%" && set lfnarg=
goto :eof
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# END OF SUB-ROUTINES
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
:help
if "%~1"=="smallhelp" && echo FATCOPY.G4B [--mdbase=sector] DEVICE1/PATH1/FILE1 DEVICE2/PATH2/FILE2 switches
if "%~1"=="smallhelp" && echo FATCOPY.G4B /?
if "%~1"=="smallhelp" && echo General switches:    /d /s|/e /[-]o /i /p /q /v /t /[-]x:~ /[-]ext:EXT /[-]r
if "%~1"=="smallhelp" && echo $[]                     /maxfiles:N /maxbyte:n /z
if "%~1"=="smallhelp" && echo FAT parser switches: /a:[-]d[-]a[-]r[-]s[-]h /a /lfn:@
if "%~1"=="smallhelp" && echo LS parser switches:  /sfn[:@]|/[lfn[:case] /a] /f /$ /l+f /filenum:[-]n /nocase
if "%~1"=="smallhelp" && echo Example: FATCOPY.G4B (hd0,0)/SOMEFILE.EXT (hd0,0)/BACKUP/
if "%~1"=="smallhelp" && echo Example: FATCOPY.G4B (hd0,0)/*.EXT (hd0,0)/BACKUP/EXT/
if "%~1"=="smallhelp" && echo Example: FATCOPY.G4B (hd0,0)/FILE.EX* (hd0,0)/BACKUP/FILE/ /t
if "%~1"=="smallhelp" && echo Example: FATCOPY.G4B (hd0,0)/SOMEFIL*.EX* (hd0,0)/BACKUP/WILDCARD/ /q
if "%~1"=="smallhelp" && echo Example: fatcopy.g4b (fd0)/ (hd1,0)/backup/ /s /maxbyte:64m
if "%~1"=="smallhelp" && echo Example: FATCOPY.G4B "(hd0,0)/Program Files/" (hd1,0)/BACKUP/ /lfn /s /d /z
if "%~1"=="smallhelp" && echo Example: FATCOPY.G4B (fd0)/ (hd1,0)/BACKUP/ /s /sfn:@ /v
if "%~1"=="smallhelp" && echo Example: FATCOPY.G4B (hd0,0)/PROGRA~1/ (hd1,0)/BACKUP/ /lfn:case /s /d /z
if "%~1"=="smallhelp" && echo Example: FATCOPY.G4B (fd0)/IO.SYS (hd0,0) /r /a && goto :eof
clear ;; pager on
echo FATCOPY.G4B v0.4.1 (20241023), by deomsh. Based on copyFF.bat (:cpa & :copyfiles & :sub-dir => originator of call's seems to be Chenall)
echo Function: front-end for Grubutil 'FAT', function 'copy'
echo FATCOPY.G4B [--mdbase=sector] DEVICE1/PATH1/FILE1 DEVICE2/PATH2/FILE2 switches
echo FATCOPY.G4B /? (this screen)
echo Copy files on DEVICE1 to DEVICE2; if omitted DEVICE1/DEVICE2: from/to root
echo Copy from hidden partitions and to hidden FAT partitions too!
echo Default 8+3 File Names (except with /lfn[:case], see below)
echo Arguments space-separated, switches: lower/uppercase free
echo More convenient => insmod (bd)/fatutils/fatcopy.g4b copy (insmod FAT too!)
echo --mdbase=sector => set base memory of memdrives, default 0x3000*
echo * FAT directory-parsing needs 2048KB, LS directory-parsing needs 128KB
echo * Minimum 0x3000, rejected: 0x0000-0x2999, 0x4000-0xD460 and 0x12000-0x12FFF && echo
echo (source) DEVICE1 = (fd#) & (hd#,#) & (0x#) & (#) with ISO/CD/DVD
echo (target) DEVICE2 = (fd#) & (hd#,#) & (0x#) & (#) FAT only
echo /PATH1/ = source directory => without DEVICE1 => on root (PATH1/ too)
echo /PATH2/ = target directory => without DEVICE2 => on root (PATH2/ too)
echo if PATH2/ is not specified, target directory is the root directory (/)
echo FILE1 = copy specified file => on root without DEVICE1 and/or /PATH1/
echo FILE1 accepts wildcard: '*' AFTER chars in Name and/or Extension (NOT: '?')
echo Without FILE1 full directory will be copied ('*.*' is NOT needed)
echo FILE2 = copy/rename FILE1 to FILE2 => on root without DEVICE2 and/or /PATH2/
echo Dedicated to Jaclaz for inspiration and help && echo
echo General switches: /d /s|/e /[-]o /i /p /q /v /t /[-]x:~ /[-]ext:EXT /[-]r
echo $[]                  /maxfiles:N /maxbyte:n /z /a
echo /d = add PATH1 to PATH2
echo /s = copy content of ALL subdirectories too, except if they are empty
echo /e = copy content of ALL subdirectories too, even if they are empty
echo /[-]o = [never]overwrite files, BTW: /[-] means choice, type /- (!)
echo /i = incremental copying by comparing CRC32 of files on source and target
echo /p = pause after each screen (Key Q can be used to exit)
echo /q = quiet copying: error messages & last file-count message only *
echo /v = verify with message of status- not with /t (try /v if copying stops)
echo /t = trial without actual copying (can be used as simple DIR)
echo /[-]x:~ = only SFN-equivalent of LFN/real shortened LFN will [not] be copied **
echo /[-]ext:EXT = files with EXTension [not] copied- separator: dot only 3*
echo /[-]r = Do not ask [not] overwrite read-only files (attributes unset!)- not /t
echo /maxfiles:N = set max number of files to copy
echo /maxbyte:n = set max number of bytes to copy- takes k, m, g postfix operator
echo /z = copy zero byte files (default: ommitted), fake overwriting only 4*
echo $[]     copied for files, not for directories - from FAT-source only
echo *  Default verbose copying: mkdir & copy & output messages (less with '*.*')
echo ** Character '?' is FORBIDDEN, reserved for internal use!
echo ** Instead of '~' ONE other character can be used too (for name-part only)
echo 3* Examples: /ext:g4b.lll.bat or /-ext:.7z.cab.img.rar.vhd.zip- first dot free
echo 4* date and time never updated with overwriting, to not loose (LFN-)metadata && echo
echo FAT directory-parser switches: /a:[-]d[-]a[-]r[-]s[-]h /a /lfn:@ *
echo /a:[-]d[-]a[-]r[-]s[-]h = [not] copy files/directories with attribute(s) **
echo /a = copy attributes, NT-casebyte, last access date, modification time and date
echo * Default directory parser if copying from FAT-source
echo *  About max 36 000 files AND max 3 000 subdirectories in one directory
echo ** Attributes not copied by FAT, copied files: archive-attribute, or use /a too && echo
echo LS parser switches: /sfn[:@]|[/lfn[:case] /a] /f /$ /l+f /filenum:[-]n /nocase
echo /sfn = copy LFN to SFN (LFN is LOST), mandatory for LFN's on non-FAT FS **
echo /sfn[:]@ = copy LFN to SFN and keep long name inside SFN with @ instead of ~ 3*
echo /lfn = copy LFN's, library needed: ATTRIBFT.LLL (in same folder as FATCOPY.G4B)
echo /lfn:case = copy LFN of 8+3 Short File Names too, library needed: ATTRIBFT.LLL
echo /lfn[:]@ = add LFN of saved Long File Names, library needed: ATTRIBFT.LLL
echo /f = copy empty subdirectories on NTFS (zero-byte file becomes subdirectory!)
echo /$ = copy NTFS $-(meta)files/directories (or showed with /t) 4*
echo /l+f = copy Ext2/3/4&ReIseR(2)fs directory lost+found (or showed with /t) 4*
echo  /filenum:[-]n = [not]copy files with filenumber only (n = 1-32767) 5*
echo  /nocase = (try to) force case-insensitivity on case-sensitive File Systems
echo *  About max 10 000 (8+3) files OR max 10 000 subdirectories in one directory
echo *  Copy from FAT, NTFS, ISO-9660, JOLIET, UDF, EXFAT, Ext2/3/4 & ReIseR(2)fs
echo *  Autoswitching to /ls for supported source other then FAT or with /ls-switch
echo *  Copies from ISO-9660/JOLIET & UDF with File Version Number Suffix (;1-32767)
echo *  Watch with case-sensitive File Systems: PATH1/FILE1 /[-]x:char /[-]ext:EXT
echo ** If exist spaces or '=' in PATH/FILE or switch /noext: use (double-)quotes!
echo ** Double-quote usage: "DEVICE/PATH/FILE"- on ROOT "/PATH1/FILE1" or "FILE1"
echo ** Special case: PATH or FILE containing '='-sign ALWAYS quotes (& "/[-]x:=")
echo $[]    Or us escaped spaces/ '=': '\ ' or '\=' (try first with switch /t)
echo ** With /lfn wildcard '*' in name/ext-part after maximum 16/6 characters
echo 3* Can be read out and used to restore LFN's in LFN-aware operating system
echo 3* Directories get # instead of @ (file: SFN@num.ext- directory SFN#num.ext)
echo 3* Auto-saved during copying and read-out for existing files (auto with /i)
echo 3* If /[-]x:@ SFN@num.ext not saved but [not]copied- with /sfn:@ '@' reserved
echo 4* (Self-declared) Experts only! $-(meta)files can grow above 4GB, lost+found?
echo 5* Only File Systems supported with File Version Number Suffix && echo
echo FAT needed, searched in: %^~dp0, (bd), ROOT, /, /boot/grub/, /grub/, /g4dll/
echo File versions: Grubutil FAT 15/02/2015, Grub4Dos 0.4.6a (>=2017 with 'vol')
echo $[] If TARGET is >= 4GB: use Grubutil FAT >= 2023, April (look in folder 'ext')
echo FATCOPY.G4B is not not compatible with Grub4Dos 0.4.5b/Grub4Dos 0.4.5c
echo $[]            is compatible with Grub4Dos for UEFI (other FAT version in 'ext'!)
echo $[]             but up to latest version (20240901) soon 'out of malloc memory' && echo
echo Remarks:
echo UTF-8 characters not supported in first 13 characters of file-name
echo Key Escape can be used to interrupt copying (with dialog) && echo
echo Example  1: FATCOPY.G4B (hd0,0)/SOMEFILE.EXT (hd0,0)/BACKUP/
echo Example  2: FATCOPY.G4B (hd0,0)/*.EXT (hd0,0)/BACKUP/EXT/
echo Example  3: FATCOPY.G4B (hd0,0)/FILE.EX* (hd0,0)/BACKUP/FILE/ /t
echo Example  4: FATCOPY.G4B (hd0,0)/SOMEFIL*.EX* (hd0,0)/BACKUP/WILDCARD/ /q
echo Example  5: fatcopy.g4b (fd0)/ (hd1,0)/backup/ /s /maxbyte:64m
echo Example  6: FATCOPY.G4B (fd0)/ (hd1,0)/BACKUP/ /sfn
echo Example  7: FATCOPY.G4B (fd0)/ (hd1,0)/BACKUP/ /s /sfn:@ /v
echo Example  8: FATCOPY.G4B (hd0,0)/Program\ Files/ (hd1,0)/Program\ Files/ /lfn /s
#TooLong#echo Example: FATCOPY.G4B (hd0,0)/Program\ Files/ (hd1,0)/BACKUP/Program\ Files/ /lfn /s /t
echo Example  9: FATCOPY.G4B "(hd0,0)/Program Files/" (hd1,0)/BACKUP/ /lfn /s /d /z
echo Example 10: FATCOPY.G4B (hd0,0)/PROGRA~1/ (hd1,0)/ /lfn:case /s /d /z /i /a
echo Example 11: FATCOPY.G4B (fd0)/IO.SYS (hd0,0) /r /a
echo Example 12: FATCOPY.G4B (hd1,0)/SOMEDI~1/ (fd1)/SOMEDI~1/ /s /lfn:@
::
:eov
echo -n > (md)%mdmem%+1
%status:~46,7%
%status:~57%
delmod -l fat > nul && delmod fat > nul
if exist LFN && delmod -l attribft.lll > nul && delmod attribft.lll > nul
#TODO#if not %result%==0 && set result=1
debug msg=3
endlocal && set result=%result%
